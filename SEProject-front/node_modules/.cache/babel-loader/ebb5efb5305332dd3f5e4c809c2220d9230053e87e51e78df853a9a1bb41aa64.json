{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { mapActions, mapState } from 'vuex';\nimport { ElMessage } from 'element-plus';\nimport * as echarts from 'echarts';\nimport { ref } from 'vue';\nexport default {\n  name: 'ExamList',\n  data() {\n    return {\n      buttons2: [{\n        label: '全部',\n        isActive: true,\n        method: this.getAll\n      },\n      // 默认第一个按钮为激活状态\n      {\n        label: '未开始',\n        isActive: false,\n        method: this.getUnstarted\n      }, {\n        label: '进行中',\n        isActive: false,\n        method: this.getPro\n      }, {\n        label: '已结束',\n        isActive: false,\n        method: this.getEnded\n      }],\n      currentPage: 1,\n      dict: {\n        'pageNum': 1,\n        'kind': 'all'\n      }\n    };\n  },\n  computed: {\n    ...mapState(['exams', 'paper', 'paperQuestions', 'user', 'examsPages']),\n    totalPages() {\n      return this.examsPages;\n    },\n    tableData() {\n      return this.exams.map(exam => ({\n        name: exam.name,\n        // introduction: exam.introduction,\n        startTime: exam.startTime,\n        endTime: exam.endTime,\n        durationTime: exam.durationTime,\n        paperId: exam.paperId,\n        examId: exam.id,\n        answerStatus: exam.answerStatus,\n        status: exam.status,\n        obj: exam.objAndSubGrade[0],\n        sub: exam.objAndSubGrade[1]\n      }));\n    }\n  },\n  methods: {\n    ...mapActions(['fetchStudentExams', 'addPaper', 'fetchExamQuestion', 'addQuestionToPaper', 'removeFromPaper', 'fetchPaperQuestion', 'updatePaperQuestions', 'deletePaper', 'fetchExamPages']),\n    getAll() {\n      console.log(\"getall\");\n      this.dict.kind = 'all';\n      this.dict.pageNum = 1;\n      this.currentPage = 1;\n      this.fetchStudentExams(this.dict);\n      this.fetchExamPages(this.dict['kind']);\n    },\n    getPro() {\n      this.dict.kind = 'pro';\n      this.dict.pageNum = 1;\n      this.currentPage = 1;\n      this.fetchStudentExams(this.dict);\n      this.fetchExamPages(this.dict['kind']);\n    },\n    getUnstarted() {\n      this.dict.kind = 'unstart';\n      this.dict.pageNum = 1;\n      this.currentPage = 1;\n      this.fetchStudentExams(this.dict);\n      this.fetchExamPages(this.dict['kind']);\n    },\n    getEnded() {\n      this.dict.kind = 'end';\n      this.dict.pageNum = 1;\n      this.currentPage = 1;\n      this.fetchStudentExams(this.dict);\n      this.fetchExamPages(this.dict['kind']);\n    },\n    handleButtonClick(method, index) {\n      this.activateButton(this.buttons2, index);\n      method(); // 调用传递的方法\n    },\n    activateButton(buttonGroup, index) {\n      buttonGroup.forEach((button, i) => {\n        button.isActive = i === index;\n        //在这里增加发送请求\n      });\n    },\n    handlePageChange(page) {\n      console.log('Page changed to:', page); // 日志记录当前页码\n      this.currentPage = page;\n      this.dict['pageNum'] = this.currentPage;\n      this.fetchStudentExams(this.dict); // 触发 Vuex action 以获取新页数据\n    },\n    async enterExam(index, row) {\n      const paperId = row.paperId; // 获取 question id\n      console.log(\"row:\", row);\n      await this.fetchExamQuestion([paperId, row]);\n      this.$router.push('/test2');\n    }\n  },\n  mounted() {\n    this.fetchStudentExams(this.dict);\n    // this.fetchExams();\n    this.fetchExamPages(this.dict.kind);\n  }\n};","map":{"version":3,"names":["mapActions","mapState","ElMessage","echarts","ref","name","data","buttons2","label","isActive","method","getAll","getUnstarted","getPro","getEnded","currentPage","dict","computed","totalPages","examsPages","tableData","exams","map","exam","startTime","endTime","durationTime","paperId","examId","id","answerStatus","status","obj","objAndSubGrade","sub","methods","console","log","kind","pageNum","fetchStudentExams","fetchExamPages","handleButtonClick","index","activateButton","buttonGroup","forEach","button","i","handlePageChange","page","enterExam","row","fetchExamQuestion","$router","push","mounted"],"sources":["C:\\Users\\86139\\Desktop\\demo_vue\\src\\components\\ExamList.vue"],"sourcesContent":["<template>\r\n    <div class=\"container\">\r\n        <div style=\"margin-top: 10px\">\r\n            <div class=\"form-row\">\r\n                <div class=\"form-group\">\r\n                    <label>考试中心</label>\r\n                </div>\r\n                <div class=\"form-group\" style=\"margin-left:47%\">\r\n                    <el-button-group class=\"ml-4\">\r\n                        <el-button\r\n                        v-for=\"(button, index) in buttons2\"\r\n                        :key=\"index\"\r\n                        :type=\"button.isActive ? 'success' : 'default'\"\r\n                        @click=\"handleButtonClick(button.method, index)\"\r\n                        >\r\n                        {{ button.label }}\r\n                        </el-button>\r\n                    </el-button-group>\r\n                </div>\r\n            </div>\r\n            <el-table :data=\"tableData\" style=\"width: 100%; margin-left: 3%;\">\r\n                <!-- 每一个列，prop为主键，label为文案 -->\r\n                <!-- 索引 -->\r\n                <el-table-column type=\"index\" width=\"50\"></el-table-column>\r\n                <el-table-column prop=\"name\" label=\"考试名称\" width=\"200\" header-align=\"left\"></el-table-column>\r\n                \r\n                <el-table-column prop=\"startTime\" label=\"开始时间\" width=\"200\" header-align=\"left\"></el-table-column>\r\n                <el-table-column prop=\"endTime\" label=\"结束时间\" width=\"200\" header-align=\"left\"></el-table-column>\r\n                    <!-- 客观题分数 -->\r\n                <el-table-column label=\"客观题分数\" width=\"120\" header-align=\"center\" align=\"center\">\r\n                  <template #default=\"scope\">\r\n                    <span v-if=\"scope.row.answerStatus === '已完成'\">{{ scope.row.obj }}</span>\r\n                  </template>\r\n                </el-table-column>\r\n\r\n                <!-- 主观题分数 -->\r\n                <el-table-column label=\"主观题分数\" width=\"120\" header-align=\"center\" align=\"center\">\r\n                  <template #default=\"scope\">\r\n                    <span v-if=\"scope.row.answerStatus === '已完成'\">{{ scope.row.sub }}</span>\r\n                  </template>\r\n                </el-table-column>\r\n                <el-table-column prop=\"durationTime\" label=\"限时\" width=\"120\" header-align=\"center\" align=\"center\" ></el-table-column>\r\n                <el-table-column label=\"操作\" width=\"90\" header-align=\"center\" :header-cell-style=\"{ paddingLeft: '0px' }\">\r\n                    <template #default=\"scope\">\r\n                    <div style=\"display: flex; justify-content: space-between;\">\r\n                        <el-button size=\"small\" type=\"primary\" :disabled=\"user.role!=='STUDENT' || scope.row.status!=='进行中' || scope.row.status==='已结束' || scope.row.answerStatus==='已完成' \" @click=\"enterExam(scope.$index, scope.row)\">开始考试</el-button>\r\n                        <!-- <el-button size=\"small\" type=\"primary\"  @click=\"dialogTableVisible = true; queryPaper(scope.$index, scope.row)\">编辑</el-button>\r\n                        <el-button size=\"small\" type=\"danger\" :disabled=\"(user.username !== scope.row.createdBy)&&(user.role!=='ADMIN')\" @click=\"handlePaperDelete(scope.$index, scope.row)\">删除</el-button>\r\n                        <el-button size=\"small\" type=\"info\" @click=\"dialogChartVisible = true; analysis(scope.$index, scope.row); \">试卷分析</el-button> -->\r\n                    </div>\r\n                    </template>\r\n                </el-table-column>\r\n            </el-table>\r\n        </div>\r\n      <div class=\"pagination\">\r\n          <el-pagination\r\n        :page-size=\"10\"\r\n        :pager-count=\"11\"\r\n        layout=\"prev, pager, next\"\r\n        :total=\"totalPages\"\r\n        @current-change=\"handlePageChange\"\r\n      />\r\n      </div>\r\n    </div>\r\n\r\n</template>\r\n\r\n\r\n\r\n<script>\r\nimport { mapActions, mapState } from 'vuex';\r\nimport { ElMessage } from 'element-plus';\r\nimport * as echarts from 'echarts';\r\nimport { ref } from 'vue';\r\n\r\nexport default {\r\n  name: 'ExamList',\r\n  data() {\r\n    return {\r\n      buttons2: [\r\n        { label: '全部', isActive: true, method: this.getAll}, // 默认第一个按钮为激活状态\r\n        { label: '未开始', isActive: false, method: this.getUnstarted },\r\n        { label: '进行中', isActive: false, method: this.getPro },\r\n        { label: '已结束', isActive: false, method: this.getEnded },\r\n      ],\r\n      currentPage:1,\r\n      dict: {'pageNum':1, 'kind':'all'},\r\n    }\r\n    \r\n  },\r\n  computed: {\r\n      ...mapState(['exams', 'paper', 'paperQuestions', 'user', 'examsPages']),\r\n      totalPages() {\r\n      return this.examsPages ;\r\n    },\r\n    tableData() {\r\n      return this.exams.map(exam => ({\r\n        name: exam.name,\r\n        // introduction: exam.introduction,\r\n        startTime: exam.startTime,\r\n        endTime: exam.endTime,\r\n        durationTime: exam.durationTime,\r\n        paperId: exam.paperId,\r\n        examId: exam.id,\r\n        answerStatus:exam.answerStatus,\r\n        status:exam.status,\r\n        obj:exam.objAndSubGrade[0],\r\n        sub:exam.objAndSubGrade[1]\r\n      }));\r\n    },\r\n  },\r\n\r\n  methods: {\r\n    ...mapActions(['fetchStudentExams', 'addPaper', 'fetchExamQuestion', 'addQuestionToPaper', 'removeFromPaper', 'fetchPaperQuestion', 'updatePaperQuestions', 'deletePaper', 'fetchExamPages']),\r\n    getAll(){\r\n      console.log(\"getall\");\r\n      this.dict.kind = 'all';\r\n      this.dict.pageNum = 1;\r\n      this.currentPage = 1;\r\n      this.fetchStudentExams(this.dict);\r\n      this.fetchExamPages(this.dict['kind']);\r\n    },\r\n    getPro(){\r\n      this.dict.kind = 'pro';\r\n      this.dict.pageNum = 1;\r\n      this.currentPage = 1;\r\n      this.fetchStudentExams(this.dict);\r\n      this.fetchExamPages(this.dict['kind']);\r\n    },\r\n    getUnstarted(){\r\n      this.dict.kind = 'unstart';\r\n      this.dict.pageNum = 1;\r\n      this.currentPage = 1;\r\n      this.fetchStudentExams(this.dict);\r\n      this.fetchExamPages(this.dict['kind']);\r\n    },\r\n    getEnded(){\r\n      this.dict.kind = 'end';\r\n      this.dict.pageNum = 1;\r\n      this.currentPage = 1;\r\n      this.fetchStudentExams(this.dict);\r\n      this.fetchExamPages(this.dict['kind']);\r\n    },\r\n    handleButtonClick(method, index) {\r\n      this.activateButton(this.buttons2, index);\r\n      method(); // 调用传递的方法\r\n    },\r\n    activateButton(buttonGroup, index) {\r\n      buttonGroup.forEach((button, i) => {\r\n        button.isActive = i === index;\r\n        //在这里增加发送请求\r\n      });\r\n    },\r\n  handlePageChange(page) {\r\n      console.log('Page changed to:', page); // 日志记录当前页码\r\n      this.currentPage = page;\r\n      this.dict['pageNum'] = this.currentPage;\r\n      this.fetchStudentExams(this.dict); // 触发 Vuex action 以获取新页数据\r\n  },\r\n\r\n    async enterExam(index, row){\r\n      const paperId = row.paperId; // 获取 question id\r\n      console.log(\"row:\",row);\r\n      await this.fetchExamQuestion([paperId, row]);\r\n      this.$router.push('/test2');\r\n    },\r\n  },\r\n  mounted() {\r\n      this.fetchStudentExams(this.dict);\r\n      // this.fetchExams();\r\n      this.fetchExamPages(this.dict.kind);\r\n  }\r\n};\r\n\r\n\r\n\r\n\r\n</script>\r\n\r\n<style scoped>\r\n.form-group {\r\n  flex: 1;\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin: 0 15px;\r\n}\r\n.container {\r\n  flex: 1;\r\n  background-color: #fff;\r\n  border-radius: 8px;\r\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\r\n  overflow: auto;\r\n  display: flex;\r\n  height: 711px;\r\n  flex-direction: column;\r\n}\r\n.form-row {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  margin-bottom: 15px;\r\n  margin-left: 1px;\r\n}\r\n\r\n.pagination {\r\n  position: absolute;\r\n  bottom: 40px; /* 距离底部的距离 */\r\n  left: 58%; /* 水平居中 */\r\n  transform: translateX(-50%); /* 水平居中 */\r\n  display: flex;\r\n    justify-content: center;\r\n  align-items: center;\r\n  /* justify-content: space-between; */\r\n  width: 200px; /* 指定pagination的宽度 */\r\n}\r\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}