{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { createStore } from 'vuex';\nimport axios from 'axios';\nconst store = createStore({\n  state: {\n    questions: [],\n    exams: [],\n    user: null\n  },\n  mutations: {\n    setQuestions(state, questions) {\n      state.questions = questions;\n    },\n    addQuestion(state, question) {\n      state.questions.push(question);\n    },\n    setExams(state, exams) {\n      state.exams = exams;\n    },\n    setUser(state, user) {\n      state.user = user;\n    }\n  },\n  actions: {\n    async fetchQuestions({\n      commit\n    }) {\n      const response = await axios.get('/api/questions');\n      commit('setQuestions', response.data);\n    },\n    async addQuestion({\n      commit\n    }, question) {\n      const response = await axios.post('/api/questions', question);\n      commit('addQuestion', response.data);\n    },\n    async fetchExams({\n      commit\n    }) {\n      const response = await axios.get('/api/exams');\n      commit('setExams', response.data);\n    },\n    async login({\n      commit\n    }, credentials) {\n      const response = await axios.post('/api/login', credentials);\n      commit('setUser', response.data.user);\n    }\n  }\n});\nexport default store;","map":{"version":3,"names":["createStore","axios","store","state","questions","exams","user","mutations","setQuestions","addQuestion","question","push","setExams","setUser","actions","fetchQuestions","commit","response","get","data","post","fetchExams","login","credentials"],"sources":["C:/Users/wu/Desktop/软工/springboot_vue/demo_vue/src/store/index.js"],"sourcesContent":["import { createStore } from 'vuex';\nimport axios from 'axios';\n\nconst store = createStore({\n  state: {\n    questions: [],\n    exams: [],\n    user: null,\n  },\n  mutations: {\n    setQuestions(state, questions) {\n      state.questions = questions;\n    },\n    addQuestion(state, question) {\n      state.questions.push(question);\n    },\n    setExams(state, exams) {\n      state.exams = exams;\n    },\n    setUser(state, user) {\n      state.user = user;\n    }\n  },\n  actions: {\n    async fetchQuestions({ commit }) {\n      const response = await axios.get('/api/questions');\n      commit('setQuestions', response.data);\n    },\n    async addQuestion({ commit }, question) {\n      const response = await axios.post('/api/questions', question);\n      commit('addQuestion', response.data);\n    },\n    async fetchExams({ commit }) {\n      const response = await axios.get('/api/exams');\n      commit('setExams', response.data);\n    },\n    async login({ commit }, credentials) {\n      const response = await axios.post('/api/login', credentials);\n      commit('setUser', response.data.user);\n    }\n  }\n});\n\nexport default store;\n"],"mappings":";AAAA,SAASA,WAAW,QAAQ,MAAM;AAClC,OAAOC,KAAK,MAAM,OAAO;AAEzB,MAAMC,KAAK,GAAGF,WAAW,CAAC;EACxBG,KAAK,EAAE;IACLC,SAAS,EAAE,EAAE;IACbC,KAAK,EAAE,EAAE;IACTC,IAAI,EAAE;EACR,CAAC;EACDC,SAAS,EAAE;IACTC,YAAYA,CAACL,KAAK,EAAEC,SAAS,EAAE;MAC7BD,KAAK,CAACC,SAAS,GAAGA,SAAS;IAC7B,CAAC;IACDK,WAAWA,CAACN,KAAK,EAAEO,QAAQ,EAAE;MAC3BP,KAAK,CAACC,SAAS,CAACO,IAAI,CAACD,QAAQ,CAAC;IAChC,CAAC;IACDE,QAAQA,CAACT,KAAK,EAAEE,KAAK,EAAE;MACrBF,KAAK,CAACE,KAAK,GAAGA,KAAK;IACrB,CAAC;IACDQ,OAAOA,CAACV,KAAK,EAAEG,IAAI,EAAE;MACnBH,KAAK,CAACG,IAAI,GAAGA,IAAI;IACnB;EACF,CAAC;EACDQ,OAAO,EAAE;IACP,MAAMC,cAAcA,CAAC;MAAEC;IAAO,CAAC,EAAE;MAC/B,MAAMC,QAAQ,GAAG,MAAMhB,KAAK,CAACiB,GAAG,CAAC,gBAAgB,CAAC;MAClDF,MAAM,CAAC,cAAc,EAAEC,QAAQ,CAACE,IAAI,CAAC;IACvC,CAAC;IACD,MAAMV,WAAWA,CAAC;MAAEO;IAAO,CAAC,EAAEN,QAAQ,EAAE;MACtC,MAAMO,QAAQ,GAAG,MAAMhB,KAAK,CAACmB,IAAI,CAAC,gBAAgB,EAAEV,QAAQ,CAAC;MAC7DM,MAAM,CAAC,aAAa,EAAEC,QAAQ,CAACE,IAAI,CAAC;IACtC,CAAC;IACD,MAAME,UAAUA,CAAC;MAAEL;IAAO,CAAC,EAAE;MAC3B,MAAMC,QAAQ,GAAG,MAAMhB,KAAK,CAACiB,GAAG,CAAC,YAAY,CAAC;MAC9CF,MAAM,CAAC,UAAU,EAAEC,QAAQ,CAACE,IAAI,CAAC;IACnC,CAAC;IACD,MAAMG,KAAKA,CAAC;MAAEN;IAAO,CAAC,EAAEO,WAAW,EAAE;MACnC,MAAMN,QAAQ,GAAG,MAAMhB,KAAK,CAACmB,IAAI,CAAC,YAAY,EAAEG,WAAW,CAAC;MAC5DP,MAAM,CAAC,SAAS,EAAEC,QAAQ,CAACE,IAAI,CAACb,IAAI,CAAC;IACvC;EACF;AACF,CAAC,CAAC;AAEF,eAAeJ,KAAK","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}