{"ast":null,"code":"import { mapActions, mapState } from 'vuex';\nexport default {\n  name: 'SearchQuestion',\n  data() {\n    return {\n      tag: '',\n      questionType: '',\n      difficulty: '',\n      currentPage: 1,\n      pageSize: 5\n    };\n  },\n  computed: {\n    ...mapState(['questions']),\n    filteredQuestions() {\n      return this.questions.filter(question => {\n        const matchesKeyword = question.question.includes(this.tag);\n        const matchesType = this.questionType ? question.questionType === this.questionType : true;\n        const matchesDifficulty = this.difficulty ? question.difficulty === this.difficulty : true;\n        return matchesKeyword && matchesType && matchesDifficulty;\n      });\n    },\n    totalPages() {\n      return Math.ceil(this.filteredQuestions.length / this.pageSize);\n    },\n    paginatedQuestions() {\n      const start = (this.currentPage - 1) * this.pageSize;\n      return this.filteredQuestions.slice(start, start + this.pageSize);\n    }\n  },\n  methods: {\n    ...mapActions(['fetchQuestions']),\n    search() {\n      this.currentPage = 1;\n    },\n    prevPage() {\n      if (this.currentPage > 1) {\n        this.currentPage--;\n      }\n    },\n    nextPage() {\n      if (this.currentPage < this.totalPages) {\n        this.currentPage++;\n      }\n    }\n  },\n  mounted() {\n    this.fetchQuestions();\n  }\n};","map":{"version":3,"names":["mapActions","mapState","name","data","tag","questionType","difficulty","currentPage","pageSize","computed","filteredQuestions","questions","filter","question","matchesKeyword","includes","matchesType","matchesDifficulty","totalPages","Math","ceil","length","paginatedQuestions","start","slice","methods","search","prevPage","nextPage","mounted","fetchQuestions"],"sources":["C:\\Users\\wu\\Desktop\\软工\\springboot_vue\\demo_vue\\src\\components\\SearchQuestion.vue"],"sourcesContent":["<template>\r\n  <div class=\"search-question\">\r\n    <h3>查询试题</h3>\r\n    <div class=\"search-filters\">\r\n      <div class=\"form-row\">\r\n        <div class=\"form-group\">\r\n          <label for=\"tag\">关键字:</label>\r\n          <input type=\"text\" id=\"tag\" v-model=\"tag\" placeholder=\"请输入关键字\" style=\"width: 300px; margin-left: 1px;\" />\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <label for=\"question-type\">题目类型:</label>\r\n          <select id=\"question-type\" v-model=\"questionType\">\r\n            <option value=\"选择题\">选择题</option>\r\n            <option value=\"判断题\">判断题</option>\r\n            <option value=\"填空题\">填空题</option>\r\n            <option value=\"问答题\">问答题</option>\r\n          </select>\r\n        </div>\r\n\r\n        <div class=\"form-group\" style=\"width: 150px;\">\r\n          <label for=\"difficulty\">难度等级:</label>\r\n          <select id=\"difficulty\" v-model=\"difficulty\" style=\"width: 100px;\">\r\n            <option value=\"简单\">简单</option>\r\n            <option value=\"中等\">中等</option>\r\n            <option value=\"困难\">困难</option>\r\n          </select>\r\n        </div>\r\n        <button @click=\"search\" class=\"search-button\" style=\"padding: 8px 15px;\">搜索</button>\r\n      </div>\r\n    </div>\r\n    <div class=\"questions-list\">\r\n      <ul>\r\n        <li v-for=\"question in paginatedQuestions\" :key=\"question.id\">\r\n          {{ question.question }}\r\n        </li>\r\n      </ul>\r\n      <div class=\"pagination\">\r\n        <button @click=\"prevPage\" :disabled=\"currentPage === 1\" style=\"padding: 5px 10px;\">上一页</button>\r\n        <button @click=\"nextPage\" :disabled=\"currentPage === totalPages\" style=\"padding: 5px 10px;\">下一页</button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { mapActions, mapState } from 'vuex';\r\n\r\nexport default {\r\n  name: 'SearchQuestion',\r\n  data() {\r\n    return {\r\n      tag: '',\r\n      questionType: '',\r\n      difficulty: '',\r\n      currentPage: 1,\r\n      pageSize: 5\r\n    };\r\n  },\r\n  computed: {\r\n    ...mapState(['questions']),\r\n    filteredQuestions() {\r\n      return this.questions.filter(question => {\r\n        const matchesKeyword = question.question.includes(this.tag);\r\n        const matchesType = this.questionType ? question.questionType === this.questionType : true;\r\n        const matchesDifficulty = this.difficulty ? question.difficulty === this.difficulty : true;\r\n        return matchesKeyword && matchesType && matchesDifficulty;\r\n      });\r\n    },\r\n    totalPages() {\r\n      return Math.ceil(this.filteredQuestions.length / this.pageSize);\r\n    },\r\n    paginatedQuestions() {\r\n      const start = (this.currentPage - 1) * this.pageSize;\r\n      return this.filteredQuestions.slice(start, start + this.pageSize);\r\n    }\r\n  },\r\n  methods: {\r\n    ...mapActions(['fetchQuestions']),\r\n    search() {\r\n      this.currentPage = 1;\r\n    },\r\n    prevPage() {\r\n      if (this.currentPage > 1) {\r\n        this.currentPage--;\r\n      }\r\n    },\r\n    nextPage() {\r\n      if (this.currentPage < this.totalPages) {\r\n        this.currentPage++;\r\n      }\r\n    }\r\n  },\r\n  mounted() {\r\n    this.fetchQuestions();\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.search-question {\r\n  flex: 1;\r\n  background-color: #fff;\r\n  border-radius: 8px;\r\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\r\n  overflow: auto;\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n\r\nh3 {\r\n  text-align: center;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.search-filters {\r\n  display: flex;\r\n  justify-content: flex-start;\r\n  flex-wrap: wrap;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.search-filters .form-group {\r\n  display: flex;\r\n  align-items: center;\r\n  margin: 0 10px;\r\n}\r\n\r\nlabel {\r\n  margin-bottom: 0;\r\n  font-weight: bold;\r\n}\r\n\r\ninput, select {\r\n  padding: 8px;\r\n  border: 1px solid #dcdfe6;\r\n  border-radius: 4px;\r\n  font-size: 14px;\r\n}\r\n\r\n.search-button {\r\n  background-color: #409eff;\r\n  color: #fff;\r\n  padding: 8px 15px;\r\n  border: none;\r\n  border-radius: 4px;\r\n  font-size: 14px;\r\n  cursor: pointer;\r\n  margin-left: 10px;\r\n}\r\n\r\n.search-button:hover {\r\n  background-color: #66b1ff;\r\n}\r\n\r\n.questions-list ul {\r\n  list-style-type: none;\r\n  padding: 0;\r\n}\r\n\r\n.questions-list li {\r\n  border-bottom: 1px solid #dcdfe6;\r\n  padding: 10px 0;\r\n}\r\n\r\n.pagination {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  margin-top: 20px;\r\n  width: 300px;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n}\r\n\r\n.pagination button {\r\n  background-color: #409eff;\r\n  color: #fff;\r\n  padding: 5px 10px;\r\n  border: none;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n  width: 100px;\r\n}\r\n\r\n.pagination button:disabled {\r\n  background-color: #a0cfff;\r\n}\r\n\r\n.form-row {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  margin-bottom: 15px;\r\n}\r\n\r\n.input-question {\r\n  flex: 1;\r\n  background-color: #fff;\r\n  border-radius: 8px;\r\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\r\n  overflow: auto;\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n\r\nh2 {\r\n  text-align: center;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.tabs {\r\n  display: flex;\r\n  justify-content: center;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.tabs button {\r\n  background-color: #409eff;\r\n  color: #fff;\r\n  border: none;\r\n  padding: 10px 20px;\r\n  cursor: pointer;\r\n  margin: 0 5px;\r\n}\r\n\r\n.tabs button.active {\r\n  background-color: #66b1ff;\r\n}\r\n\r\n.form-container, .search-container {\r\n  background: #fff;\r\n  padding: 20px;\r\n  border-radius: 8px;\r\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\nh3 {\r\n  text-align: center;\r\n  margin-bottom: 20px;\r\n}\r\n\r\nform {\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n\r\n.form-row {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  margin-bottom: 15px;\r\n  margin-left: 1px;\r\n}\r\n\r\n.form-group {\r\n  flex: 1;\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin: 0 15px;\r\n}\r\n\r\n.form-group:first-child {\r\n  margin-left: 0;\r\n}\r\n\r\n.form-group:last-child {\r\n  margin-right: 0;\r\n}\r\n\r\nlabel {\r\n  margin-bottom: 5px;\r\n  font-weight: bold;\r\n}\r\n\r\ninput, select, textarea {\r\n  padding: 10px;\r\n  border: 1px solid #dcdfe6;\r\n  border-radius: 4px;\r\n  font-size: 14px;\r\n  width: 100%;\r\n}\r\n\r\ntextarea {\r\n  resize: vertical;\r\n}\r\n\r\ntextarea#question, textarea#answer, textarea#analysis {\r\n  height: 100px;\r\n}\r\n\r\n.submit-button {\r\n  background-color: #409eff;\r\n  color: #fff;\r\n  padding: 10px 20px;\r\n  border: none;\r\n  border-radius: 4px;\r\n  font-size: 16px;\r\n  cursor: pointer;\r\n  align-self: center;\r\n  margin-top: 20px;\r\n}\r\n\r\n.submit-button:hover {\r\n  background-color: #66b1ff;\r\n}\r\n</style>\r\n"],"mappings":"AA6CA,SAASA,UAAU,EAAEC,QAAO,QAAS,MAAM;AAE3C,eAAe;EACbC,IAAI,EAAE,gBAAgB;EACtBC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,GAAG,EAAE,EAAE;MACPC,YAAY,EAAE,EAAE;MAChBC,UAAU,EAAE,EAAE;MACdC,WAAW,EAAE,CAAC;MACdC,QAAQ,EAAE;IACZ,CAAC;EACH,CAAC;EACDC,QAAQ,EAAE;IACR,GAAGR,QAAQ,CAAC,CAAC,WAAW,CAAC,CAAC;IAC1BS,iBAAiBA,CAAA,EAAG;MAClB,OAAO,IAAI,CAACC,SAAS,CAACC,MAAM,CAACC,QAAO,IAAK;QACvC,MAAMC,cAAa,GAAID,QAAQ,CAACA,QAAQ,CAACE,QAAQ,CAAC,IAAI,CAACX,GAAG,CAAC;QAC3D,MAAMY,WAAU,GAAI,IAAI,CAACX,YAAW,GAAIQ,QAAQ,CAACR,YAAW,KAAM,IAAI,CAACA,YAAW,GAAI,IAAI;QAC1F,MAAMY,iBAAgB,GAAI,IAAI,CAACX,UAAS,GAAIO,QAAQ,CAACP,UAAS,KAAM,IAAI,CAACA,UAAS,GAAI,IAAI;QAC1F,OAAOQ,cAAa,IAAKE,WAAU,IAAKC,iBAAiB;MAC3D,CAAC,CAAC;IACJ,CAAC;IACDC,UAAUA,CAAA,EAAG;MACX,OAAOC,IAAI,CAACC,IAAI,CAAC,IAAI,CAACV,iBAAiB,CAACW,MAAK,GAAI,IAAI,CAACb,QAAQ,CAAC;IACjE,CAAC;IACDc,kBAAkBA,CAAA,EAAG;MACnB,MAAMC,KAAI,GAAI,CAAC,IAAI,CAAChB,WAAU,GAAI,CAAC,IAAI,IAAI,CAACC,QAAQ;MACpD,OAAO,IAAI,CAACE,iBAAiB,CAACc,KAAK,CAACD,KAAK,EAAEA,KAAI,GAAI,IAAI,CAACf,QAAQ,CAAC;IACnE;EACF,CAAC;EACDiB,OAAO,EAAE;IACP,GAAGzB,UAAU,CAAC,CAAC,gBAAgB,CAAC,CAAC;IACjC0B,MAAMA,CAAA,EAAG;MACP,IAAI,CAACnB,WAAU,GAAI,CAAC;IACtB,CAAC;IACDoB,QAAQA,CAAA,EAAG;MACT,IAAI,IAAI,CAACpB,WAAU,GAAI,CAAC,EAAE;QACxB,IAAI,CAACA,WAAW,EAAE;MACpB;IACF,CAAC;IACDqB,QAAQA,CAAA,EAAG;MACT,IAAI,IAAI,CAACrB,WAAU,GAAI,IAAI,CAACW,UAAU,EAAE;QACtC,IAAI,CAACX,WAAW,EAAE;MACpB;IACF;EACF,CAAC;EACDsB,OAAOA,CAAA,EAAG;IACR,IAAI,CAACC,cAAc,CAAC,CAAC;EACvB;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}