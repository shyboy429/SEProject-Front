{"ast":null,"code":"import { openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-dc87507c\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  id: \"myChart\",\n  style: {\n    \"width\": \"600px\",\n    \"height\": \"400px\"\n  }\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1);\n}","map":{"version":3,"names":["id","style","_createElementBlock","_hoisted_1"],"sources":["C:\\Users\\86139\\Desktop\\demo_vue\\src\\components\\Test.vue"],"sourcesContent":["<template>\r\n  <div id=\"myChart\" style=\"width: 600px; height: 400px;\"></div>\r\n</template>\r\n\r\n<script>\r\nimport * as echarts from 'echarts';\r\n\r\nexport default {\r\n  name: 'PieChart',\r\n  data() {\r\n    return {\r\n      chart: null,\r\n      paperData: [\r\n        { id: 1, type: '选择题' },\r\n        { id: 2, type: '填空题' },\r\n        { id: 3, type: '选择题' },\r\n        { id: 4, type: '问答题' },\r\n        { id: 5, type: '选择题' },\r\n        { id: 6, type: '填空题' },\r\n        // 更多数据\r\n      ],\r\n    };\r\n  },\r\n  mounted() {\r\n    this.initChart();\r\n  },\r\n  methods: {\r\n    initChart() {\r\n      this.chart = echarts.init(document.getElementById('myChart'));\r\n\r\n      // 计算每种类型的数量\r\n      const typeCounts = this.paperData.reduce((acc, item) => {\r\n        acc[item.type] = (acc[item.type] || 0) + 1;\r\n        return acc;\r\n      }, {});\r\n\r\n      // 将计算结果转换为 ECharts 数据格式\r\n      const data = Object.keys(typeCounts).map(type => {\r\n        return { value: typeCounts[type], name: type };\r\n      });\r\n\r\n      const option = {\r\n        title: {\r\n          text: '题目类型占比图:',\r\n          left: 'left'\r\n        },\r\n        tooltip: {\r\n          trigger: 'item',\r\n          formatter: '{a} <br/>{b} : {c} ({d}%)'\r\n        },\r\n        legend: {\r\n          type: 'scroll',\r\n          orient: 'vertical',\r\n          right: 0,\r\n          top: 'center',\r\n          icon: 'circle',\r\n          selectedMode: 'multiple',\r\n          formatter: (name) => {\r\n            let total = data.reduce((sum, item) => sum + item.value, 0);\r\n            let item = data.find(item => item.name === name);\r\n            let p = (item.value / total * 100).toFixed(2);\r\n            return `${name}  |  ${p}%`;\r\n          }\r\n        },\r\n        series: [\r\n          {\r\n            name: '题目类型占比',\r\n            type: 'pie',\r\n            radius: '60%',\r\n            center: ['25%', '55%'],\r\n            selectedMode: 'single',\r\n            data: data,\r\n            label: {\r\n              show: true,\r\n              formatter: '{b}: {c} ({d}%)'\r\n            },\r\n            itemStyle: {\r\n              emphasis: {\r\n                shadowBlur: 10,\r\n                shadowOffsetX: 0,\r\n                shadowColor: 'rgba(0, 0, 0, 0.5)'\r\n              }\r\n            }\r\n          }\r\n        ]\r\n      };\r\n\r\n      this.chart.setOption(option);\r\n\r\n      window.addEventListener('resize', () => {\r\n        this.chart.resize();\r\n      });\r\n    }\r\n  },\r\n  beforeDestroy() {\r\n    if (this.chart) {\r\n      window.removeEventListener('resize', this.chart.resize);\r\n      this.chart.dispose();\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n#myChart {\r\n  width: 100%;\r\n  height: 100%;\r\n}\r\n</style>\r\n"],"mappings":";;;EACOA,EAAE,EAAC,SAAS;EAACC,KAAoC,EAApC;IAAA;IAAA;EAAA;;;uBAAlBC,mBAAA,CAA6D,OAA7DC,UAA6D","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}