{"ast":null,"code":"export default {\n  data() {\n    return {\n      currentPage: 1,\n      pageSize: 5,\n      tableData: [{\n        question: '这是一个假问题?',\n        questionType: '选择题',\n        tag: '物理',\n        difficulty: '中等',\n        analysis: '这是一个问题的解析'\n      }]\n    };\n  },\n  computed: {\n    totalPages() {\n      return Math.ceil(this.tableData.length / this.pageSize);\n    },\n    paginatedQuestions() {\n      const start = (this.currentPage - 1) * this.pageSize;\n      return this.tableData.slice(start, start + this.pageSize);\n    }\n  },\n  methods: {\n    prevPage() {\n      if (this.currentPage > 1) {\n        this.currentPage--;\n      }\n    },\n    nextPage() {\n      if (this.currentPage < this.totalPages) {\n        this.currentPage++;\n      }\n    },\n    handleEdit(index, row) {\n      console.log('编辑', index, row);\n    },\n    handleDelete(index, row) {\n      console.log('删除', index, row);\n      this.tableData.splice(index, 1);\n    }\n  }\n};","map":{"version":3,"names":["data","currentPage","pageSize","tableData","question","questionType","tag","difficulty","analysis","computed","totalPages","Math","ceil","length","paginatedQuestions","start","slice","methods","prevPage","nextPage","handleEdit","index","row","console","log","handleDelete","splice"],"sources":["C:\\Users\\86139\\Desktop\\demo_vue\\src\\components\\Test.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <!-- 表格数据绑定和默认宽度 -->\r\n    <el-table :data=\"tableData\" style=\"width:100%\">\r\n      <!-- 每一个列，prop为主键，label为文案 -->\r\n      <!-- 索引 -->\r\n      <el-table-column type=\"index\" width=\"50\"></el-table-column>\r\n      <el-table-column prop=\"question\" label=\"问题\" width=\"300\"></el-table-column>\r\n      <el-table-column prop=\"questionType\" label=\"题型\" width=\"180\"></el-table-column>\r\n      <el-table-column prop=\"tag\" label=\"标签\" width=\"180\"></el-table-column>\r\n      <el-table-column prop=\"difficulty\" label=\"难度\" width=\"180\"></el-table-column>\r\n      <el-table-column prop=\"answer\" label=\"答案\" width=\"180\"></el-table-column>\r\n      <el-table-column prop=\"analysis\" label=\"解析\" width=\"300\"></el-table-column>\r\n      <el-table-column label=\"操作\" width=\"180\">\r\n        <template #default=\"scope\">\r\n          <el-button size=\"small\" @click=\"handleEdit(scope.$index,scope.row)\">编辑</el-button>\r\n          <el-button size=\"small\" type=\"danger\" @click=\"handleDelete(scope.$index,scope.row)\">删除</el-button>\r\n        </template>\r\n      </el-table-column>\r\n    </el-table>\r\n\r\n    <div class=\"pagination\">\r\n      <button @click=\"prevPage\" :disabled=\"currentPage === 1\" style=\"padding: 5px 10px;\">上一页</button>\r\n      <button @click=\"nextPage\" :disabled=\"currentPage === totalPages\" style=\"padding: 5px 10px;\">下一页</button>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      currentPage: 1,\r\n      pageSize: 5,\r\n      tableData: [\r\n        { \r\n          question: '这是一个假问题?',\r\n          questionType: '选择题',\r\n          tag: '物理',\r\n          difficulty: '中等',\r\n          analysis: '这是一个问题的解析'\r\n        }\r\n      ]\r\n    };\r\n  },\r\n  computed: {\r\n    totalPages() {\r\n      return Math.ceil(this.tableData.length / this.pageSize);\r\n    },\r\n    paginatedQuestions() {\r\n      const start = (this.currentPage - 1) * this.pageSize;\r\n      return this.tableData.slice(start, start + this.pageSize);\r\n    }\r\n  },\r\n  methods: {\r\n    prevPage() {\r\n      if (this.currentPage > 1) {\r\n        this.currentPage--;\r\n      }\r\n    },\r\n    nextPage() {\r\n      if (this.currentPage < this.totalPages) {\r\n        this.currentPage++;\r\n      }\r\n    },\r\n    handleEdit(index, row) {\r\n      console.log('编辑', index, row);\r\n    },\r\n    handleDelete(index, row) {\r\n      console.log('删除', index, row);\r\n      this.tableData.splice(index, 1);\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style>\r\n.pagination {\r\n  display: flex;\r\n  justify-content: center;\r\n  margin-top: 20px;\r\n}\r\n\r\n.pagination button {\r\n  background-color: #409eff;\r\n  color: #fff;\r\n  padding: 5px 10px;\r\n  border: none;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n  margin: 0 5px;\r\n}\r\n\r\n.pagination button:disabled {\r\n  background-color: #a0cfff;\r\n}\r\n</style>\r\n"],"mappings":"AA6BA,eAAe;EACbA,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,WAAW,EAAE,CAAC;MACdC,QAAQ,EAAE,CAAC;MACXC,SAAS,EAAE,CACT;QACEC,QAAQ,EAAE,UAAU;QACpBC,YAAY,EAAE,KAAK;QACnBC,GAAG,EAAE,IAAI;QACTC,UAAU,EAAE,IAAI;QAChBC,QAAQ,EAAE;MACZ;IAEJ,CAAC;EACH,CAAC;EACDC,QAAQ,EAAE;IACRC,UAAUA,CAAA,EAAG;MACX,OAAOC,IAAI,CAACC,IAAI,CAAC,IAAI,CAACT,SAAS,CAACU,MAAK,GAAI,IAAI,CAACX,QAAQ,CAAC;IACzD,CAAC;IACDY,kBAAkBA,CAAA,EAAG;MACnB,MAAMC,KAAI,GAAI,CAAC,IAAI,CAACd,WAAU,GAAI,CAAC,IAAI,IAAI,CAACC,QAAQ;MACpD,OAAO,IAAI,CAACC,SAAS,CAACa,KAAK,CAACD,KAAK,EAAEA,KAAI,GAAI,IAAI,CAACb,QAAQ,CAAC;IAC3D;EACF,CAAC;EACDe,OAAO,EAAE;IACPC,QAAQA,CAAA,EAAG;MACT,IAAI,IAAI,CAACjB,WAAU,GAAI,CAAC,EAAE;QACxB,IAAI,CAACA,WAAW,EAAE;MACpB;IACF,CAAC;IACDkB,QAAQA,CAAA,EAAG;MACT,IAAI,IAAI,CAAClB,WAAU,GAAI,IAAI,CAACS,UAAU,EAAE;QACtC,IAAI,CAACT,WAAW,EAAE;MACpB;IACF,CAAC;IACDmB,UAAUA,CAACC,KAAK,EAAEC,GAAG,EAAE;MACrBC,OAAO,CAACC,GAAG,CAAC,IAAI,EAAEH,KAAK,EAAEC,GAAG,CAAC;IAC/B,CAAC;IACDG,YAAYA,CAACJ,KAAK,EAAEC,GAAG,EAAE;MACvBC,OAAO,CAACC,GAAG,CAAC,IAAI,EAAEH,KAAK,EAAEC,GAAG,CAAC;MAC7B,IAAI,CAACnB,SAAS,CAACuB,MAAM,CAACL,KAAK,EAAE,CAAC,CAAC;IACjC;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}