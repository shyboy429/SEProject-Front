{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport SideBar from '../components/SideBar.vue';\nimport InputQuestion from '../components/InputQuestion.vue';\nimport SearchQuestion from '../components/SearchQuestion.vue';\nimport PaperManagement from '../components/PaperManagement.vue';\nimport Shouye from '../components/Shouye.vue';\nimport ExamManagement from '../components/ExamManagement.vue';\nimport HeaderNav from '../components/HeaderNav.vue';\nimport { mapState, mapMutations, mapGetters, mapActions } from 'vuex';\nimport { ElMessage } from 'element-plus';\nexport default {\n  name: 'Home',\n  // const headerVisible = ref(true),\n  components: {\n    SideBar,\n    InputQuestion,\n    SearchQuestion,\n    PaperManagement,\n    Shouye,\n    ExamManagement,\n    HeaderNav\n  },\n  data() {\n    return {\n      currentContent: null,\n      alertMessage: '',\n      dialogTableVisible: false,\n      tableRowEditId: null,\n      // 控制可编辑的每一行\n      tableColumnEditIndex: null // 控制可编辑的每一列\n    };\n  },\n  computed: {\n    ...mapState(['examQuestions', 'examAnswers', 'examInfo', 'user', 'totalCount2', 'users']),\n    userData() {\n      return this.users.map(user => ({\n        username: user.username,\n        role: user.role,\n        role2: user.role === 'ADMIN' ? '管理员' : user.role === 'TEACHER' ? '教师' : user.role === 'STUDENT' ? '学生' : ''\n      }));\n    }\n  },\n  methods: {\n    ...mapActions(['fetchUsers', 'updateUser']),\n    showContent(contentType) {\n      if (contentType === 'input') {\n        this.currentContent = 'InputQuestion';\n      } else if (contentType === 'search') {\n        this.currentContent = 'SearchQuestion';\n      } else if (contentType === 'paper') {\n        this.currentContent = 'PaperManagement';\n      } else if (contentType === 'shouye') {\n        this.currentContent = 'Shouye';\n      } else if (contentType === 'exam') {\n        this.currentContent = 'ExamManagement';\n      }\n    },\n    showTable(flag) {\n      if (flag) {\n        this.dialogTableVisible = true;\n      }\n    },\n    showUnitInput(row, column) {\n      // 赋值给定义的变量\n      this.tableRowEditId = row.id; // 确定点击的单元格在哪行\n      this.tableColumnEditIndex = column.id; // 确定点击的单元格在哪列\n    },\n    blurValueInput(row, column) {\n      this.tableRowEditId = null;\n      this.tableColumnEditIndex = null;\n      // 在此处调接口传数据\n    },\n    updateRole(row) {\n      this.$nextTick(() => {\n        this.blurValueInput(row);\n      });\n    },\n    async handleSubmit(row) {\n      // console.log(this.questions)\n      // console.log('row',row)\n      // console.log('row properties:', Object.keys(row));\n      // const plainRow = JSON.parse(JSON.stringify(row));\n      const newUser = {\n        adminName: this.user.username,\n        username: row.username,\n        role: row.role2 === '管理员' ? 'ADMIN' : row.role2 === '教师' ? 'TEACHER' : row.role2 === '学生' ? 'STUDENT' : row.role // 默认值，如果没有匹配到\n      };\n      // console.log(this.questions)\n      const result = await this.updateUser(newUser);\n      if (result.success !== 'error') {\n        this.success('修改成功');\n      } else {\n        this.error(result.error);\n      }\n      // console.log('编辑操作:', index, row);\n      // this.success('提交成功');\n      // this.queryParams.pageNum = this.currentPage;\n      this.fetchUsers();\n    },\n    roleLabel(role) {\n      switch (role) {\n        case 'ADMIN':\n          return '管理员';\n        case 'TEACHER':\n          return '教师';\n        case 'STUDENT':\n          return '学生';\n        default:\n          return '';\n      }\n    },\n    success(ms) {\n      ElMessage({\n        message: ms,\n        type: 'success',\n        customClass: 'custom-message-class',\n        duration: 3000,\n        showClose: true\n      });\n    },\n    warning(ms) {\n      ElMessage({\n        message: ms,\n        type: 'warning',\n        customClass: 'custom-message-class',\n        duration: 3000,\n        showClose: true\n      });\n    },\n    error(ms) {\n      ElMessage({\n        message: ms,\n        type: 'error',\n        customClass: 'custom-message-class',\n        duration: 3000,\n        showClose: true\n      });\n    }\n  },\n  created() {\n    if (!this.user || this.user.role === \"STUDENT\") {\n      this.alertMessage = '未登录';\n      ElMessage(\"未登录\");\n      setTimeout(() => {\n        this.$router.push('/');\n      }, 2000); // 等待2秒后跳转\n    }\n  },\n  mounted() {\n    this.fetchUsers();\n  }\n};","map":{"version":3,"names":["SideBar","InputQuestion","SearchQuestion","PaperManagement","Shouye","ExamManagement","HeaderNav","mapState","mapMutations","mapGetters","mapActions","ElMessage","name","components","data","currentContent","alertMessage","dialogTableVisible","tableRowEditId","tableColumnEditIndex","computed","userData","users","map","user","username","role","role2","methods","showContent","contentType","showTable","flag","showUnitInput","row","column","id","blurValueInput","updateRole","$nextTick","handleSubmit","newUser","adminName","result","updateUser","success","error","fetchUsers","roleLabel","ms","message","type","customClass","duration","showClose","warning","created","setTimeout","$router","push","mounted"],"sources":["C:\\Users\\86139\\Desktop\\demo_vue\\src\\views\\HomeView.vue"],"sourcesContent":["<template>\n    <!-- <HeaderNav /> -->\n    <div v-if=\"user && user.role !== 'STUDENT'\" class=\"home\">\n      <SideBar @show-content=\"showContent\" @show-table=\"showTable\"/>\n      <main class=\"main-content\">\n        <component :is=\"currentContent\" />\n      </main>\n    </div>\n    <el-dialog v-model=\"dialogTableVisible\" title=\"角色管理\" width=\"630\" style=\"margin-left:37%\">\n      <el-table :data=\"userData\" style=\"width: 100%\" border @cell-click=\"showUnitInput\">\n            <el-table-column prop=\"username\" label=\"用户名\" width=\"300\">\n              <template #default=\"{ row, column }\">\n                <!-- <el-input\n                  v-if=\"tableRowEditId === row.id && tableColumnEditIndex === column.id\"\n                  @blur=\"blurValueInput(row, column)\"\n                  @keyup.enter=\"blurValueInput(row, column)\"\n                  v-model=\"row.username\"\n                /> -->\n                <span >{{ row.username }}</span>\n              </template>\n            </el-table-column>\n            <el-table-column prop=\"role\" label=\"用户权限\" width=\"180\">\n                <template #default=\"{ row, column }\">\n    <el-select\n      v-if=\"tableRowEditId === row.id && tableColumnEditIndex === column.id\"\n      @change=\"blurValueInput(row, column)\"\n      v-model=\"row.role2\"\n      placeholder=\"请选择角色\"\n    >\n      <el-option label=\"教师\" value=\"教师\"></el-option>\n      <el-option label=\"管理员\" value=\"管理员\"></el-option>\n      <el-option label=\"学生\" value=\"学生\"></el-option>\n    </el-select>\n    <span v-else>{{row.role2}}</span>\n  </template>\n            </el-table-column>\n            <el-table-column label=\"操作\" width=\"120\" header-align=\"center\">\n              <template #default=\"{ row }\">\n                <el-button type=\"primary\" link @click=\"handleSubmit(row)\">确定</el-button>\n              </template>\n            </el-table-column>\n          </el-table>\n       </el-dialog>\n</template>\n\n<script>\nimport SideBar from '../components/SideBar.vue';\nimport InputQuestion from '../components/InputQuestion.vue';\nimport SearchQuestion from '../components/SearchQuestion.vue';\nimport PaperManagement from '../components/PaperManagement.vue';\nimport Shouye from '../components/Shouye.vue';\nimport ExamManagement from '../components/ExamManagement.vue'\nimport HeaderNav from '../components/HeaderNav.vue';\nimport { mapState, mapMutations, mapGetters, mapActions } from 'vuex';\nimport { ElMessage } from 'element-plus';\n\nexport default {\n  name: 'Home',\n  // const headerVisible = ref(true),\n  components: {\n    SideBar,\n    InputQuestion,\n    SearchQuestion,\n    PaperManagement,\n    Shouye,\n    ExamManagement,\n    HeaderNav\n  },\n  data() {\n    return {\n      currentContent: null,\n      alertMessage: '',\n      dialogTableVisible: false,\n                  tableRowEditId: null, // 控制可编辑的每一行\n      tableColumnEditIndex: null, // 控制可编辑的每一列\n    };\n  },\n  computed: {\n    ...mapState(['examQuestions', 'examAnswers', 'examInfo', 'user', 'totalCount2', 'users']),\n    userData(){\n       return this.users.map(user => ({\n        username: user.username,\n        role: user.role,\n        role2: user.role === 'ADMIN' ? '管理员' :\n           user.role === 'TEACHER' ? '教师' :\n           user.role === 'STUDENT' ? '学生' :\n           ''\n        }));\n    },\n  },\n  methods: {\n    ...mapActions(['fetchUsers', 'updateUser']),\n    showContent(contentType) {\n      if (contentType === 'input') {\n        this.currentContent = 'InputQuestion';\n      } else if (contentType === 'search') {\n        this.currentContent = 'SearchQuestion';\n      } else if (contentType === 'paper'){\n        this.currentContent = 'PaperManagement';\n      } else if (contentType === 'shouye'){\n        this.currentContent = 'Shouye';\n      } else if (contentType === 'exam'){\n        this.currentContent = 'ExamManagement';\n      }\n    },\n    showTable(flag) {\n      if (flag) {\n        this.dialogTableVisible = true\n      }\n\n    },\n    showUnitInput(row, column) {\n      // 赋值给定义的变量\n      this.tableRowEditId = row.id; // 确定点击的单元格在哪行\n      this.tableColumnEditIndex = column.id; // 确定点击的单元格在哪列\n    },\n    blurValueInput(row, column) {\n      this.tableRowEditId = null;\n      this.tableColumnEditIndex = null;\n      // 在此处调接口传数据\n    },\n    updateRole(row) {\n      this.$nextTick(() => {\n        this.blurValueInput(row);\n      });\n    },\n    async handleSubmit(row) {\n      // console.log(this.questions)\n      // console.log('row',row)\n      // console.log('row properties:', Object.keys(row));\n      // const plainRow = JSON.parse(JSON.stringify(row));\n      const newUser = {\n        adminName:this.user.username,\n        username:row.username,\n        role: row.role2 === '管理员' ? 'ADMIN' :\n              row.role2 === '教师' ? 'TEACHER' :\n              row.role2 === '学生' ? 'STUDENT' :\n              row.role // 默认值，如果没有匹配到\n      };\n      // console.log(this.questions)\n      const result = await this.updateUser(newUser);\n      if (result.success!=='error'){\n          this.success('修改成功');\n      } else {\n        this.error(result.error);\n      }\n      // console.log('编辑操作:', index, row);\n      // this.success('提交成功');\n      // this.queryParams.pageNum = this.currentPage;\n      this.fetchUsers();\n    },\n    roleLabel(role) {\n      switch (role) {\n        case 'ADMIN':\n          return '管理员';\n        case 'TEACHER':\n          return '教师';\n        case 'STUDENT':\n          return '学生';\n        default:\n          return '';\n      }\n    },\n    success(ms){\n      ElMessage({\n        message: ms,\n        type: 'success',\n        customClass: 'custom-message-class',\n        duration: 3000,\n        showClose: true\n      });\n    },\n    warning(ms){\n      ElMessage({\n        message: ms,\n        type: 'warning',\n        customClass: 'custom-message-class',\n        duration: 3000,\n        showClose: true\n      });\n    },\n    error(ms){\n      ElMessage({\n        message: ms,\n        type: 'error',\n        customClass: 'custom-message-class',\n        duration: 3000,\n        showClose: true\n      });\n    }\n  },\n  created() {\n    if (!this.user||this.user.role===\"STUDENT\") {\n      this.alertMessage = '未登录';\n      ElMessage(\"未登录\")\n      setTimeout(() => {\n        this.$router.push('/');\n      }, 2000); // 等待2秒后跳转\n    }\n  },\n\n  mounted() {\n    this.fetchUsers();\n  }\n\n\n};\n</script>\n\n<style scoped>\n.home {\n  display: flex;\n  height: 100vh;\n  flex: 1;\n}\n\n.main-content {\n  flex: 1;\n  padding: 20px;\n  margin-left: 200px;\n  overflow: auto;\n  display: flex;\n  /* background-color: #df1a1a; 设置灰色背景 */\n}\nform {\n  background: white;\n  padding: 2rem;\n  border-radius: 5px;\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);\n}\n\nform div {\n  margin-bottom: 1rem;\n}\n\nbutton {\n  width: 100%;\n  padding: 0.5rem;\n  background: #1890ff;\n  border: none;\n  color: white;\n  border-radius: 5px;\n  cursor: pointer;\n}\n\nbutton:hover {\n  background: #40a9ff;\n}\n\n.alert {\n  margin-top: 1rem;\n  padding: 1rem;\n  background: #f8d7da;\n  color: #721c24;\n  border: 1px solid #f5c6cb;\n  border-radius: 5px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}