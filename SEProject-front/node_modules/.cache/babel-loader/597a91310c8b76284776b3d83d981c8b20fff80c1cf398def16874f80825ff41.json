{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, resolveDynamicComponent as _resolveDynamicComponent, openBlock as _openBlock, createBlock as _createBlock, createElementVNode as _createElementVNode, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, withCtx as _withCtx, createTextVNode as _createTextVNode, Fragment as _Fragment, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-9ea40744\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  key: 0,\n  class: \"home\"\n};\nconst _hoisted_2 = {\n  class: \"main-content\"\n};\nconst _hoisted_3 = {\n  key: 1\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_SideBar = _resolveComponent(\"SideBar\");\n  const _component_el_table_column = _resolveComponent(\"el-table-column\");\n  const _component_el_option = _resolveComponent(\"el-option\");\n  const _component_el_select = _resolveComponent(\"el-select\");\n  const _component_el_button = _resolveComponent(\"el-button\");\n  const _component_el_table = _resolveComponent(\"el-table\");\n  const _component_el_dialog = _resolveComponent(\"el-dialog\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createCommentVNode(\" <HeaderNav /> \"), _ctx.user && _ctx.user.role !== 'STUDENT' ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode(_component_SideBar, {\n    onShowContent: $options.showContent,\n    onShowTable: $options.showTable\n  }, null, 8 /* PROPS */, [\"onShowContent\", \"onShowTable\"]), _createElementVNode(\"main\", _hoisted_2, [(_openBlock(), _createBlock(_resolveDynamicComponent($data.currentContent)))])])) : _createCommentVNode(\"v-if\", true), _createVNode(_component_el_dialog, {\n    modelValue: $data.dialogTableVisible,\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.dialogTableVisible = $event),\n    title: \"角色管理\",\n    width: \"630\",\n    style: {\n      \"margin-left\": \"37%\"\n    }\n  }, {\n    default: _withCtx(() => [_createVNode(_component_el_table, {\n      data: $options.userData,\n      style: {\n        \"width\": \"100%\"\n      },\n      border: \"\",\n      onCellClick: $options.showUnitInput\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_table_column, {\n        prop: \"username\",\n        label: \"用户名\",\n        width: \"300\"\n      }, {\n        default: _withCtx(({\n          row,\n          column\n        }) => [_createCommentVNode(\" <el-input\\n                  v-if=\\\"tableRowEditId === row.id && tableColumnEditIndex === column.id\\\"\\n                  @blur=\\\"blurValueInput(row, column)\\\"\\n                  @keyup.enter=\\\"blurValueInput(row, column)\\\"\\n                  v-model=\\\"row.username\\\"\\n                /> \"), _createElementVNode(\"span\", null, _toDisplayString(row.username), 1 /* TEXT */)]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_el_table_column, {\n        prop: \"role\",\n        label: \"用户权限\",\n        width: \"180\"\n      }, {\n        default: _withCtx(({\n          row,\n          column\n        }) => [$data.tableRowEditId === row.id && $data.tableColumnEditIndex === column.id ? (_openBlock(), _createBlock(_component_el_select, {\n          key: 0,\n          onChange: $event => $options.blurValueInput(row, column),\n          modelValue: row.role2,\n          \"onUpdate:modelValue\": $event => row.role2 = $event,\n          placeholder: \"请选择角色\"\n        }, {\n          default: _withCtx(() => [_createVNode(_component_el_option, {\n            label: \"教师\",\n            value: \"教师\"\n          }), _createVNode(_component_el_option, {\n            label: \"管理员\",\n            value: \"管理员\"\n          }), _createVNode(_component_el_option, {\n            label: \"学生\",\n            value: \"学生\"\n          })]),\n          _: 2 /* DYNAMIC */\n        }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"onChange\", \"modelValue\", \"onUpdate:modelValue\"])) : (_openBlock(), _createElementBlock(\"span\", _hoisted_3, _toDisplayString(row.role2), 1 /* TEXT */))]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_el_table_column, {\n        label: \"操作\",\n        width: \"120\",\n        \"header-align\": \"center\"\n      }, {\n        default: _withCtx(({\n          row\n        }) => [_createVNode(_component_el_button, {\n          type: \"primary\",\n          link: \"\",\n          onClick: $event => $options.handleSubmit(row)\n        }, {\n          default: _withCtx(() => [_createTextVNode(\"确定\")]),\n          _: 2 /* DYNAMIC */\n        }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"onClick\"])]),\n        _: 1 /* STABLE */\n      })]),\n      _: 1 /* STABLE */\n    }, 8 /* PROPS */, [\"data\", \"onCellClick\"])]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"modelValue\"])], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["key","class","_createElementBlock","_Fragment","_createCommentVNode","_ctx","user","role","_hoisted_1","_createVNode","_component_SideBar","onShowContent","$options","showContent","onShowTable","showTable","_createElementVNode","_hoisted_2","_createBlock","_resolveDynamicComponent","$data","currentContent","_component_el_dialog","modelValue","dialogTableVisible","_cache","$event","title","width","style","default","_withCtx","_component_el_table","data","userData","border","onCellClick","showUnitInput","_component_el_table_column","prop","label","row","column","_toDisplayString","username","_","tableRowEditId","id","tableColumnEditIndex","_component_el_select","onChange","blurValueInput","role2","placeholder","_component_el_option","value","_hoisted_3","_component_el_button","type","link","onClick","handleSubmit","_createTextVNode"],"sources":["C:\\Users\\86139\\Desktop\\demo_vue\\src\\views\\HomeView.vue"],"sourcesContent":["<template>\n    <!-- <HeaderNav /> -->\n    <div v-if=\"user && user.role !== 'STUDENT'\" class=\"home\">\n      <SideBar @show-content=\"showContent\" @show-table=\"showTable\"/>\n      <main class=\"main-content\">\n        <component :is=\"currentContent\" />\n      </main>\n    </div>\n    <el-dialog v-model=\"dialogTableVisible\" title=\"角色管理\" width=\"630\" style=\"margin-left:37%\">\n      <el-table :data=\"userData\" style=\"width: 100%\" border @cell-click=\"showUnitInput\">\n            <el-table-column prop=\"username\" label=\"用户名\" width=\"300\">\n              <template #default=\"{ row, column }\">\n                <!-- <el-input\n                  v-if=\"tableRowEditId === row.id && tableColumnEditIndex === column.id\"\n                  @blur=\"blurValueInput(row, column)\"\n                  @keyup.enter=\"blurValueInput(row, column)\"\n                  v-model=\"row.username\"\n                /> -->\n                <span >{{ row.username }}</span>\n              </template>\n            </el-table-column>\n            <el-table-column prop=\"role\" label=\"用户权限\" width=\"180\">\n                <template #default=\"{ row, column }\">\n    <el-select\n      v-if=\"tableRowEditId === row.id && tableColumnEditIndex === column.id\"\n      @change=\"blurValueInput(row, column)\"\n      v-model=\"row.role2\"\n      placeholder=\"请选择角色\"\n    >\n      <el-option label=\"教师\" value=\"教师\"></el-option>\n      <el-option label=\"管理员\" value=\"管理员\"></el-option>\n      <el-option label=\"学生\" value=\"学生\"></el-option>\n    </el-select>\n    <span v-else>{{row.role2}}</span>\n  </template>\n            </el-table-column>\n            <el-table-column label=\"操作\" width=\"120\" header-align=\"center\">\n              <template #default=\"{ row }\">\n                <el-button type=\"primary\" link @click=\"handleSubmit(row)\">确定</el-button>\n              </template>\n            </el-table-column>\n          </el-table>\n       </el-dialog>\n</template>\n\n<script>\nimport SideBar from '../components/SideBar.vue';\nimport InputQuestion from '../components/InputQuestion.vue';\nimport SearchQuestion from '../components/SearchQuestion.vue';\nimport PaperManagement from '../components/PaperManagement.vue';\nimport Shouye from '../components/Shouye.vue';\nimport ExamManagement from '../components/ExamManagement.vue'\nimport HeaderNav from '../components/HeaderNav.vue';\nimport { mapState, mapMutations, mapGetters, mapActions } from 'vuex';\nimport { ElMessage } from 'element-plus';\n\nexport default {\n  name: 'Home',\n  // const headerVisible = ref(true),\n  components: {\n    SideBar,\n    InputQuestion,\n    SearchQuestion,\n    PaperManagement,\n    Shouye,\n    ExamManagement,\n    HeaderNav\n  },\n  data() {\n    return {\n      currentContent: null,\n      alertMessage: '',\n      dialogTableVisible: false,\n                  tableRowEditId: null, // 控制可编辑的每一行\n      tableColumnEditIndex: null, // 控制可编辑的每一列\n    };\n  },\n  computed: {\n    ...mapState(['examQuestions', 'examAnswers', 'examInfo', 'user', 'totalCount2', 'users']),\n    userData(){\n       return this.users.map(user => ({\n        username: user.username,\n        role: user.role,\n        role2: user.role === 'ADMIN' ? '管理员' :\n           user.role === 'TEACHER' ? '教师' :\n           user.role === 'STUDENT' ? '学生' :\n           ''\n        }));\n    },\n  },\n  methods: {\n    ...mapActions(['fetchUsers', 'updateUser']),\n    showContent(contentType) {\n      if (contentType === 'input') {\n        this.currentContent = 'InputQuestion';\n      } else if (contentType === 'search') {\n        this.currentContent = 'SearchQuestion';\n      } else if (contentType === 'paper'){\n        this.currentContent = 'PaperManagement';\n      } else if (contentType === 'shouye'){\n        this.currentContent = 'Shouye';\n      } else if (contentType === 'exam'){\n        this.currentContent = 'ExamManagement';\n      }\n    },\n    showTable(flag) {\n      if (flag) {\n        this.dialogTableVisible = true\n      }\n\n    },\n    showUnitInput(row, column) {\n      // 赋值给定义的变量\n      this.tableRowEditId = row.id; // 确定点击的单元格在哪行\n      this.tableColumnEditIndex = column.id; // 确定点击的单元格在哪列\n    },\n    blurValueInput(row, column) {\n      this.tableRowEditId = null;\n      this.tableColumnEditIndex = null;\n      // 在此处调接口传数据\n    },\n    updateRole(row) {\n      this.$nextTick(() => {\n        this.blurValueInput(row);\n      });\n    },\n    async handleSubmit(row) {\n      // console.log(this.questions)\n      // console.log('row',row)\n      // console.log('row properties:', Object.keys(row));\n      // const plainRow = JSON.parse(JSON.stringify(row));\n      const newUser = {\n        adminName:this.user.username,\n        username:row.username,\n        role: row.role2 === '管理员' ? 'ADMIN' :\n              row.role2 === '教师' ? 'TEACHER' :\n              row.role2 === '学生' ? 'STUDENT' :\n              row.role // 默认值，如果没有匹配到\n      };\n      // console.log(this.questions)\n      const result = await this.updateUser(newUser);\n      if (result.success!=='error'){\n          this.success('修改成功');\n      } else {\n        this.error(result.error);\n      }\n      // console.log('编辑操作:', index, row);\n      // this.success('提交成功');\n      // this.queryParams.pageNum = this.currentPage;\n      this.fetchUsers();\n    },\n    roleLabel(role) {\n      switch (role) {\n        case 'ADMIN':\n          return '管理员';\n        case 'TEACHER':\n          return '教师';\n        case 'STUDENT':\n          return '学生';\n        default:\n          return '';\n      }\n    },\n    success(ms){\n      ElMessage({\n        message: ms,\n        type: 'success',\n        customClass: 'custom-message-class',\n        duration: 3000,\n        showClose: true\n      });\n    },\n    warning(ms){\n      ElMessage({\n        message: ms,\n        type: 'warning',\n        customClass: 'custom-message-class',\n        duration: 3000,\n        showClose: true\n      });\n    },\n    error(ms){\n      ElMessage({\n        message: ms,\n        type: 'error',\n        customClass: 'custom-message-class',\n        duration: 3000,\n        showClose: true\n      });\n    }\n  },\n  created() {\n    if (!this.user||this.user.role===\"STUDENT\") {\n      this.alertMessage = '未登录';\n      ElMessage(\"未登录\")\n      setTimeout(() => {\n        this.$router.push('/');\n      }, 2000); // 等待2秒后跳转\n    }\n  },\n\n  mounted() {\n    this.fetchUsers();\n  }\n\n\n};\n</script>\n\n<style scoped>\n.home {\n  display: flex;\n  height: 100vh;\n  flex: 1;\n}\n\n.main-content {\n  flex: 1;\n  padding: 20px;\n  margin-left: 200px;\n  overflow: auto;\n  display: flex;\n  /* background-color: #df1a1a; 设置灰色背景 */\n}\nform {\n  background: white;\n  padding: 2rem;\n  border-radius: 5px;\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);\n}\n\nform div {\n  margin-bottom: 1rem;\n}\n\nbutton {\n  width: 100%;\n  padding: 0.5rem;\n  background: #1890ff;\n  border: none;\n  color: white;\n  border-radius: 5px;\n  cursor: pointer;\n}\n\nbutton:hover {\n  background: #40a9ff;\n}\n\n.alert {\n  margin-top: 1rem;\n  padding: 1rem;\n  background: #f8d7da;\n  color: #721c24;\n  border: 1px solid #f5c6cb;\n  border-radius: 5px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}