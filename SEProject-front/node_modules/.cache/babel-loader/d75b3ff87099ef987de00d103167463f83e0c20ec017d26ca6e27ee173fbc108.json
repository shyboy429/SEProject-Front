{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { computed, watch, watchEffect, ref } from 'vue';\nimport { useRoute, useRouter } from 'vue-router';\nimport HeaderNav from './components/HeaderNav.vue';\nimport useUserStore from './store/user-store';\nimport SocketService from './utils/web-stocket-service.js';\nimport { mapActions } from 'vuex';\nexport default {\n  __name: 'LoginView',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const userStore = useUserStore();\n    const route = useRoute();\n    const router = useRouter();\n    const headerVisible = ref(true);\n    const username = ref('');\n    const password = ref('');\n    const loginFailed = ref(false);\n    const {\n      login\n    } = mapActions(['login']);\n    if (userStore.isLogin) {\n      userStore.getUserInfo();\n      userStore.getBaseUserInfo();\n    }\n\n    // 登录成功后连接\n    watchEffect(() => {\n      if (userStore.isLogin) {\n        const socketServe = SocketService.Instance;\n        socketServe.route = route;\n        socketServe.router = router;\n        socketServe.connect();\n        console.log(\"已登录：连接websocket\");\n      }\n    });\n\n    // 监听路由变化\n    watch(() => route.name, () => {\n      const meta = route.meta;\n      let title = meta['title'];\n      let header = meta['header'];\n      headerVisible.value = header !== undefined ? header : true;\n      document.title = \"为考\" + (title ? \"-\" + title : \"\");\n    });\n    async function handleLogin() {\n      try {\n        const result = await login({\n          username: username.value,\n          password: password.value\n        });\n        if (result.success) {\n          router.push('/dashboard');\n        } else {\n          alert('登录失败：' + result.message);\n        }\n      } catch (error) {\n        console.error('登录失败：', error);\n        alert('登录失败：服务器错误');\n        loginFailed.value = true;\n      }\n    }\n    function closeAlert() {\n      loginFailed.value = false;\n    }\n    const __returned__ = {\n      userStore,\n      route,\n      router,\n      headerVisible,\n      username,\n      password,\n      loginFailed,\n      login,\n      handleLogin,\n      closeAlert,\n      computed,\n      watch,\n      watchEffect,\n      ref,\n      get useRoute() {\n        return useRoute;\n      },\n      get useRouter() {\n        return useRouter;\n      },\n      HeaderNav,\n      get useUserStore() {\n        return useUserStore;\n      },\n      get SocketService() {\n        return SocketService;\n      },\n      get mapActions() {\n        return mapActions;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["computed","watch","watchEffect","ref","useRoute","useRouter","HeaderNav","useUserStore","SocketService","mapActions","userStore","route","router","headerVisible","username","password","loginFailed","login","isLogin","getUserInfo","getBaseUserInfo","socketServe","Instance","connect","console","log","name","meta","title","header","value","undefined","document","handleLogin","result","success","push","alert","message","error","closeAlert"],"sources":["C:/Users/wu/Desktop/软工/springboot_vue/demo_vue/src/views/LoginView.vue"],"sourcesContent":["<template>\r\n  <div class=\"login\">\r\n    <header-nav v-if=\"headerVisible\"></header-nav>\r\n    <h2>管理员登录</h2>\r\n    <form @submit.prevent=\"handleLogin\">\r\n      <div>\r\n        <label for=\"username\">用户名:</label>\r\n        <input type=\"text\" v-model=\"username\" required />\r\n      </div>\r\n      <div>\r\n        <label for=\"password\">密码:</label>\r\n        <input type=\"password\" v-model=\"password\" required />\r\n      </div>\r\n      <button type=\"submit\">登录</button>\r\n    </form>\r\n    <div v-if=\"loginFailed\" class=\"alert\">\r\n      登录失败：服务器错误\r\n      <button @click=\"closeAlert\">关闭</button>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { computed, watch, watchEffect, ref } from 'vue';\r\nimport { useRoute, useRouter } from 'vue-router';\r\nimport HeaderNav from './components/HeaderNav.vue';\r\nimport useUserStore from './store/user-store';\r\nimport SocketService from './utils/web-stocket-service.js';\r\nimport { mapActions } from 'vuex';\r\n\r\nconst userStore = useUserStore();\r\nconst route = useRoute();\r\nconst router = useRouter();\r\nconst headerVisible = ref(true);\r\nconst username = ref('');\r\nconst password = ref('');\r\nconst loginFailed = ref(false);\r\n\r\nconst { login } = mapActions(['login']);\r\n\r\nif (userStore.isLogin) {\r\n  userStore.getUserInfo();\r\n  userStore.getBaseUserInfo();\r\n}\r\n\r\n// 登录成功后连接\r\nwatchEffect(() => {\r\n  if (userStore.isLogin) {\r\n    const socketServe = SocketService.Instance;\r\n    socketServe.route = route;\r\n    socketServe.router = router;\r\n    socketServe.connect();\r\n    console.log(\"已登录：连接websocket\");\r\n  }\r\n});\r\n\r\n// 监听路由变化\r\nwatch(() => route.name, () => {\r\n  const meta = route.meta;\r\n  let title = meta['title'];\r\n  let header = meta['header'];\r\n  headerVisible.value = header !== undefined ? header : true;\r\n  document.title = \"为考\" + (title ? \"-\" + title : \"\");\r\n});\r\n\r\nasync function handleLogin() {\r\n  try {\r\n    const result = await login({ username: username.value, password: password.value });\r\n    if (result.success) {\r\n      router.push('/dashboard');\r\n    } else {\r\n      alert('登录失败：' + result.message);\r\n    }\r\n  } catch (error) {\r\n    console.error('登录失败：', error);\r\n    alert('登录失败：服务器错误');\r\n    loginFailed.value = true;\r\n  }\r\n}\r\n\r\nfunction closeAlert() {\r\n  loginFailed.value = false;\r\n}\r\n</script>\r\n\r\n<style lang=\"less\">\r\nbody,\r\ntextarea {\r\n  font-family: Helvetica Neue, Helvetica, PingFang SC, Microsoft YaHei, Source Han Sans SC, Noto Sans CJK SC, WenQuanYi Micro Hei, sans-serif;\r\n}\r\n\r\n.ebutton-hover {\r\n  transition: all .3s;\r\n  border-radius: 5px;\r\n  cursor: pointer;\r\n  padding: 15px;\r\n\r\n  &:hover {\r\n    background-color: var(--color-fill-2);\r\n  }\r\n}\r\n\r\n.arco-page-header-wrapper {\r\n  padding-left: 0px !important;\r\n}\r\n\r\n.arco-modal-simple .arco-modal-body {\r\n  overflow: hidden;\r\n}\r\n\r\n.arco-avatar-image img {\r\n  object-fit: cover;\r\n}\r\n\r\ndiv::-webkit-scrollbar,\r\nbody::-webkit-scrollbar,\r\nul::-webkit-scrollbar {\r\n  /* 滚动条整体样式 */\r\n  width: 5px;\r\n  /* 高宽分别对应横竖滚动条的尺寸 */\r\n  height: 1px;\r\n}\r\n\r\ndiv::-webkit-scrollbar-thumb,\r\nbody::-webkit-scrollbar-thumb,\r\nul::-webkit-scrollbar-thumb {\r\n  /* 滚动条里面小方块 */\r\n  border-radius: 10px;\r\n  box-shadow: inset 0 0 5px rgba(219, 219, 219, 0.5);\r\n  background: #d6d6d6;\r\n}\r\n\r\ndiv::-webkit-scrollbar-track,\r\nbody::-webkit-scrollbar-track,\r\nul::-webkit-scrollbar-track {\r\n  /* 滚动条里面轨道 */\r\n  box-shadow: inset 0 0 5px rgba(255, 255, 255, 0.8);\r\n  border-radius: 10px;\r\n  background: #ffffff;\r\n}\r\n\r\n@media only screen and (max-width: 600px) {\r\n  .arco-modal-simple {\r\n    width: 100% !important;\r\n    box-sizing: border-box;\r\n  }\r\n}\r\n\r\n.login {\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  height: 100vh;\r\n  background-color: #f0f2f5;\r\n}\r\n\r\nform {\r\n  background: white;\r\n  padding: 2rem;\r\n  border-radius: 5px;\r\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\nform div {\r\n  margin-bottom: 1rem;\r\n}\r\n\r\nbutton {\r\n  width: 100%;\r\n  padding: 0.5rem;\r\n  background: #1890ff;\r\n  border: none;\r\n  color: white;\r\n  border-radius: 5px;\r\n  cursor: pointer;\r\n}\r\n\r\nbutton:hover {\r\n  background: #40a9ff;\r\n}\r\n\r\n.alert {\r\n  margin-top: 1rem;\r\n  padding: 1rem;\r\n  background: #f8d7da;\r\n  color: #721c24;\r\n  border: 1px solid #f5c6cb;\r\n  border-radius: 5px;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n}\r\n</style>\r\n"],"mappings":";AAuBA,SAASA,QAAQ,EAAEC,KAAK,EAAEC,WAAW,EAAEC,GAAG,QAAQ,KAAK;AACvD,SAASC,QAAQ,EAAEC,SAAS,QAAQ,YAAY;AAChD,OAAOC,SAAS,MAAM,4BAA4B;AAClD,OAAOC,YAAY,MAAM,oBAAoB;AAC7C,OAAOC,aAAa,MAAM,gCAAgC;AAC1D,SAASC,UAAU,QAAQ,MAAM;;;;;;;IAEjC,MAAMC,SAAS,GAAGH,YAAY,CAAC,CAAC;IAChC,MAAMI,KAAK,GAAGP,QAAQ,CAAC,CAAC;IACxB,MAAMQ,MAAM,GAAGP,SAAS,CAAC,CAAC;IAC1B,MAAMQ,aAAa,GAAGV,GAAG,CAAC,IAAI,CAAC;IAC/B,MAAMW,QAAQ,GAAGX,GAAG,CAAC,EAAE,CAAC;IACxB,MAAMY,QAAQ,GAAGZ,GAAG,CAAC,EAAE,CAAC;IACxB,MAAMa,WAAW,GAAGb,GAAG,CAAC,KAAK,CAAC;IAE9B,MAAM;MAAEc;IAAM,CAAC,GAAGR,UAAU,CAAC,CAAC,OAAO,CAAC,CAAC;IAEvC,IAAIC,SAAS,CAACQ,OAAO,EAAE;MACrBR,SAAS,CAACS,WAAW,CAAC,CAAC;MACvBT,SAAS,CAACU,eAAe,CAAC,CAAC;IAC7B;;IAEA;IACAlB,WAAW,CAAC,MAAM;MAChB,IAAIQ,SAAS,CAACQ,OAAO,EAAE;QACrB,MAAMG,WAAW,GAAGb,aAAa,CAACc,QAAQ;QAC1CD,WAAW,CAACV,KAAK,GAAGA,KAAK;QACzBU,WAAW,CAACT,MAAM,GAAGA,MAAM;QAC3BS,WAAW,CAACE,OAAO,CAAC,CAAC;QACrBC,OAAO,CAACC,GAAG,CAAC,iBAAiB,CAAC;MAChC;IACF,CAAC,CAAC;;IAEF;IACAxB,KAAK,CAAC,MAAMU,KAAK,CAACe,IAAI,EAAE,MAAM;MAC5B,MAAMC,IAAI,GAAGhB,KAAK,CAACgB,IAAI;MACvB,IAAIC,KAAK,GAAGD,IAAI,CAAC,OAAO,CAAC;MACzB,IAAIE,MAAM,GAAGF,IAAI,CAAC,QAAQ,CAAC;MAC3Bd,aAAa,CAACiB,KAAK,GAAGD,MAAM,KAAKE,SAAS,GAAGF,MAAM,GAAG,IAAI;MAC1DG,QAAQ,CAACJ,KAAK,GAAG,IAAI,IAAIA,KAAK,GAAG,GAAG,GAAGA,KAAK,GAAG,EAAE,CAAC;IACpD,CAAC,CAAC;IAEF,eAAeK,WAAWA,CAAA,EAAG;MAC3B,IAAI;QACF,MAAMC,MAAM,GAAG,MAAMjB,KAAK,CAAC;UAAEH,QAAQ,EAAEA,QAAQ,CAACgB,KAAK;UAAEf,QAAQ,EAAEA,QAAQ,CAACe;QAAM,CAAC,CAAC;QAClF,IAAII,MAAM,CAACC,OAAO,EAAE;UAClBvB,MAAM,CAACwB,IAAI,CAAC,YAAY,CAAC;QAC3B,CAAC,MAAM;UACLC,KAAK,CAAC,OAAO,GAAGH,MAAM,CAACI,OAAO,CAAC;QACjC;MACF,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdf,OAAO,CAACe,KAAK,CAAC,OAAO,EAAEA,KAAK,CAAC;QAC7BF,KAAK,CAAC,YAAY,CAAC;QACnBrB,WAAW,CAACc,KAAK,GAAG,IAAI;MAC1B;IACF;IAEA,SAASU,UAAUA,CAAA,EAAG;MACpBxB,WAAW,CAACc,KAAK,GAAG,KAAK;IAC3B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}