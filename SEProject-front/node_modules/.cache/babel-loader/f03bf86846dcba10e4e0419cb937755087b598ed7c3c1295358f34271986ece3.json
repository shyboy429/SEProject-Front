{"ast":null,"code":"import { openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, Fragment as _Fragment, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_router_view = _resolveComponent(\"router-view\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [$setup.headerVisible ? (_openBlock(), _createBlock($setup[\"HeaderNav\"], {\n    key: 0\n  })) : _createCommentVNode(\"v-if\", true), _createVNode(_component_router_view)], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["_createElementBlock","_Fragment","$setup","headerVisible","_createBlock","key","_createCommentVNode","_createVNode","_component_router_view"],"sources":["C:\\Users\\wu\\Desktop\\软工\\springboot_vue\\demo_vue\\src\\App.vue"],"sourcesContent":["\n\n<template>\n  <header-nav v-if=\"headerVisible\"></header-nav>\n  <router-view></router-view>\n</template>\n<script setup>\nimport { computed, watch, watchEffect, ref } from 'vue';\nimport { useRoute, useRouter } from 'vue-router';\nimport HeaderNav from './components/HeaderNav.vue';\nimport useUserStore from './sotre/user-store';\nimport SocketService from './utils/web-stocket-service.js'\nconst userStore = useUserStore()\nconst route = useRoute()\nconst router = useRouter()\nconst headerVisible = ref(true)\nif (userStore.isLogin) {\n  userStore.getUserInfo()\n  userStore.getBaseUserInfo()\n}\n\n//登录成功后连接\nwatchEffect(() => {\n  console.log(userStore.isLogin)\n  if (userStore.isLogin) {\n    const socketServe = SocketService.Instance;\n    socketServe.route = route\n    socketServe.router = router;\n    socketServe.connect()\n    console.log(\"已登录：连接webstock\")\n  }\n})\nwatch(() => route.name, () => {\n  const meta = route.meta\n  let title = meta['title']\n  let header = meta['header']\n  if (header != undefined) {\n    headerVisible.value = header\n  } else {\n    headerVisible.value = true;\n  }\n\n  if (title != undefined) {\n    title = \"-\" + title;\n  }\n  document.title = \"为考\" + (title ?? \"\")\n\n})\n</script>\n<style lang=\"less\">\nbody,\ntextarea {\n  font-family: Helvetica Neue, Helvetica, PingFang SC, Microsoft YaHei, Source Han Sans SC, Noto Sans CJK SC, WenQuanYi Micro Hei, sans-serif;\n}\n\n.ebutton-hover {\n  transition: all .3s;\n  border-radius: 5px;\n  cursor: pointer;\n  padding: 15px;\n\n  &:hover {\n    background-color: var(--color-fill-2);\n  }\n}\n\n.arco-page-header-wrapper {\n  padding-left: 0px !important;\n}\n\n.arco-modal-simple .arco-modal-body {\n  overflow: hidden;\n}\n\n.arco-avatar-image img {\n  object-fit: cover;\n}\n\ndiv::-webkit-scrollbar,\nbody::-webkit-scrollbar,\nul::-webkit-scrollbar {\n  /*滚动条整体样式*/\n  width: 5px;\n  /* 高宽分别对应横竖滚动条的尺寸 */\n  height: 1px;\n}\n\ndiv::-webkit-scrollbar-thumb,\nbody::-webkit-scrollbar-thumb,\nul::-webkit-scrollbar-thumb {\n  /*滚动条里面小方块*/\n  border-radius: 10px;\n  box-shadow: inset 0 0 5px rgba(219, 219, 219, 0.5);\n  background: #d6d6d6;\n}\n\ndiv::-webkit-scrollbar-track,\nbody::-webkit-scrollbar-track,\nul::-webkit-scrollbar-track {\n  /*滚动条里面轨道*/\n  box-shadow: inset 0 0 5px rgba(255, 255, 255, 0.8);\n  border-radius: 10px;\n  background: #ffffff;\n}\n\n@media only screen and (max-width: 600px) {\n  .arco-modal-simple {\n    width: 100% !important;\n    box-sizing: border-box;\n  }\n}</style>"],"mappings":";;;uBAAAA,mBAAA,CAAAC,SAAA,SAGoBC,MAAA,CAAAC,aAAa,I,cAA/BC,YAAA,CAA8CF,MAAA;IAHhDG,GAAA;EAAA,MAAAC,mBAAA,gBAIEC,YAAA,CAA2BC,sBAAA,E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}