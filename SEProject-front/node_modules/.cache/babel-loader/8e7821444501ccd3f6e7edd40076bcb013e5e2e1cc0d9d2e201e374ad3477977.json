{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { mapActions } from 'vuex';\nimport { ElMessage } from 'element-plus';\nexport default {\n  data() {\n    return {\n      username: '',\n      password: '',\n      confirmPassword: '',\n      registrationFailed: false,\n      registrationErrorMessage: ''\n    };\n  },\n  methods: {\n    ...mapActions(['register']),\n    goToLogin() {\n      this.$router.push('/');\n    },\n    success(ms) {\n      ElMessage({\n        message: ms,\n        type: 'success',\n        customClass: 'custom-message-class',\n        duration: 3000,\n        showClose: true\n      });\n    },\n    async handleRegister() {\n      if (this.password !== this.confirmPassword) {\n        this.registrationFailed = true;\n        this.registrationErrorMessage = '两次密码不一致';\n        return;\n      }\n      try {\n        const result = await this.register({\n          id: '',\n          username: this.username,\n          password: this.password,\n          role: 'STUDENT'\n        });\n        if (result.id) {\n          // alert('注册成功！请登录');\n          this.success('注册成功！请登录');\n          this.$router.push('/');\n        } else {\n          this.registrationFailed = true;\n          this.registrationErrorMessage = result.error || '注册失败：未知错误';\n        }\n      } catch (error) {\n        console.error('注册失败：', error);\n        this.registrationFailed = true;\n        this.registrationErrorMessage = '注册失败：服务器错误';\n      }\n    },\n    closeAlert() {\n      this.registrationFailed = false;\n      this.registrationErrorMessage = '';\n    }\n  }\n};","map":{"version":3,"names":["mapActions","ElMessage","data","username","password","confirmPassword","registrationFailed","registrationErrorMessage","methods","goToLogin","$router","push","success","ms","message","type","customClass","duration","showClose","handleRegister","result","register","id","role","error","console","closeAlert"],"sources":["C:\\Users\\86139\\Desktop\\demo_vue\\src\\views\\RegisterView.vue"],"sourcesContent":["<template>\r\n  <div class=\"container\">\r\n    <div class=\"login-form\">\r\n      <div class=\"logo\">\r\n        <!-- 添加 SVG 图标 -->\r\n      </div>\r\n      <h2 class=\"title\">注册新账户</h2>\r\n      <div class=\"options\">\r\n        <button class=\"option\" @click=\"goToLogin\">返回登录</button>\r\n      </div>\r\n      <form @submit.prevent=\"handleRegister\">\r\n        <input type=\"text\" placeholder=\"请输入用户名\" v-model=\"username\" class=\"input-text\" required>\r\n        <input type=\"password\" placeholder=\"设置密码\" v-model=\"password\" class=\"input-password\" required>\r\n        <input type=\"password\" placeholder=\"确认密码\" v-model=\"confirmPassword\" class=\"input-password\" required>\r\n        <button type=\"submit\" class=\"submit-btn\">注册</button>\r\n      </form>\r\n      <p class=\"terms\">您只能以<strong>「学生」</strong>身份注册，修改权限请联系管理员</p>\r\n      <div v-if=\"registrationFailed\" class=\"alert\">\r\n        注册失败：{{ registrationErrorMessage }}\r\n        <button @click=\"closeAlert\">关闭</button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { mapActions } from 'vuex';\r\nimport { ElMessage } from 'element-plus';\r\nexport default {\r\n  data() {\r\n    return {\r\n      username: '',\r\n      password: '',\r\n      confirmPassword: '',\r\n      registrationFailed: false,\r\n      registrationErrorMessage: '',\r\n    };\r\n  },\r\n  methods: {\r\n    ...mapActions(['register']),\r\n    goToLogin() {\r\n      this.$router.push('/');\r\n      },\r\n    success(ms){\r\n      ElMessage({\r\n        message: ms,\r\n        type: 'success',\r\n        customClass: 'custom-message-class',\r\n        duration: 3000,\r\n        showClose: true\r\n      });\r\n    },\r\nasync handleRegister() {\r\n  if (this.password !== this.confirmPassword) {\r\n    this.registrationFailed = true;\r\n    this.registrationErrorMessage = '两次密码不一致';\r\n    return;\r\n  }\r\n  try {\r\n    const result = await this.register({\r\n      id: '',\r\n      username: this.username,\r\n      password: this.password,\r\n      role: 'STUDENT'\r\n    });\r\n    if (result.id) {\r\n        // alert('注册成功！请登录');\r\n      this.success('注册成功！请登录')\r\n      this.$router.push('/');\r\n    } else {\r\n      this.registrationFailed = true;\r\n      this.registrationErrorMessage = result.error || '注册失败：未知错误';\r\n    }\r\n  } catch (error) {\r\n    console.error('注册失败：', error);\r\n    this.registrationFailed = true;\r\n    this.registrationErrorMessage = '注册失败：服务器错误';\r\n  }\r\n},\r\n    closeAlert() {\r\n      this.registrationFailed = false;\r\n      this.registrationErrorMessage = '';\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.container {\r\n  min-height: 100vh;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  background: linear-gradient(to right, #93c5fd, #d8b4fe);\r\n  padding: 1rem;\r\n}\r\n\r\n.login-form {\r\n  background: white;\r\n  border-radius: 0.75rem;\r\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\r\n  padding: 2rem;\r\n  max-width: 28rem;\r\n  width: 100%;\r\n}\r\n\r\n.logo {\r\n  display: flex;\r\n  justify-content: center;\r\n  margin-bottom: 1.5rem;\r\n}\r\n\r\n.title {\r\n  text-align: center;\r\n  font-size: 1.5rem;\r\n  font-weight: 600;\r\n  margin-bottom: 1rem;\r\n}\r\n\r\n.options {\r\n  display: flex;\r\n  justify-content: space-around;\r\n  margin-bottom: 4rem;\r\n}\r\n\r\n.option {\r\n  font-weight: 600;\r\n  color: #71717a;\r\n  cursor: pointer;\r\n}\r\n\r\nform div, .input-text, .input-password {\r\n  width: 100%;\r\n  padding: 0.5rem;\r\n  margin-bottom: 1rem;\r\n  border: 1px solid #e5e7eb;\r\n  border-radius: 0.375rem;\r\n  outline: none;\r\n}\r\n\r\n.input-text:focus, .input-password:focus {\r\n  ring: 2px solid #3b82f6;\r\n}\r\n\r\n.submit-btn {\r\n  width: 100%;\r\n  background: #3b82f6;\r\n  color: white;\r\n  padding: 0.5rem;\r\n  border-radius: 0.375rem;\r\n  margin-bottom: 1rem;\r\n  cursor: pointer;\r\n  outline: none;\r\n}\r\n\r\n.submit-btn:hover {\r\n  background: #40a9ff;\r\n}\r\n\r\n.terms {\r\n  text-align: center;\r\n  color: #71717a;\r\n  font-size: 0.875rem;\r\n  margin-bottom: 1rem;\r\n}\r\n\r\n.alert {\r\n  margin-top: 1rem;\r\n  padding: 1rem;\r\n  background: #f8d7da;\r\n  color: #721c24;\r\n  border: 1px solid #f5c6cb;\r\n  border-radius: 5px;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n}\r\n</style>\r\n"],"mappings":";AA0BA,SAASA,UAAS,QAAS,MAAM;AACjC,SAASC,SAAQ,QAAS,cAAc;AACxC,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,QAAQ,EAAE,EAAE;MACZC,QAAQ,EAAE,EAAE;MACZC,eAAe,EAAE,EAAE;MACnBC,kBAAkB,EAAE,KAAK;MACzBC,wBAAwB,EAAE;IAC5B,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACP,GAAGR,UAAU,CAAC,CAAC,UAAU,CAAC,CAAC;IAC3BS,SAASA,CAAA,EAAG;MACV,IAAI,CAACC,OAAO,CAACC,IAAI,CAAC,GAAG,CAAC;IACtB,CAAC;IACHC,OAAOA,CAACC,EAAE,EAAC;MACTZ,SAAS,CAAC;QACRa,OAAO,EAAED,EAAE;QACXE,IAAI,EAAE,SAAS;QACfC,WAAW,EAAE,sBAAsB;QACnCC,QAAQ,EAAE,IAAI;QACdC,SAAS,EAAE;MACb,CAAC,CAAC;IACJ,CAAC;IACL,MAAMC,cAAcA,CAAA,EAAG;MACrB,IAAI,IAAI,CAACf,QAAO,KAAM,IAAI,CAACC,eAAe,EAAE;QAC1C,IAAI,CAACC,kBAAiB,GAAI,IAAI;QAC9B,IAAI,CAACC,wBAAuB,GAAI,SAAS;QACzC;MACF;MACA,IAAI;QACF,MAAMa,MAAK,GAAI,MAAM,IAAI,CAACC,QAAQ,CAAC;UACjCC,EAAE,EAAE,EAAE;UACNnB,QAAQ,EAAE,IAAI,CAACA,QAAQ;UACvBC,QAAQ,EAAE,IAAI,CAACA,QAAQ;UACvBmB,IAAI,EAAE;QACR,CAAC,CAAC;QACF,IAAIH,MAAM,CAACE,EAAE,EAAE;UACX;UACF,IAAI,CAACV,OAAO,CAAC,UAAU;UACvB,IAAI,CAACF,OAAO,CAACC,IAAI,CAAC,GAAG,CAAC;QACxB,OAAO;UACL,IAAI,CAACL,kBAAiB,GAAI,IAAI;UAC9B,IAAI,CAACC,wBAAuB,GAAIa,MAAM,CAACI,KAAI,IAAK,WAAW;QAC7D;MACF,EAAE,OAAOA,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,OAAO,EAAEA,KAAK,CAAC;QAC7B,IAAI,CAAClB,kBAAiB,GAAI,IAAI;QAC9B,IAAI,CAACC,wBAAuB,GAAI,YAAY;MAC9C;IACF,CAAC;IACGmB,UAAUA,CAAA,EAAG;MACX,IAAI,CAACpB,kBAAiB,GAAI,KAAK;MAC/B,IAAI,CAACC,wBAAuB,GAAI,EAAE;IACpC;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}