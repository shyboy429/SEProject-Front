{"ast":null,"code":"import { mapActions, mapState } from 'vuex';\nimport { ref } from 'vue';\nexport default {\n  name: 'SearchQuestion',\n  data() {\n    return {\n      searchKeyword: '',\n      filterQuestionType: '',\n      filterDifficulty: '',\n      currentPage: 1,\n      dialogTableVisible: false,\n      myQuestions: false,\n      pageSize: 5,\n      tableRowEditId: null,\n      tableColumnEditIndex: null\n    };\n  },\n  computed: {\n    ...mapState(['questions', 'paper', 'user', 'question']),\n    questionData() {\n      return this.question.map(question => ({\n        description: question.description,\n        type: question.type,\n        tag: question.tag,\n        difficultLevel: question.difficultLevel,\n        answer: question.answer,\n        createdBy: question.createdBy,\n        id: question.id\n      }));\n    },\n    tableData() {\n      return this.questions.map(question => ({\n        question: question.description,\n        questionType: question.type,\n        tag: question.tag,\n        difficulty: question.difficultLevel,\n        analysis: question.analysis,\n        createdBy: question.createdBy,\n        id: question.id\n      }));\n    }\n  },\n  methods: {\n    ...mapActions(['searchQuestions']),\n    searchQuestions() {\n      this.searchQuestions({\n        keyword: this.searchKeyword,\n        questionType: this.filterQuestionType,\n        difficulty: this.filterDifficulty,\n        page: this.currentPage\n      });\n    },\n    showUnitInput(row, column, cell, event) {\n      this.tableRowEditId = row.id;\n      this.tableColumnEditIndex = column.id;\n    },\n    blurValueInput(row, column) {\n      this.tableRowEditId = null;\n      this.tableColumnEditIndex = null;\n    },\n    handleSubmit(row) {\n      // 在这里提交编辑后的数据\n      console.log('提交:', row);\n      // 重置编辑状态\n      this.tableRowEditId = null;\n      this.tableColumnEditIndex = null;\n      // 你可以在这里执行进一步的提交操作，比如调用API将修改后的数据发送到服务器\n    },\n    getData() {\n      this.pageSize = this.searchData.limit;\n      this.currentPage = this.searchData.current;\n    },\n    composePaper(index, row) {\n      console.log('组卷操作', index, row);\n      // 你可以在这里执行进一步的组卷操作\n    },\n    handleEdit(index, row) {\n      console.log('编辑操作', index, row);\n      // 你可以在这里执行进一步的编辑操作\n    },\n    handleDelete(index, row) {\n      console.log('删除操作', index, row);\n      // 你可以在这里执行进一步的删除操作\n    }\n  }\n};","map":{"version":3,"names":["mapActions","mapState","ref","name","data","searchKeyword","filterQuestionType","filterDifficulty","currentPage","dialogTableVisible","myQuestions","pageSize","tableRowEditId","tableColumnEditIndex","computed","questionData","question","map","description","type","tag","difficultLevel","answer","createdBy","id","tableData","questions","questionType","difficulty","analysis","methods","searchQuestions","keyword","page","showUnitInput","row","column","cell","event","blurValueInput","handleSubmit","console","log","getData","searchData","limit","current","composePaper","index","handleEdit","handleDelete"],"sources":["C:\\Users\\86139\\Desktop\\demo_vue\\src\\components\\SearchQuestion.vue"],"sourcesContent":["<template>\r\n  <div class=\"search-question\">\r\n    <h3>查询试题</h3>\r\n    <div class=\"search-filters\">\r\n      <div class=\"form-row\">\r\n        <div class=\"form-group\" style=\"display: flex; align-items: center;\">\r\n          <label for=\"tag\" style=\"margin-left: 30px; align-self: flex-start;\">关键字:</label>\r\n          <input type=\"text\" id=\"tag\" v-model=\"tag\" placeholder=\"请输入关键字\" style=\"margin-left: 20px;width: 700px;\" />\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <label for=\"question-type\">题目类型:</label>\r\n          <select id=\"question-type\" v-model=\"questionType\">\r\n            <option value=\"选择题\">选择题</option>\r\n            <option value=\"判断题\">判断题</option>\r\n            <option value=\"填空题\">填空题</option>\r\n            <option value=\"问答题\">问答题</option>\r\n          </select>\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <label for=\"difficulty\">难度等级:</label>\r\n          <select id=\"difficulty\" v-model=\"difficulty\">\r\n            <option value=\"简单\">简单</option>\r\n            <option value=\"中等\">中等</option>\r\n            <option value=\"困难\">困难</option>\r\n          </select>\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <label for=\"difficulty\">我的题目</label>\r\n            <el-checkbox v-model=\"myQuestions\" sytle=\"width: 10px;\" label=\"\" value=\"Value1\" border />\r\n        </div>\r\n        \r\n        <button @click=\"searchQuestions\" class=\"form-group\" style=\"padding: 20px 0px 20px 35px; font-size: 18px;\">查询题目</button>\r\n\r\n      </div>\r\n      \r\n    </div>\r\n                    <!-- 表格数据绑定和默认宽度 -->\r\n              \r\n        <el-table :data=\"tableData\" style=\"width:100%; margin-left: 6%;\">\r\n        <!-- 每一个列，prop为主键，label为文案 -->\r\n        <!-- 索引 -->\r\n        <el-table-column type=\"index\" width=\"50\"></el-table-column>\r\n        <el-table-column prop=\"question\" label=\"问题\" width=\"300\"></el-table-column>\r\n        <el-table-column prop=\"questionType\" label=\"题型\" width=\"180\"></el-table-column>\r\n        <el-table-column prop=\"tag\" label=\"标签\" width=\"180\"></el-table-column>\r\n        <el-table-column prop=\"difficulty\" label=\"难度\" width=\"120\"></el-table-column>\r\n        <el-table-column prop=\"createdBy\" label=\"创建人\" width=\"120\" style=\"margin-left: 50%;\"></el-table-column>\r\n        <!-- <el-table-column prop=\"answer\" label=\"答案\" width=\"180\"></el-table-column>\r\n        <el-table-column prop=\"analysis\" label=\"解析\" width=\"300\"></el-table-column> -->\r\n        <el-table-column label=\"操作\" width=\"220\"   header-align=\"center\">\r\n            <template #default=\"scope\">\r\n              <div style=\"display: flex; justify-content: space-between;\">\r\n                <el-button size=\"small\" type=\"primary\" @click=\"composePaper(scope.$index, scope.row)\">组卷</el-button>\r\n                <el-button size=\"small\" type=\"success\"  plain @click=\"dialogTableVisible = true; handleEdit(scope.$index, scope.row)\">编辑</el-button>\r\n                <el-button size=\"small\" type=\"danger\" :disabled=\"(user.username !== scope.row.createdBy)&&(user.role!=='ADMIN')\" @click=\"handleDelete(scope.$index, scope.row)\">删除</el-button>\r\n              </div>\r\n            </template>\r\n          </el-table-column>\r\n        </el-table>\r\n    <div class=\"questions-list\">\r\n      \r\n      <!-- <ul>\r\n        <li v-for=\"question in paginatedQuestions\" :key=\"question.id\">\r\n          {{ question.question }}\r\n        </li>\r\n      </ul> -->\r\n      <!-- <div class=\"pagination\">\r\n        <button @click=\"prevPage\" :disabled=\"currentPage === 1\" style=\"padding: 5px 10px;\">上一页</button>\r\n        <button @click=\"nextPage\" :disabled=\"currentPage === totalPages\" style=\"padding: 5px 10px;\">下一页</button>\r\n      </div> -->\r\n      \r\n\t<!-- <el-pagination\r\n\t:current-page=\"searchData.current\"\r\n\t:page-size=\"searchData.limit\"\r\n\t:total=\"total\"\r\n\t:pager-count=\"6\"\r\n\tstyle=\"text-align: center;margin-top: 20px;\"\r\n\tlayout=\"jumper, prev, pager, next, total\"\r\n\t@current-change=\"getData\" /> -->\r\n      <el-dialog v-model=\"dialogTableVisible\" title=\"编辑题目\" width=\"800\">\r\n        <el-table\r\n          :data=\"questionData\"\r\n          style=\"width: 100%\"\r\n          border\r\n          @cell-click=\"showUnitInput\"\r\n        >\r\n          <el-table-column prop=\"description\" label=\"问题\" width=\"300\">\r\n            <template #default=\"{ row, column }\">\r\n              <el-input\r\n                v-if=\"tableRowEditId === row.id && tableColumnEditIndex === column.id\"\r\n                @blur=\"blurValueInput(row, column)\"\r\n                @keyup.enter=\"blurValueInput(row, column)\"\r\n                v-model=\"row.description\"\r\n              />\r\n              <span v-else>{{ row.description }}</span>\r\n            </template>\r\n          </el-table-column>\r\n          <el-table-column prop=\"type\" label=\"题型\" width=\"180\">\r\n            <template #default=\"{ row, column }\">\r\n              <el-input\r\n                v-if=\"tableRowEditId === row.id && tableColumnEditIndex === column.id\"\r\n                @blur=\"blurValueInput(row, column)\"\r\n                @keyup.enter=\"blurValueInput(row, column)\"\r\n                v-model=\"row.type\"\r\n              />\r\n              <span v-else>{{ row.type }}</span>\r\n            </template>\r\n          </el-table-column>\r\n          <el-table-column prop=\"tag\" label=\"标签\" width=\"180\">\r\n            <template #default=\"{ row, column }\">\r\n              <el-input\r\n                v-if=\"tableRowEditId === row.id && tableColumnEditIndex === column.id\"\r\n                @blur=\"blurValueInput(row, column)\"\r\n                @keyup.enter=\"blurValueInput(row, column)\"\r\n                v-model=\"row.tag\"\r\n              />\r\n              <span v-else>{{ row.tag }}</span>\r\n            </template>\r\n          </el-table-column>\r\n          <el-table-column prop=\"difficultLevel\" label=\"难度\" width=\"120\">\r\n            <template #default=\"{ row, column }\">\r\n              <el-input\r\n                v-if=\"tableRowEditId === row.id && tableColumnEditIndex === column.id\"\r\n                @blur=\"blurValueInput(row, column)\"\r\n                @keyup.enter=\"blurValueInput(row, column)\"\r\n                v-model=\"row.difficultLevel\"\r\n              />\r\n              <span v-else>{{ row.difficultLevel }}</span>\r\n            </template>\r\n          </el-table-column>\r\n          <el-table-column prop=\"answer\" label=\"答案\" width=\"120\">\r\n            <template #default=\"{ row, column }\">\r\n              <el-input\r\n                v-if=\"tableRowEditId === row.id && tableColumnEditIndex === column.id\"\r\n                @blur=\"blurValueInput(row, column)\"\r\n                @keyup.enter=\"blurValueInput(row, column)\"\r\n                v-model=\"row.answer\"\r\n              />\r\n              <span v-else>{{ row.answer }}</span>\r\n            </template>\r\n          </el-table-column>\r\n          <el-table-column label=\"操作\" width=\"120\">\r\n            <template #default=\"{ row }\">\r\n              <el-button type=\"primary\" link @click=\"handleSubmit(row)\">确定</el-button>\r\n            </template>\r\n          </el-table-column>\r\n        </el-table>\r\n      </el-dialog>\r\n    </div>\r\n\r\n\r\n  </div>\r\n</template>\r\n<script>\r\nimport { mapActions, mapState } from 'vuex';\r\nimport { ref } from 'vue'\r\n\r\nexport default {\r\n  name: 'SearchQuestion',\r\n  data() {\r\n    return {\r\n      searchKeyword: '',\r\n      filterQuestionType: '',\r\n      filterDifficulty: '',\r\n      currentPage: 1,\r\n      dialogTableVisible: false,\r\n      myQuestions: false,\r\n      pageSize: 5,\r\n      tableRowEditId: null,\r\n      tableColumnEditIndex: null,\r\n    };\r\n  },\r\n  computed: {\r\n    ...mapState(['questions', 'paper', 'user', 'question']),\r\n    questionData(){\r\n       return this.question.map(question => ({\r\n        description: question.description,\r\n        type: question.type,\r\n        tag: question.tag,\r\n        difficultLevel: question.difficultLevel,\r\n        answer: question.answer,\r\n        createdBy: question.createdBy,\r\n        id: question.id,\r\n        }));\r\n    },\r\n    tableData() {\r\n      return this.questions.map(question => ({\r\n        question: question.description,\r\n        questionType: question.type,\r\n        tag: question.tag,\r\n        difficulty: question.difficultLevel,\r\n        analysis: question.analysis,\r\n        createdBy: question.createdBy,\r\n           id: question.id,\r\n      }));\r\n    },\r\n  },\r\n  methods: {\r\n    ...mapActions(['searchQuestions']),\r\n    searchQuestions() {\r\n      this.searchQuestions({\r\n        keyword: this.searchKeyword,\r\n        questionType: this.filterQuestionType,\r\n        difficulty: this.filterDifficulty,\r\n        page: this.currentPage,\r\n      });\r\n    },\r\n    showUnitInput(row, column, cell, event) {\r\n      this.tableRowEditId = row.id;\r\n      this.tableColumnEditIndex = column.id;\r\n    },\r\n    blurValueInput(row, column) {\r\n      this.tableRowEditId = null;\r\n      this.tableColumnEditIndex = null;\r\n    },\r\n    handleSubmit(row) {\r\n      // 在这里提交编辑后的数据\r\n      console.log('提交:', row);\r\n      // 重置编辑状态\r\n      this.tableRowEditId = null;\r\n      this.tableColumnEditIndex = null;\r\n      // 你可以在这里执行进一步的提交操作，比如调用API将修改后的数据发送到服务器\r\n    },\r\n    getData() {\r\n      this.pageSize = this.searchData.limit\r\n      this.currentPage = this.searchData.current\r\n    },\r\n    composePaper(index, row) {\r\n      console.log('组卷操作', index, row);\r\n      // 你可以在这里执行进一步的组卷操作\r\n    },\r\n    handleEdit(index, row) {\r\n      console.log('编辑操作', index, row);\r\n      // 你可以在这里执行进一步的编辑操作\r\n    },\r\n    handleDelete(index, row) {\r\n      console.log('删除操作', index, row);\r\n      // 你可以在这里执行进一步的删除操作\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.search-filters {\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.questions-list {\r\n  margin-top: 20px;\r\n}\r\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}