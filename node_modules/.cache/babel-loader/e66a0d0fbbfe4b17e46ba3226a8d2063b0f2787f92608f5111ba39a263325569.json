{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { Message } from '@arco-design/web-vue';\nimport { reactive, ref, computed, watch } from 'vue';\nimport { addQuestionRequest, delQuestionItemRequest, delQuestionRequest, updateQuestionItemRequest, updateQuestionCorrectRequest, updateQuestionRequest } from '../apis/question-api';\nimport { getQuestionType, letterList } from '../utils/question-config';\nimport BaseQuestionPreview from './BaseQuestionPreview.vue';\nexport default {\n  __name: 'QuestionBank',\n  props: {\n    topicType: String,\n    question: {\n      type: Object,\n      default: () => ({\n        content: \"\",\n        courseId: \"\",\n        difficulty: \"\",\n        analysis: \"\"\n      })\n    },\n    options: {\n      type: Array,\n      default: () => []\n    }\n  },\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const props = __props;\n    const type = ref(getQuestionType(props.topicType));\n    const question = reactive(props.question);\n    const isCreate = computed(() => !question.id);\n    const options = ref(props.options);\n    watch(() => props.options, value => {\n      options.value = value;\n      init();\n    });\n    const init = () => {\n      if (type.value.enumName === \"SUBJECTIVE\" && options.value.length === 0) {\n        options.value.push({\n          content: \"\"\n        });\n      }\n      if (type.value.enumName === \"JUDGMENTAL\" && options.value.length === 0) {\n        options.value.push({\n          content: \"对\"\n        }, {\n          content: \"错\"\n        });\n      }\n    };\n    const addOption = () => {\n      if (!question.id || options.value.length === 0 || options.value[options.value.length - 1].id !== undefined) {\n        options.value.push({\n          content: \"\"\n        });\n      } else {\n        Message.info(\"请完成当前选项后再添加~\");\n      }\n    };\n    const delOption = async index => {\n      if (!isCreate.value) {\n        await delQuestionItemRequest(options.value[index].id);\n      }\n      options.value.splice(index, 1);\n    };\n    const createQuestion = async () => {\n      if (!question.content) {\n        Message.info('题目不能为空~');\n        return;\n      }\n      const params = {\n        ...question,\n        options: options.value,\n        type: props.topicType\n      };\n      await addQuestionRequest(params);\n      Message.success('题目创建成功');\n    };\n    const handleBlur = (component, index) => {\n      let questField;\n      switch (component) {\n        case 'question':\n          questField = 'content';\n          break;\n        case 'analysis':\n          questField = 'analysis';\n          break;\n        case 'difficulty':\n          questField = 'difficulty';\n          break;\n        case 'option':\n          saveOption(options.value[index]);\n          return;\n      }\n      saveQuestion(questField);\n    };\n    const saveQuestion = async info => {\n      if (isCreate.value) {\n        return;\n      }\n      if (!question[info]) {\n        return;\n      }\n      const params = {\n        id: question.id,\n        courseId: question.courseId,\n        [info]: question[info]\n      };\n      await updateQuestionRequest(params);\n    };\n    const saveOption = async item => {\n      if (isCreate.value) {\n        return;\n      }\n      item.questionId = question.id;\n      const res = await updateQuestionItemRequest(item);\n      if (res.data) {\n        item.id = res.data.data;\n      }\n    };\n    const saveCorrect = async index => {\n      if (isCreate.value) {\n        updateCorrect(index);\n        return;\n      }\n      await updateQuestionCorrectRequest(options.value[index].id);\n      updateCorrect(index);\n    };\n    const updateCorrect = index => {\n      options.value.forEach((item, i) => {\n        if (i === index) {\n          item.answer = type.value.enumName === 'MULTIPLE_CHOICE' ? item.answer ? null : 1 : 1;\n        } else if (type.value.enumName !== 'MULTIPLE_CHOICE') {\n          item.answer = null;\n        }\n      });\n    };\n    const __returned__ = {\n      props,\n      type,\n      question,\n      isCreate,\n      options,\n      init,\n      addOption,\n      delOption,\n      createQuestion,\n      handleBlur,\n      saveQuestion,\n      saveOption,\n      saveCorrect,\n      updateCorrect,\n      get Message() {\n        return Message;\n      },\n      reactive,\n      ref,\n      computed,\n      watch,\n      get addQuestionRequest() {\n        return addQuestionRequest;\n      },\n      get delQuestionItemRequest() {\n        return delQuestionItemRequest;\n      },\n      get delQuestionRequest() {\n        return delQuestionRequest;\n      },\n      get updateQuestionItemRequest() {\n        return updateQuestionItemRequest;\n      },\n      get updateQuestionCorrectRequest() {\n        return updateQuestionCorrectRequest;\n      },\n      get updateQuestionRequest() {\n        return updateQuestionRequest;\n      },\n      get getQuestionType() {\n        return getQuestionType;\n      },\n      get letterList() {\n        return letterList;\n      },\n      BaseQuestionPreview\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["Message","reactive","ref","computed","watch","addQuestionRequest","delQuestionItemRequest","delQuestionRequest","updateQuestionItemRequest","updateQuestionCorrectRequest","updateQuestionRequest","getQuestionType","letterList","BaseQuestionPreview","props","__props","type","topicType","question","isCreate","id","options","value","init","enumName","length","push","content","addOption","undefined","info","delOption","index","splice","createQuestion","params","success","handleBlur","component","questField","saveOption","saveQuestion","courseId","item","questionId","res","data","saveCorrect","updateCorrect","forEach","i","answer"],"sources":["C:/Users/wu/Desktop/软工/springboot_vue/demo_vue/src/components/QuestionBank.vue"],"sourcesContent":["<template>\r\n  <BaseQuestionPreview mode=\"editor\" @editorBlur=\"handleBlur\" :question=\"question\" :show-area=\"true\" :topic-type=\"topicType\" :options=\"options\">\r\n    <template #option_footer>\r\n      <a-button long @click=\"addOption\">添加选项</a-button>\r\n    </template>\r\n    <template #option=\"{ index }\">\r\n      <a-button @click=\"delOption(index)\" status=\"danger\" style=\"margin-right: 5px;\">\r\n        <template #icon>\r\n          <icon-delete />\r\n        </template>\r\n      </a-button>\r\n      <a-button class=\"letter\" @click=\"saveCorrect(index)\">\r\n        {{ options[index].answer != null ? \"取消选择\" : \"选择\" }}\r\n      </a-button>\r\n    </template>\r\n    <template #footer>\r\n      <div class=\"public\">\r\n        <span class=\"title\">可见状态：</span>\r\n        <a-radio-group type=\"button\" @change=\"saveQuestion('isPublic')\" default-value=\"self\" v-model:model-value=\"question.isPublic\">\r\n          <a-radio value=\"self\">自己</a-radio>\r\n          <a-radio value=\"course\">课程</a-radio>\r\n          <a-radio value=\"overt\">公开</a-radio>\r\n        </a-radio-group>\r\n      </div>\r\n      <div class=\"public\">\r\n        <span class=\"title\">题目分值：</span>\r\n        <a-input-number :style=\"{ width: '170px' }\" v-model=\"question.score\" @blur=\"saveQuestion('score')\" placeholder=\"输入分值\" :default-value=\"5\" mode=\"button\" class=\"input-demo\" />\r\n      </div>\r\n      <a-button v-if=\"isCreate\" long type=\"primary\" size=\"large\" @click=\"createQuestion\">保存</a-button>\r\n    </template>\r\n  </BaseQuestionPreview>\r\n</template>\r\n\r\n<script setup>\r\nimport { Message } from '@arco-design/web-vue';\r\nimport { reactive, ref, computed, watch } from 'vue';\r\nimport { addQuestionRequest, delQuestionItemRequest, delQuestionRequest, updateQuestionItemRequest, updateQuestionCorrectRequest, updateQuestionRequest } from '../apis/question-api';\r\nimport { getQuestionType, letterList } from '../utils/question-config';\r\nimport BaseQuestionPreview from './BaseQuestionPreview.vue';\r\n\r\nconst props = defineProps({\r\n  topicType: String,\r\n  question: {\r\n    type: Object,\r\n    default: () => ({\r\n      content: \"\",\r\n      courseId: \"\",\r\n      difficulty: \"\",\r\n      analysis: \"\",\r\n    })\r\n  },\r\n  options: {\r\n    type: Array,\r\n    default: () => []\r\n  },\r\n});\r\n\r\nconst type = ref(getQuestionType(props.topicType));\r\nconst question = reactive(props.question);\r\nconst isCreate = computed(() => !question.id);\r\nconst options = ref(props.options);\r\n\r\nwatch(() => props.options, (value) => {\r\n  options.value = value;\r\n  init();\r\n});\r\n\r\nconst init = () => {\r\n  if (type.value.enumName === \"SUBJECTIVE\" && options.value.length === 0) {\r\n    options.value.push({ content: \"\" });\r\n  }\r\n  if (type.value.enumName === \"JUDGMENTAL\" && options.value.length === 0) {\r\n    options.value.push({ content: \"对\" }, { content: \"错\" });\r\n  }\r\n};\r\n\r\nconst addOption = () => {\r\n  if (!question.id || options.value.length === 0 || options.value[options.value.length - 1].id !== undefined) {\r\n    options.value.push({ content: \"\" });\r\n  } else {\r\n    Message.info(\"请完成当前选项后再添加~\");\r\n  }\r\n};\r\n\r\nconst delOption = async (index) => {\r\n  if (!isCreate.value) {\r\n    await delQuestionItemRequest(options.value[index].id);\r\n  }\r\n  options.value.splice(index, 1);\r\n};\r\n\r\nconst createQuestion = async () => {\r\n  if (!question.content) {\r\n    Message.info('题目不能为空~');\r\n    return;\r\n  }\r\n  const params = {\r\n    ...question,\r\n    options: options.value,\r\n    type: props.topicType\r\n  };\r\n  await addQuestionRequest(params);\r\n  Message.success('题目创建成功');\r\n};\r\n\r\nconst handleBlur = (component, index) => {\r\n  let questField;\r\n  switch (component) {\r\n    case 'question':\r\n      questField = 'content';\r\n      break;\r\n    case 'analysis':\r\n      questField = 'analysis';\r\n      break;\r\n    case 'difficulty':\r\n      questField = 'difficulty';\r\n      break;\r\n    case 'option':\r\n      saveOption(options.value[index]);\r\n      return;\r\n  }\r\n  saveQuestion(questField);\r\n};\r\n\r\nconst saveQuestion = async (info) => {\r\n  if (isCreate.value) {\r\n    return;\r\n  }\r\n  if (!question[info]) {\r\n    return;\r\n  }\r\n  const params = {\r\n    id: question.id,\r\n    courseId: question.courseId,\r\n    [info]: question[info]\r\n  };\r\n  await updateQuestionRequest(params);\r\n};\r\n\r\nconst saveOption = async (item) => {\r\n  if (isCreate.value) {\r\n    return;\r\n  }\r\n  item.questionId = question.id;\r\n  const res = await updateQuestionItemRequest(item);\r\n  if (res.data) {\r\n    item.id = res.data.data;\r\n  }\r\n};\r\n\r\nconst saveCorrect = async (index) => {\r\n  if (isCreate.value) {\r\n    updateCorrect(index);\r\n    return;\r\n  }\r\n  await updateQuestionCorrectRequest(options.value[index].id);\r\n  updateCorrect(index);\r\n};\r\n\r\nconst updateCorrect = (index) => {\r\n  options.value.forEach((item, i) => {\r\n    if (i === index) {\r\n      item.answer = type.value.enumName === 'MULTIPLE_CHOICE' ? (item.answer ? null : 1) : 1;\r\n    } else if (type.value.enumName !== 'MULTIPLE_CHOICE') {\r\n      item.answer = null;\r\n    }\r\n  });\r\n};\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n:deep(.option-item) {\r\n  flex-wrap: wrap;\r\n}\r\n:deep(.arco-radio), :deep(.arco-checkbox) {\r\n  display: block;\r\n}\r\n:deep(.option-item:hover) {\r\n  background-color: #fff !important;\r\n}\r\n:deep(.question-info .info) {\r\n  float: none !important;\r\n}\r\n.public {\r\n  display: flex;\r\n  align-items: center;\r\n  margin: 10px;\r\n  .title {\r\n    color: var(--color-text-3);\r\n  }\r\n}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}