{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, vModelRadio as _vModelRadio, withDirectives as _withDirectives, createTextVNode as _createTextVNode, createCommentVNode as _createCommentVNode, vModelCheckbox as _vModelCheckbox, vModelText as _vModelText } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"h2\", null, \"在线考试\", -1 /* HOISTED */);\nconst _hoisted_2 = [\"onClick\"];\nconst _hoisted_3 = {\n  key: 0\n};\nconst _hoisted_4 = {\n  key: 0\n};\nconst _hoisted_5 = [\"name\", \"value\", \"onUpdate:modelValue\"];\nconst _hoisted_6 = {\n  key: 1\n};\nconst _hoisted_7 = [\"value\", \"onUpdate:modelValue\"];\nconst _hoisted_8 = {\n  key: 2\n};\nconst _hoisted_9 = [\"name\", \"onUpdate:modelValue\"];\nconst _hoisted_10 = [\"name\", \"onUpdate:modelValue\"];\nconst _hoisted_11 = {\n  key: 3\n};\nconst _hoisted_12 = [\"onUpdate:modelValue\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_hoisted_1, (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.exams, exam => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: exam.id\n    }, [_createElementVNode(\"h3\", null, _toDisplayString(exam.title), 1 /* TEXT */), _createElementVNode(\"button\", {\n      onClick: $event => $options.startExam(exam.id)\n    }, \"开始考试\", 8 /* PROPS */, _hoisted_2)]);\n  }), 128 /* KEYED_FRAGMENT */)), $data.currentExam ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, [_createElementVNode(\"h3\", null, _toDisplayString($data.currentExam.title), 1 /* TEXT */), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.currentExam.questions, question => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: question.id\n    }, [_createElementVNode(\"h4\", null, _toDisplayString(question.title), 1 /* TEXT */), question.type === 'single' ? (_openBlock(), _createElementBlock(\"div\", _hoisted_4, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(question.options, (option, index) => {\n      return _openBlock(), _createElementBlock(\"label\", {\n        key: index\n      }, [_withDirectives(_createElementVNode(\"input\", {\n        type: \"radio\",\n        name: question.id,\n        value: option,\n        \"onUpdate:modelValue\": $event => $data.answers[question.id] = $event\n      }, null, 8 /* PROPS */, _hoisted_5), [[_vModelRadio, $data.answers[question.id]]]), _createTextVNode(_toDisplayString(option), 1 /* TEXT */)]);\n    }), 128 /* KEYED_FRAGMENT */))])) : _createCommentVNode(\"v-if\", true), question.type === 'multiple' ? (_openBlock(), _createElementBlock(\"div\", _hoisted_6, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(question.options, (option, index) => {\n      return _openBlock(), _createElementBlock(\"label\", {\n        key: index\n      }, [_withDirectives(_createElementVNode(\"input\", {\n        type: \"checkbox\",\n        value: option,\n        \"onUpdate:modelValue\": $event => $data.answers[question.id] = $event\n      }, null, 8 /* PROPS */, _hoisted_7), [[_vModelCheckbox, $data.answers[question.id]]]), _createTextVNode(_toDisplayString(option), 1 /* TEXT */)]);\n    }), 128 /* KEYED_FRAGMENT */))])) : _createCommentVNode(\"v-if\", true), question.type === 'truefalse' ? (_openBlock(), _createElementBlock(\"div\", _hoisted_8, [_createElementVNode(\"label\", null, [_withDirectives(_createElementVNode(\"input\", {\n      type: \"radio\",\n      name: question.id,\n      value: \"true\",\n      \"onUpdate:modelValue\": $event => $data.answers[question.id] = $event\n    }, null, 8 /* PROPS */, _hoisted_9), [[_vModelRadio, $data.answers[question.id]]]), _createTextVNode(\" 真 \")]), _createElementVNode(\"label\", null, [_withDirectives(_createElementVNode(\"input\", {\n      type: \"radio\",\n      name: question.id,\n      value: \"false\",\n      \"onUpdate:modelValue\": $event => $data.answers[question.id] = $event\n    }, null, 8 /* PROPS */, _hoisted_10), [[_vModelRadio, $data.answers[question.id]]]), _createTextVNode(\" 假 \")])])) : _createCommentVNode(\"v-if\", true), question.type === 'essay' ? (_openBlock(), _createElementBlock(\"div\", _hoisted_11, [_withDirectives(_createElementVNode(\"textarea\", {\n      \"onUpdate:modelValue\": $event => $data.answers[question.id] = $event\n    }, null, 8 /* PROPS */, _hoisted_12), [[_vModelText, $data.answers[question.id]]])])) : _createCommentVNode(\"v-if\", true)]);\n  }), 128 /* KEYED_FRAGMENT */)), _createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.submitExam && $options.submitExam(...args))\n  }, \"提交考试\")])) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"names":["_createElementVNode","key","_createElementBlock","_hoisted_1","_Fragment","_renderList","_ctx","exams","exam","id","_toDisplayString","title","onClick","$event","$options","startExam","_hoisted_2","$data","currentExam","_hoisted_3","questions","question","type","_hoisted_4","options","option","index","name","value","answers","_hoisted_5","_createTextVNode","_createCommentVNode","_hoisted_6","_hoisted_7","_hoisted_8","_hoisted_9","_hoisted_10","_hoisted_11","_hoisted_12","_cache","args","submitExam"],"sources":["C:\\Users\\86139\\Desktop\\demo_vue\\src\\components\\OnlineExam.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <h2>在线考试</h2>\r\n    <div v-for=\"exam in exams\" :key=\"exam.id\">\r\n      <h3>{{ exam.title }}</h3>\r\n      <button @click=\"startExam(exam.id)\">开始考试</button>\r\n    </div>\r\n    <div v-if=\"currentExam\">\r\n      <h3>{{ currentExam.title }}</h3>\r\n      <div v-for=\"question in currentExam.questions\" :key=\"question.id\">\r\n        <h4>{{ question.title }}</h4>\r\n        <div v-if=\"question.type === 'single'\">\r\n          <label v-for=\"(option, index) in question.options\" :key=\"index\">\r\n            <input type=\"radio\" :name=\"question.id\" :value=\"option\" v-model=\"answers[question.id]\" />{{ option }}\r\n          </label>\r\n        </div>\r\n        <div v-if=\"question.type === 'multiple'\">\r\n          <label v-for=\"(option, index) in question.options\" :key=\"index\">\r\n            <input type=\"checkbox\" :value=\"option\" v-model=\"answers[question.id]\" />{{ option }}\r\n          </label>\r\n        </div>\r\n        <div v-if=\"question.type === 'truefalse'\">\r\n          <label>\r\n            <input type=\"radio\" :name=\"question.id\" value=\"true\" v-model=\"answers[question.id]\" /> 真\r\n          </label>\r\n          <label>\r\n            <input type=\"radio\" :name=\"question.id\" value=\"false\" v-model=\"answers[question.id]\" /> 假\r\n          </label>\r\n        </div>\r\n        <div v-if=\"question.type === 'essay'\">\r\n          <textarea v-model=\"answers[question.id]\"></textarea>\r\n        </div>\r\n      </div>\r\n      <button @click=\"submitExam\">提交考试</button>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { mapState, mapActions } from 'vuex';\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      currentExam: null,\r\n      answers: {},\r\n    };\r\n  },\r\n  computed: {\r\n    ...mapState(['exams']),\r\n  },\r\n  methods: {\r\n    ...mapActions(['fetchExams', 'submitExam']),\r\n    startExam(examId) {\r\n      this.currentExam = this.exams.find(exam => exam.id === examId);\r\n      this.answers = {};\r\n    },\r\n    async submitExam() {\r\n      await this.submitExam({ examId: this.currentExam.id, answers: this.answers });\r\n      alert('考试提交成功');\r\n      this.currentExam = null;\r\n    },\r\n  },\r\n  created() {\r\n    this.fetchExams();\r\n  },\r\n};\r\n</script>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}