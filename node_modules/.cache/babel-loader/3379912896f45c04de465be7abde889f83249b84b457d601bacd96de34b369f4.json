{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { mapState, mapMutations, mapGetters, mapActions } from 'vuex';\nimport { ElMessage } from 'element-plus';\nimport { ref } from 'vue';\n\n// const value = ref(Date.now() + 100 * 60 * 60 * 7)\n// const value10 = ref(Date.now() + 1000 * 60 * 60 * 7); // 这里设置倒计时为7小时\n// const value10 = 100000;\n\nconst loading = ref(false);\nconst svg = `\n<path class=\"path\" d=\"\n  M 30 15\n  L 28 17\n  M 25.61 25.61\n  A 15 15, 0, 0, 1, 15 30\n  A 15 15, 0, 1, 1, 27.99 7.5\n  L 15 15\n\" style=\"stroke-width: 4px; fill: rgba(0, 0, 0, 0)\"/>\n`;\nexport default {\n  data() {\n    return {\n      currentQuestionIndex: 0,\n      _user: {\n        avatar: 'https://placehold.co/100x100',\n        name: 'baymax',\n        university: '哈尔滨工业大学',\n        id: '270123456'\n      },\n      questionStatus: {},\n      totalCount: 0,\n      // timeRemaining: '12641:36:25',\n      startTime: '2022-12-06 09:59:00',\n      endTime: '2022-12-09 09:59:00',\n      // value10: null,\n      showCountdown: false // 新添加的布尔值\n      // value10: ref(Date.now() + 1000 * 60 * 1),\n    };\n  },\n  computed: {\n    ...mapState(['examQuestions', 'examAnswers', 'examInfo', 'user', 'totalCount2']),\n    ...mapGetters(['getExamAnswer', 'getAnsweredCount']),\n    // value10(){\n    //   // this.value10.value = Date.now() + 1000 * 60 * this.examInfo.durationTime\n    //   console.log(\"eeeeeee2:\", ref(Date.now() + 1000 * 60 * this.examInfo.durationTime))\n    //   return ref(Date.now() + 1000 * 60 * this.examInfo.durationTime);\n\n    // },\n    totalCount() {\n      return this.totalCount2;\n    },\n    value10() {\n      return Date.now() + 1000 * 60 * this.examInfo.durationTime;\n    },\n    currentQuestion() {\n      return this.examQuestions[this.currentQuestionIndex];\n    },\n    answeredCount() {\n      return this.getAnsweredCount;\n    },\n    singleChoiceIndexes() {\n      return this.examQuestions.map((question, index) => ({\n        question,\n        index\n      })).filter(item => item.question.type === '选择题').map(item => item.index);\n    },\n    fillInBlankIndexes() {\n      return this.examQuestions.map((question, index) => ({\n        question,\n        index\n      })).filter(item => item.question.type === '填空题').map(item => item.index);\n    },\n    trueFalseIndexes() {\n      return this.examQuestions.map((question, index) => ({\n        question,\n        index\n      })).filter(item => item.question.type === '判断题').map(item => item.index);\n    },\n    essayIndexes() {\n      return this.examQuestions.map((question, index) => ({\n        question,\n        index\n      })).filter(item => item.question.type === '问答题').map(item => item.index);\n    },\n    singleChoiceQuestions() {\n      return this.examQuestions.filter(q => q.type === '选择题');\n    },\n    fillInBlankQuestions() {\n      return this.examQuestions.filter(q => q.type === '填空题');\n    },\n    trueFalseQuestions() {\n      return this.examQuestions.filter(q => q.type === '判断题');\n    },\n    essayQuestions() {\n      return this.examQuestions.filter(q => q.type === '问答题');\n    }\n  },\n  methods: {\n    ...mapMutations(['setExamAnswer', 'submitExamAnswer']),\n    ...mapActions(['submitExamAnswer', 'addPaper', 'addQuestionToPaper', 'removeFromPaper', 'fetchPaperQuestion', 'updatePaperQuestions', 'deletePaper', 'fetchPapersPages']),\n    previousQuestion() {\n      if (this.currentQuestionIndex > 0) {\n        this.currentQuestionIndex--;\n      }\n    },\n    async submit() {\n      const loadingInstance = this.$loading({\n        lock: true,\n        text: 'Loading...',\n        spinner: svg,\n        // 使用自定义 SVG 图案\n        background: 'rgba(0, 0, 0, 0.7)',\n        customClass: 'custom-loading-svg' // 自定义样式类名\n      });\n      await this.submitExamAnswer(this.examAnswers);\n      setTimeout(() => {\n        loadingInstance.close();\n        this.$router.push('/test');\n      }, 700);\n    },\n    nextQuestion() {\n      if (this.currentQuestionIndex < this.examQuestions.length - 1) {\n        this.currentQuestionIndex++;\n      }\n    },\n    selectOption(questionId, option) {\n      this.setExamAnswer({\n        questionId,\n        answer: option\n      });\n      this.updateQuestionStatus(questionId); // 调用更新状态的方法\n    },\n    updateAnswer(questionId, answer) {\n      this.setExamAnswer({\n        questionId,\n        answer\n      });\n      this.updateQuestionStatus(questionId); // 调用更新状态的方法\n    },\n    updateQuestionStatus(questionId) {\n      this.questionStatus[questionId] = !!this.getExamAnswer(questionId);\n    },\n    isOptionSelected(questionId, option) {\n      return this.getExamAnswer(questionId) === option;\n    },\n    cleanedDescription(description) {\n      const regex = /A\\..*?\\nB\\..*?\\nC\\..*?\\nD\\..*/s;\n      return description.replace(regex, '');\n    },\n    questionTypeAndScore(type) {\n      var score;\n      if (type === '选择题') {\n        score = 3;\n      } else if (type === '判断题') {\n        score = 3;\n      } else if (type === '填空题') {\n        score = 5;\n      } else if (type === '问答题') {\n        score = 10;\n      }\n      return `${type}:${score}分`;\n    },\n    extractedOptions(description) {\n      const options = description.match(/A\\..*?\\nB\\..*?\\nC\\..*?\\nD\\..*/s);\n      if (options) {\n        return options[0].split(/(?=[A-D]\\.)/).map(opt => opt.trim());\n      }\n      return [];\n    },\n    previewExam() {\n      ElMessage({\n        message: '即将打开整卷预览功能',\n        type: 'info'\n      });\n    },\n    goToQuestion(index) {\n      this.currentQuestionIndex = index;\n    }\n  },\n  mounted() {\n    console.log(\"eeeeeee:\", this.user);\n    this.value10 = Date.now() + 1000 * 60 * this.examInfo.durationTime;\n    this.showCountdown = true;\n  },\n  created() {\n    console.log(this.user);\n    if (!this.user) {\n      this.alertMessage = '未登录';\n      ElMessage(\"未登录\");\n      setTimeout(() => {\n        this.$router.push('/');\n      }, 2000); // 等待2秒后跳转\n    }\n  }\n};","map":{"version":3,"names":["mapState","mapMutations","mapGetters","mapActions","ElMessage","ref","loading","svg","data","currentQuestionIndex","_user","avatar","name","university","id","questionStatus","totalCount","startTime","endTime","showCountdown","computed","totalCount2","value10","Date","now","examInfo","durationTime","currentQuestion","examQuestions","answeredCount","getAnsweredCount","singleChoiceIndexes","map","question","index","filter","item","type","fillInBlankIndexes","trueFalseIndexes","essayIndexes","singleChoiceQuestions","q","fillInBlankQuestions","trueFalseQuestions","essayQuestions","methods","previousQuestion","submit","loadingInstance","$loading","lock","text","spinner","background","customClass","submitExamAnswer","examAnswers","setTimeout","close","$router","push","nextQuestion","length","selectOption","questionId","option","setExamAnswer","answer","updateQuestionStatus","updateAnswer","getExamAnswer","isOptionSelected","cleanedDescription","description","regex","replace","questionTypeAndScore","score","extractedOptions","options","match","split","opt","trim","previewExam","message","goToQuestion","mounted","console","log","user","created","alertMessage"],"sources":["C:\\Users\\86139\\Desktop\\SEProject-front\\src\\views\\OnlineExamView.vue"],"sourcesContent":["<template>\n  <div  v-if=\"user\" class=\"min-h-screen flex flex-col bg-zinc-100 dark:bg-zinc-900\">\n    <header class=\"bg-zinc-800 text-white p-4 flex justify-between items-center custom-header\">\n      <h1 class=\"text-lg\">考试</h1>\n      <button @click=\"submit\" class=\"bg-teal-500 text-white px-4 py-2 rounded\">提交试卷</button>\n    </header>\n    <div class=\"flex flex-1\">\n      <aside class=\"w-1 bg-white dark:bg-zinc-800 p-4\">\n        <div class=\"flex flex-col items-center mb-4\">\n          <img :src=\"require('../assets/img/4.jpg')\" alt=\"Background Image\" class=\"rounded-full mb-2 background-image\"/>  \n          <div class=\"text-center\">\n            <p class=\"text-lg font-bold\">{{ this.user.username }}</p>\n            <p class=\"text-sm text-zinc-500\">{{ _user.university }}</p>\n            <p class=\"text-sm text-blue-500\">{{ this.user.id }}</p>\n          </div>\n        </div>\n        <div class=\"bg-zinc-100 dark:bg-zinc-700 p-4 rounded mb-4\">\n          <p class=\"text-center text-zinc-500\">\n            已答: <span class=\"text-black dark:text-white\">{{ answeredCount }}</span> 题数:\n            <span class=\"text-black dark:text-white\">{{ totalCount }}</span>\n          </p>\n        </div>\n        <div class=\"bg-zinc-100 dark:bg-zinc-700 p-4 rounded mb-4\">\n          <!-- <p class=\"text-center text-xl font-bold\">{{ timeRemaining }}</p> -->\n          <div v-if=\"showCountdown\">\n  <el-countdown title=\"剩余时间\" :value=this.value10 @finish=\"submit\" />\n</div>\n\n          <p class=\"text-sm text-zinc-500\">开始时间: {{ this.examInfo.startTime }}</p>\n          <p class=\"text-sm text-zinc-500\">结束时间: {{ this.examInfo.endTime }}</p>\n        </div>\n      </aside>\n\n      <main class=\"flex-1 bg-white dark:bg-zinc-800 p-4\">\n        <div class=\"flex justify-between items-center mb-4\">\n          <el-button size=\"large\" @click=\"previousQuestion\" :disabled=\"currentQuestionIndex === 0\" class=\"bg-zinc-200 dark:bg-zinc-700 text-zinc-700 dark:text-zinc-300 px-4 py-2 rounded\">\n            上一题\n          </el-button>\n          <el-button size=\"large\" @click=\"nextQuestion\" :disabled=\"currentQuestionIndex === examQuestions.length - 1\" class=\"bg-teal-500 text-white px-4 py-2 rounded\">\n            下一题\n          </el-button>\n        </div>\n        <div class=\"mb-4\">\n          <p class=\"text-lg2 text-gray-500\">{{ questionTypeAndScore(currentQuestion.type) }}</p>\n          <p class=\"text-lg\">{{ cleanedDescription(currentQuestion.description) }}</p>\n          <div v-if=\"currentQuestion.type === '选择题'\" class=\"mt-4\">\n            <div v-for=\"(option, index) in extractedOptions(currentQuestion.description)\" :key=\"index\">\n              <label class=\"block mb-2\">\n                <input type=\"radio\" :name=\"`question-${currentQuestion.id}`\" class=\"mr-2\" :value=\"option\" @change=\"selectOption(currentQuestion.id, option)\" :checked=\"isOptionSelected(currentQuestion.id, option)\" /> {{ option }}\n              </label>\n            </div>\n          </div>\n          <div v-else-if=\"currentQuestion.type === '填空题'\" class=\"mt-4\">\n            <label class=\"block mb-2\">\n              <input type=\"text\" class=\"w-full p-2 border border-zinc-300 rounded\" @input=\"updateAnswer(currentQuestion.id, $event.target.value)\" :value=\"getExamAnswer(currentQuestion.id)\" />\n            </label>\n          </div>\n          <div v-else-if=\"currentQuestion.type === '判断题'\" class=\"mt-4\">\n            <label class=\"block mb-2\">\n              <input type=\"radio\" :name=\"`question-${currentQuestion.id}`\" class=\"mr-2\" value=\"正确\" @change=\"selectOption(currentQuestion.id, '正确')\" :checked=\"isOptionSelected(currentQuestion.id, '正确')\" /> 正确\n            </label>\n            <label class=\"block mb-2\">\n              <input type=\"radio\" :name=\"`question-${currentQuestion.id}`\" class=\"mr-2\" value=\"错误\" @change=\"selectOption(currentQuestion.id, '错误')\" :checked=\"isOptionSelected(currentQuestion.id, '错误')\" /> 错误\n            </label>\n          </div>\n          <div v-else-if=\"currentQuestion.type === '问答题'\" class=\"mt-4\">\n            <label class=\"block mb-2\">\n              <textarea class=\"w-full p-2 border border-zinc-300 rounded\" style=\"width: 400px;\" rows=\"4\" @input=\"updateAnswer(currentQuestion.id, $event.target.value)\">{{ getExamAnswer(currentQuestion.id) }}</textarea>\n            </label>\n          </div>\n        </div>\n      </main>\n\n      <aside class=\"w-1 bg-white dark:bg-zinc-800 p-4\">\n        <div class=\"mb-4\">\n          <p class=\"text-center text-zinc-500\">作答状态</p>\n          <div class=\"flex justify-around mt-2\">\n            <span class=\"bg-zinc-300 dark:bg-zinc-600 w-4 h-4 rounded-full inline-block\" style=\"margin-left:70px\"></span>\n            未作答\n\n            <span class=\"bg-green-300 dark:bg-green-600 w-4 h-4 rounded-full inline-block \" style=\"margin-left:20px\"></span>\n            已作答\n          </div>\n        </div>\n  <div class=\"mb-4\">\n    <p class=\"text-center text-zinc-500\">单选题</p>\n    <div class=\" grid-cols-5 gap-2\">\n            <el-button\n        v-for=\"index in singleChoiceIndexes\"\n        :key=\"index\"\n        @click=\"goToQuestion(index)\"\n        :class=\"{\n          'bg-green-300': questionStatus[examQuestions[index].id],  // 已作答\n          'bg-zinc-300': !questionStatus[examQuestions[index].id]   // 未作答\n        }\"\n      >\n        {{ index + 1 }}\n      </el-button>\n    </div>\n  </div>\n\n  <div class=\"mb-4\">\n    <p class=\"text-center text-zinc-500\">判断题</p>\n    <div class=\"grid-cols-5 gap-2\">\n            <el-button\n        v-for=\"index in trueFalseIndexes\"\n        :key=\"index\"\n        @click=\"goToQuestion(index)\"\n        :class=\"{\n          'bg-green-300': questionStatus[examQuestions[index].id],  // 已作答\n          'bg-zinc-300': !questionStatus[examQuestions[index].id]   // 未作答\n        }\"\n      >\n\n        {{ index + 1 }}\n      </el-button>\n    </div>\n  </div>\n  <div class=\"mb-4\">\n    <p class=\"text-center text-zinc-500\">填空题</p>\n    <div class=\"question-grid\">\n      <el-button\n        v-for=\"index in fillInBlankIndexes\"\n        :key=\"index\"\n        @click=\"goToQuestion(index)\"\n        :class=\"{\n          'bg-green-300': questionStatus[examQuestions[index].id],  // 已作答\n          'bg-zinc-300': !questionStatus[examQuestions[index].id]   // 未作答\n        }\"\n      >\n        {{ index + 1 }}\n      </el-button>\n    </div>\n  </div>\n  <div>\n    <p class=\"text-center text-zinc-500\">问答题</p>\n    <div class=\"grid-cols-5 \">\n            <el-button\n        v-for=\"index in essayIndexes\"\n        :key=\"index\"\n        @click=\"goToQuestion(index)\"\n        :class=\"{\n          'bg-green-300': questionStatus[examQuestions[index].id],  // 已作答\n          'bg-zinc-300': !questionStatus[examQuestions[index].id]   // 未作答\n        }\"\n      >\n        {{ index + 1 }}\n      </el-button>\n    </div>\n  </div>\n      </aside>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { mapState, mapMutations, mapGetters, mapActions } from 'vuex';\nimport { ElMessage } from 'element-plus';\nimport { ref } from 'vue';\n\n// const value = ref(Date.now() + 100 * 60 * 60 * 7)\n// const value10 = ref(Date.now() + 1000 * 60 * 60 * 7); // 这里设置倒计时为7小时\n// const value10 = 100000;\n\nconst loading = ref(false);\nconst svg = `\n<path class=\"path\" d=\"\n  M 30 15\n  L 28 17\n  M 25.61 25.61\n  A 15 15, 0, 0, 1, 15 30\n  A 15 15, 0, 1, 1, 27.99 7.5\n  L 15 15\n\" style=\"stroke-width: 4px; fill: rgba(0, 0, 0, 0)\"/>\n`;\n\nexport default {\n  data() {\n    return {\n      currentQuestionIndex: 0,\n      _user: {\n        avatar: 'https://placehold.co/100x100',\n        name: 'baymax',\n        university: '哈尔滨工业大学',\n        id: '270123456'\n      },\n      questionStatus: {},\n      totalCount: 0,\n      // timeRemaining: '12641:36:25',\n      startTime: '2022-12-06 09:59:00',\n      endTime: '2022-12-09 09:59:00',\n      // value10: null,\n      showCountdown: false // 新添加的布尔值\n      // value10: ref(Date.now() + 1000 * 60 * 1),\n    };\n  },\n  computed: {\n    ...mapState(['examQuestions', 'examAnswers', 'examInfo', 'user', 'totalCount2']),\n    ...mapGetters(['getExamAnswer', 'getAnsweredCount']),\n    // value10(){\n    //   // this.value10.value = Date.now() + 1000 * 60 * this.examInfo.durationTime\n    //   console.log(\"eeeeeee2:\", ref(Date.now() + 1000 * 60 * this.examInfo.durationTime))\n    //   return ref(Date.now() + 1000 * 60 * this.examInfo.durationTime);\n      \n    // },\n    totalCount(){\n      return this.totalCount2;\n    },\n      value10() {\n    return Date.now() + 1000 * 60 * this.examInfo.durationTime;\n  },\n    currentQuestion() {\n      return this.examQuestions[this.currentQuestionIndex];\n    },\n    answeredCount() {\n      return this.getAnsweredCount;\n    },\n      singleChoiceIndexes() {\n    return this.examQuestions\n      .map((question, index) => ({ question, index }))\n      .filter(item => item.question.type === '选择题')\n      .map(item => item.index);\n  },\n  fillInBlankIndexes() {\n    return this.examQuestions\n      .map((question, index) => ({ question, index }))\n      .filter(item => item.question.type === '填空题')\n      .map(item => item.index);\n  },\n  trueFalseIndexes() {\n    return this.examQuestions\n      .map((question, index) => ({ question, index }))\n      .filter(item => item.question.type === '判断题')\n      .map(item => item.index);\n  },\n  essayIndexes() {\n    return this.examQuestions\n      .map((question, index) => ({ question, index }))\n      .filter(item => item.question.type === '问答题')\n      .map(item => item.index);\n  },\n    singleChoiceQuestions() {\n      return this.examQuestions.filter(q => q.type === '选择题');\n    },\n    fillInBlankQuestions() {\n      return this.examQuestions.filter(q => q.type === '填空题');\n    },\n    trueFalseQuestions() {\n      return this.examQuestions.filter(q => q.type === '判断题');\n    },\n    essayQuestions() {\n      return this.examQuestions.filter(q => q.type === '问答题');\n    }\n  },\n  methods: {\n    ...mapMutations(['setExamAnswer', 'submitExamAnswer']),\n    ...mapActions(['submitExamAnswer', 'addPaper', 'addQuestionToPaper', 'removeFromPaper', 'fetchPaperQuestion', 'updatePaperQuestions', 'deletePaper', 'fetchPapersPages']),\n\n    previousQuestion() {\n      if (this.currentQuestionIndex > 0) {\n        this.currentQuestionIndex--;\n      }\n    },\n    async submit() {\n      const loadingInstance = this.$loading({\n        lock: true,\n        text: 'Loading...',\n        spinner: svg, // 使用自定义 SVG 图案\n        background: 'rgba(0, 0, 0, 0.7)',\n        customClass: 'custom-loading-svg', // 自定义样式类名\n      });\n\n      await this.submitExamAnswer(this.examAnswers);\n\n      setTimeout(() => {\n        loadingInstance.close();\n        this.$router.push('/test');\n      }, 700);\n    },\n    nextQuestion() {\n      if (this.currentQuestionIndex < this.examQuestions.length - 1) {\n        this.currentQuestionIndex++;\n      }\n    },\n    selectOption(questionId, option) {\n      this.setExamAnswer({ questionId, answer: option });\n      this.updateQuestionStatus(questionId);  // 调用更新状态的方法\n    },\n    updateAnswer(questionId, answer) {\n      this.setExamAnswer({ questionId, answer });\n      this.updateQuestionStatus(questionId);  // 调用更新状态的方法\n    },\n    updateQuestionStatus(questionId) {\n      this.questionStatus[questionId] = !!this.getExamAnswer(questionId);\n    },\n    isOptionSelected(questionId, option) {\n      return this.getExamAnswer(questionId) === option;\n    },\n    cleanedDescription(description) {\n      const regex = /A\\..*?\\nB\\..*?\\nC\\..*?\\nD\\..*/s;\n      return description.replace(regex, '');\n    },\n    questionTypeAndScore(type) {\n      var score;\n      if (type==='选择题'){\n        score = 3\n      }else if(type==='判断题'){\n        score = 3\n      }else if(type==='填空题'){\n        score = 5\n      }else if(type==='问答题'){\n        score = 10\n      }\n      return `${type}:${score}分`;\n    },\n    extractedOptions(description) {\n      const options = description.match(/A\\..*?\\nB\\..*?\\nC\\..*?\\nD\\..*/s);\n      if (options) {\n        return options[0].split(/(?=[A-D]\\.)/).map(opt => opt.trim());\n      }\n      return [];\n    },\n    previewExam() {\n      ElMessage({\n        message: '即将打开整卷预览功能',\n        type: 'info'\n      });\n    },\n    goToQuestion(index) {\n      this.currentQuestionIndex = index;\n    }\n  },\n  mounted() {\n      console.log(\"eeeeeee:\", this.user)\n      \n      this.value10 = Date.now() + 1000 * 60 * this.examInfo.durationTime;\n      this.showCountdown = true;\n  },\n  created() {\n    console.log(this.user);\n    if (!this.user) {\n      this.alertMessage = '未登录';\n      ElMessage(\"未登录\")\n      setTimeout(() => {\n        this.$router.push('/');\n      }, 2000); // 等待2秒后跳转\n    }\n  }\n};\n</script>\n\n\n\n\n<style scoped>\n.min-h-screen {\n  min-height: 100vh;\n}\n\n.bg-zinc-100 {\n  background-color: #f5f5f5;\n}\n\n.dark .bg-zinc-900 {\n  background-color: #1a1a1a;\n}\n\n.bg-zinc-800 {\n  background-color: #2d2d2d;\n}\n\n.text-white {\n  color: #fff;\n}\n\n.p-4 {\n  padding: 1rem;\n}\n\n.flex {\n  display: flex;\n}\n\n.justify-between {\n  justify-content: space-between;\n}\n\n.items-center {\n  align-items: center;\n}\n\n.text-lg {\n  font-size: 1.125rem;\n}\n.text-lg2 {\n  font-size: 0.925rem;\n}\n.text-gray-500 {\n  color: #737373;\n}\n.bg-teal-500 {\n  background-color: #38b2ac;\n}\n\n.px-4 {\n  padding-left: 1rem;\n  padding-right: 1rem;\n}\n\n.py-2 {\n  padding-top: 0.5rem;\n  padding-bottom: 0.5rem;\n}\n\n.rounded {\n  border-radius: 0.25rem;\n}\n\n.w-1 {\n  width: 20%;\n}\n\n.bg-white {\n  background-color: #fff;\n}\n\n.dark .bg-zinc-800 {\n  background-color: #2d2d2d;\n}\n\n.flex-col {\n  flex-direction: column;\n}\n\n.mb-4 {\n  margin-bottom: 1rem;\n}\n\n.rounded-full {\n  border-radius: 9999px;\n}\n\n.text-center {\n  text-align: center;\n}\n\n.font-bold {\n  font-weight: 700;\n}\n\n.text-sm {\n  font-size: 0.875rem;\n}\n\n.text-zinc-500 {\n  color: #737373;\n}\n\n.text-blue-500 {\n  color: #4299e1;\n}\n\n.bg-zinc-100 {\n  background-color: #f5f5f5;\n}\n\n.dark .bg-zinc-700 {\n  background-color: #3d3d3d;\n}\n\n.text-black {\n  color: #000;\n}\n\n.dark .text-white {\n  color: #fff;\n}\n\n.text-xl {\n  font-size: 1.25rem;\n}\n\n.grid {\n  display: grid;\n}\n\n.grid-cols-4 {\n  grid-template-columns: repeat(4, 1fr);\n}\n\n.gap-2 {\n  gap: 0.5rem;\n}\n\n.bg-teal-500 {\n  background-color: #38b2ac;\n}\n\n.dark .text-zinc-300 {\n  color: #d1d1d1;\n}\n\n.text-zinc-700 {\n  color: #525252;\n}\n\n.text-zinc-300 {\n  color: #d1d1d1;\n}\n\n.dark .bg-zinc-700 {\n  background-color: #3d3d3d;\n}\n\n.block {\n  display: block;\n}\n\n.mt-4 {\n  margin-top: 1rem;\n}\n\n.mr-2 {\n  margin-right: 0.5rem;\n}\n\n.flex-1 {\n  flex: 1;\n}\n\n.w-4 {\n  width: 1rem;\n}\n\n.h-4 {\n  height: 1rem;\n}\n\n.rounded-full {\n  border-radius: 9999px;\n}\n\n.inline-block {\n  display: inline-block;\n}\n\n.bg-zinc-300 {\n  background-color: #d1d1d1;\n}\n\n.dark .bg-zinc-600 {\n  background-color: #525252;\n}\n\n.bg-orange-300 {\n  background-color: #f6ad55;\n}\n\n.dark .bg-orange-600 {\n  background-color: #dd6b20;\n}\n\n.bg-green-300 {\n  background-color: #9ae6b4;\n}\n\n.dark .bg-green-600 {\n  background-color: #48bb78;\n}\n\n.grid-cols-5 {\n  grid-template-columns: repeat(5, 1fr);\n}\n\n.border {\n  border-width: 1px;\n}\n\n.border-zinc-300 {\n  border-color: #d1d1d1;\n}\n.background-image {\n  width: 100px; /* 图片的宽度 */\n  height: 100px; /* 图片的高度 */\n  object-fit: cover; /* 保持图片的长宽比，裁剪超出部分 */\n}\n\n\n.custom-header {\n  height: 25px;\n  background-color: #606266;\n}\n/* 定义aside元素的样式 */\n.aside {\n  width: 25%;\n  background-color: white;\n  padding: 16px;\n}\n\n.aside.dark {\n  background-color: #2d3748;\n}\n\n/* 定义状态指示器的样式 */\n.status-indicator {\n  width: 16px;\n  height: 16px;\n  border-radius: 50%;\n  display: inline-block;\n}\n\n.status-indicator.not-answered {\n  background-color: #e2e8f0;\n}\n\n.status-indicator.answered {\n  background-color: #9ae6b4;\n}\n\n/* 定义网格布局的样式 */\n.question-grid {\n  display: grid;\n  grid-template-columns: repeat(5, 1fr);\n  gap: 8px;\n  row-gap: 10px;\n}\n\n.text-center {\n  text-align: center;\n}\n\n.text-zinc-500 {\n  color: #6b7280;\n}\n\n.mb-4 {\n  margin-bottom: 16px;\n}\n\n.mt-2 {\n  margin-top: 8px;\n}\n\n.flex {\n  display: flex;\n}\n\n.justify-around {\n  justify-content: space-around;\n}\n\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}