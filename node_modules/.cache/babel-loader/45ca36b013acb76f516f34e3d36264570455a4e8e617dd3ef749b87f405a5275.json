{"ast":null,"code":"import { createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, createCommentVNode as _createCommentVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, withCtx as _withCtx, renderList as _renderList, Fragment as _Fragment, normalizeClass as _normalizeClass, createBlock as _createBlock, createStaticVNode as _createStaticVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-521837de\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  key: 0,\n  class: \"min-h-screen flex flex-col bg-zinc-100 dark:bg-zinc-900\"\n};\nconst _hoisted_2 = {\n  class: \"bg-zinc-800 text-white p-4 flex justify-between items-center custom-header\"\n};\nconst _hoisted_3 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h1\", {\n  class: \"text-lg\"\n}, \"考试\", -1 /* HOISTED */));\nconst _hoisted_4 = {\n  class: \"flex flex-1\"\n};\nconst _hoisted_5 = {\n  class: \"w-1 bg-white dark:bg-zinc-800 p-4\"\n};\nconst _hoisted_6 = {\n  class: \"flex flex-col items-center mb-4\"\n};\nconst _hoisted_7 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"svg\", {\n  t: \"1719502748187\",\n  class: \"icon\",\n  viewBox: \"0 0 1024 1024\",\n  version: \"1.1\",\n  xmlns: \"http://www.w3.org/2000/svg\",\n  \"p-id\": \"17936\",\n  width: \"40\",\n  height: \"40\"\n}, [/*#__PURE__*/_createElementVNode(\"path\", {\n  d: \"M742.7072 958.0032H188.9024a101.4528 101.4528 0 0 1-101.2992-101.4016V167.3984a101.4528 101.4528 0 0 1 101.2992-101.376h553.8048a101.5296 101.5296 0 0 1 101.376 101.376v277.9136h-64V167.3984c0-20.608-16.7936-37.376-37.376-37.376H188.9024c-20.608 0-37.4016 16.768-37.4016 37.376v689.3056c0 20.608 16.7936 37.376 37.376 37.376h553.8304c20.5824 0 37.376-16.768 37.376-37.376V599.5008h64v257.1008a101.5296 101.5296 0 0 1-101.376 101.376z\",\n  fill: \"#595959\",\n  \"p-id\": \"17937\"\n}), /*#__PURE__*/_createElementVNode(\"path\", {\n  d: \"M552.2944 543.8976H247.6032c-17.7152 0-32-14.2848-32-32 0-17.6896 14.2848-32 32-32h304.6912c17.7152 0 32 14.3104 32 32 0 17.7152-14.2848 32-32 32z m-80.9984 127.7952H247.6032c-17.7152 0-32-14.2848-32-32 0-17.6896 14.2848-32 32-32h223.6928c17.7152 0 32 14.3104 32 32 0 17.7152-14.2848 32-32 32z m-67.9936 128.2048H247.6032c-17.7152 0-32-14.2848-32-32 0-17.6896 14.2848-32 32-32h155.6992c17.6896 0 32 14.3104 32 32 0 17.7152-14.3104 32-32 32z m132.1984 17.408c-8.4992 0-16.6912-3.4048-22.7072-9.4976a31.8464 31.8464 0 0 1-8.7808-28.0064c0.0768-0.7936 14.592-84.8896 18.2784-106.7008a31.744 31.744 0 0 1 8.9088-17.3056l257.1008-257.1008c11.1872-11.1872 27.1104-16.2048 43.6992-13.7984a65.2544 65.2544 0 0 1 36.7104 18.8928l48.1792 48.2048c10.2144 10.2144 16.896 23.296 18.9184 36.7104 2.3808 16.5888-2.6112 32.5888-13.824 43.6992L664.9344 789.6064a31.7952 31.7952 0 0 1-16.2048 8.704c-22.2976 4.608-104.6016 17.9968-108.0064 18.4832a23.4752 23.4752 0 0 1-5.1968 0.512z m48.2048-123.3152l-9.0112 52.5056a3676.16 3676.16 0 0 0 51.9168-8.9856l242.5856-242.6112-43.1872-43.2896-242.304 242.3808zM275.8912 234.9056v149.504H251.392v-114.0224c-6.784 4.8128-24.0896 12.2112-24.0896 12.2112v-24.32c16.1024-5.6832 24.32-12.0832 30.208-23.4752h18.3808v0.1024z\",\n  fill: \"#595959\",\n  \"p-id\": \"17938\"\n}), /*#__PURE__*/_createElementVNode(\"path\", {\n  d: \"M285.3888 393.9072H241.92v-107.52c-5.2992 2.6112-9.984 4.608-10.9056 5.0176l-13.184 5.6832V251.6992l6.4-2.2016c15.488-5.376 20.8896-11.008 24.8832-18.8928l2.7136-5.12h33.6896v168.4224h-0.1024z m-24.4992-18.9952h5.504V244.4032h-3.4816c-5.888 9.088-13.9008 15.3856-26.2144 20.48v2.9184c3.712-1.792 7.0912-3.712 9.216-5.12l14.976-10.496v122.7264z m165.7088-121.216c9.216 13.824 13.824 32.512 13.824 55.9104 0 23.3984-4.608 42.0864-13.824 55.8848-9.9072 14.5152-23.5008 21.8112-40.8064 21.8112-17.5872 0-31.1808-7.296-40.7808-21.8112-9.216-13.7984-13.824-32.512-13.824-55.8848 0-23.3984 4.608-42.112 13.824-55.9104 9.472-14.4896 23.0912-21.7856 40.7808-21.7856 17.408 0.1024 31.0016 7.296 40.8064 21.7856z m-65.9968 18.8928c-3.4048 8.9088-4.992 21.2992-4.992 37.12 0 15.488 1.6896 27.904 4.992 37.0944 4.8896 13.312 13.312 19.8912 25.088 19.8912 11.6992 0 20.1216-6.6048 25.088-19.8912 3.4304-9.216 5.0176-21.6064 5.0176-37.12 0-15.7952-1.6896-28.0832-4.992-37.0944-4.992-13.312-13.4144-19.8912-25.088-19.8912-12.032 0-20.4032 6.6048-25.1136 19.8912z\",\n  fill: \"#595959\",\n  \"p-id\": \"17939\"\n}), /*#__PURE__*/_createElementVNode(\"path\", {\n  d: \"M385.6896 396.8c-20.8896 0-37.2992-8.8064-48.7936-26.0096-10.1888-15.2832-15.3856-35.8912-15.3856-61.184 0-25.3184 5.1968-45.824 15.3856-61.184 11.3152-17.2288 27.6992-26.0352 48.6912-26.0352 20.736 0 37.12 8.704 48.7168 26.0096 10.1888 15.3088 15.3856 35.8912 15.3856 61.184 0 25.3184-5.1968 45.824-15.3856 61.2096l-0.1024 0.1024c-11.52 17.2032-27.904 25.9072-48.512 25.9072z m0-155.2896c-14.3872 0-25.1904 5.6832-32.896 17.4848-8.192 12.2112-12.288 29.312-12.288 50.688 0 21.4272 4.096 38.528 12.1856 50.6112 7.808 11.8016 18.6112 17.5104 32.9216 17.5104 14.08 0 24.8832-5.8112 32.9984-17.6128 8.0896-12.1856 12.1856-29.184 12.1856-50.5856 0-21.4016-4.096-38.5024-12.1856-50.6112-7.9104-11.776-18.688-17.4848-32.9216-17.4848z m0 134.5792c-11.0848 0-26.112-4.48-33.9968-26.112-3.7888-10.368-5.5808-23.5776-5.5808-40.2688 0-16.9984 1.792-30.208 5.5808-40.32 7.808-21.5808 22.784-26.112 33.9968-26.112 11.008 0 25.9072 4.5312 34.0224 26.0352 3.7888 10.0864 5.5808 23.296 5.5808 40.3968 0 16.7936-1.792 30.0032-5.5808 40.2944v0.1024c-8.1152 21.504-23.0144 25.984-34.0224 25.984z m0-113.8944c-5.5808 0-11.8784 1.6128-16.1792 13.5936v0.1024c-2.9184 7.808-4.4032 19.2-4.4032 33.7152 0 14.2848 1.4848 25.7024 4.48 33.792 4.5056 12.1088 11.008 13.5936 16.2048 13.5936 5.12 0 11.5968-1.5872 16.2048-13.696 2.8928-8.0896 4.4032-19.5072 4.4032-33.792 0-14.592-1.5104-25.9072-4.4032-33.7152-4.6848-11.9808-11.0848-13.568-16.3072-13.568zM566.7072 253.696c9.216 13.824 13.7984 32.512 13.7984 55.9104 0 23.3984-4.608 42.0864-13.824 55.8848-9.8816 14.5152-23.4752 21.8112-40.7808 21.8112-17.6128 0-31.2064-7.296-40.8064-21.8112-9.216-13.7984-13.7984-32.512-13.7984-55.8848 0-23.3984 4.608-42.112 13.824-55.9104 9.472-14.4896 23.0912-21.7856 40.7808-21.7856 17.408 0.1024 30.976 7.296 40.8064 21.7856z m-65.92 18.8928c-3.3792 8.9088-4.992 21.2992-4.992 37.12 0 15.488 1.7152 27.904 4.992 37.0944 4.9152 13.312 13.312 19.8912 25.1136 19.8912 11.6992 0 20.096-6.6048 25.088-19.8912 3.4048-9.216 5.0176-21.6064 5.0176-37.12 0-15.7952-1.7152-28.0832-5.0176-37.0944-4.992-13.312-13.3888-19.8912-25.088-19.8912-12.0064 0-20.4032 6.6048-25.088 19.8912z\",\n  fill: \"#595959\",\n  \"p-id\": \"17940\"\n}), /*#__PURE__*/_createElementVNode(\"path\", {\n  d: \"M525.9008 396.8c-20.8896 0-37.2992-8.8064-48.7936-26.0096-10.2144-15.2832-15.4112-35.8912-15.4112-61.184 0-25.3184 5.1968-45.824 15.4112-61.184 11.2896-17.2288 27.6992-26.0352 48.6912-26.0352 20.7104 0 37.12 8.704 48.6912 26.0096 10.2144 15.3088 15.4112 35.8912 15.4112 61.184 0 25.3184-5.1968 45.824-15.4112 61.2096l-0.0768 0.1024c-11.6224 17.2032-28.0064 25.9072-48.512 25.9072z m0-155.2896c-14.4128 0-25.1904 5.6832-32.896 17.4848-8.192 12.2112-12.288 29.312-12.288 50.688 0 21.4272 4.096 38.528 12.1856 50.6112 7.808 11.8016 18.5856 17.5104 32.896 17.5104 14.08 0 24.9088-5.8112 33.024-17.6128 8.0896-12.1856 12.1856-29.184 12.1856-50.5856 0-21.4016-4.096-38.5024-12.2112-50.6112-7.8848-11.776-18.688-17.4848-32.896-17.4848z m0 134.5792c-11.1104 0-26.112-4.48-33.9968-26.112-3.8144-10.368-5.6064-23.5776-5.6064-40.2688 0-16.9984 1.792-30.208 5.6064-40.32 7.808-21.5808 22.784-26.112 34.0992-26.112 11.008 0 25.9072 4.5312 33.9968 26.0352 3.7888 10.0864 5.6064 23.296 5.6064 40.3968 0 16.7936-1.792 30.0032-5.6064 40.2944v0.1024c-8.192 21.504-23.0912 25.984-34.0992 25.984z m0-113.8944c-5.6064 0-11.904 1.6128-16.2048 13.5936v0.1024c-2.8928 7.808-4.4032 19.2-4.4032 33.7152 0 14.2848 1.5104 25.7024 4.5056 33.792 4.5056 12.1088 11.008 13.5936 16.2048 13.5936 5.12 0 11.5968-1.5872 16.2048-13.696 2.8928-8.0896 4.4032-19.5072 4.4032-33.792 0-14.592-1.5104-25.9072-4.4032-33.7152-4.7104-11.9808-11.2128-13.568-16.3072-13.568z\",\n  fill: \"#595959\",\n  \"p-id\": \"17941\"\n})], -1 /* HOISTED */));\nconst _hoisted_8 = {\n  class: \"text-center\"\n};\nconst _hoisted_9 = {\n  class: \"text-lg font-bold\"\n};\nconst _hoisted_10 = {\n  class: \"text-sm text-zinc-500\"\n};\nconst _hoisted_11 = {\n  class: \"text-sm text-blue-500\"\n};\nconst _hoisted_12 = {\n  class: \"bg-zinc-100 dark:bg-zinc-700 p-4 rounded mb-4\"\n};\nconst _hoisted_13 = {\n  class: \"text-center text-zinc-500\"\n};\nconst _hoisted_14 = {\n  class: \"text-black dark:text-white\"\n};\nconst _hoisted_15 = {\n  class: \"text-black dark:text-white\"\n};\nconst _hoisted_16 = {\n  class: \"bg-zinc-100 dark:bg-zinc-700 p-4 rounded mb-4\"\n};\nconst _hoisted_17 = {\n  key: 0\n};\nconst _hoisted_18 = {\n  class: \"text-sm text-zinc-500\"\n};\nconst _hoisted_19 = {\n  class: \"text-sm text-zinc-500\"\n};\nconst _hoisted_20 = {\n  class: \"flex-1 bg-white dark:bg-zinc-800 p-4\"\n};\nconst _hoisted_21 = {\n  class: \"flex justify-between items-center mb-4\"\n};\nconst _hoisted_22 = {\n  class: \"mb-4\"\n};\nconst _hoisted_23 = {\n  class: \"text-lg2 text-gray-500\"\n};\nconst _hoisted_24 = {\n  class: \"text-lg\"\n};\nconst _hoisted_25 = {\n  key: 0,\n  class: \"mt-4\"\n};\nconst _hoisted_26 = {\n  class: \"block mb-2\"\n};\nconst _hoisted_27 = [\"name\", \"value\", \"onChange\", \"checked\"];\nconst _hoisted_28 = {\n  key: 1,\n  class: \"mt-4\"\n};\nconst _hoisted_29 = {\n  class: \"block mb-2\"\n};\nconst _hoisted_30 = [\"value\"];\nconst _hoisted_31 = {\n  key: 2,\n  class: \"mt-4\"\n};\nconst _hoisted_32 = {\n  class: \"block mb-2\"\n};\nconst _hoisted_33 = [\"name\", \"checked\"];\nconst _hoisted_34 = {\n  class: \"block mb-2\"\n};\nconst _hoisted_35 = [\"name\", \"checked\"];\nconst _hoisted_36 = {\n  key: 3,\n  class: \"mt-4\"\n};\nconst _hoisted_37 = {\n  class: \"block mb-2\"\n};\nconst _hoisted_38 = {\n  class: \"w-1 bg-white dark:bg-zinc-800 p-4\"\n};\nconst _hoisted_39 = /*#__PURE__*/_createStaticVNode(\"<div class=\\\"mb-4\\\" data-v-521837de><p class=\\\"text-center text-zinc-500\\\" data-v-521837de>作答状态</p><div class=\\\"flex justify-around mt-2\\\" data-v-521837de><span class=\\\"bg-zinc-300 dark:bg-zinc-600 w-4 h-4 rounded-full inline-block\\\" style=\\\"margin-left:70px;\\\" data-v-521837de></span> 未作答 <span class=\\\"bg-green-300 dark:bg-green-600 w-4 h-4 rounded-full inline-block\\\" style=\\\"margin-left:20px;\\\" data-v-521837de></span> 已作答 </div></div>\", 1);\nconst _hoisted_40 = {\n  class: \"mb-4\"\n};\nconst _hoisted_41 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"p\", {\n  class: \"text-center text-zinc-500\"\n}, \"单选题\", -1 /* HOISTED */));\nconst _hoisted_42 = {\n  class: \"grid grid-cols-5 gap-2\"\n};\nconst _hoisted_43 = {\n  class: \"mb-4\"\n};\nconst _hoisted_44 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"p\", {\n  class: \"text-center text-zinc-500\"\n}, \"判断题\", -1 /* HOISTED */));\nconst _hoisted_45 = {\n  class: \"grid grid-cols-5 gap-2\"\n};\nconst _hoisted_46 = {\n  class: \"mb-4\"\n};\nconst _hoisted_47 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"p\", {\n  class: \"text-center text-zinc-500\"\n}, \"填空题\", -1 /* HOISTED */));\nconst _hoisted_48 = {\n  class: \"grid grid-cols-5 gap-2\"\n};\nconst _hoisted_49 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"p\", {\n  class: \"text-center text-zinc-500\"\n}, \"问答题\", -1 /* HOISTED */));\nconst _hoisted_50 = {\n  class: \"grid grid-cols-5 gap-2\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_countdown = _resolveComponent(\"el-countdown\");\n  const _component_el_button = _resolveComponent(\"el-button\");\n  return _ctx.user ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"header\", _hoisted_2, [_hoisted_3, _createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.submit && $options.submit(...args)),\n    class: \"bg-teal-500 text-white px-4 py-2 rounded\"\n  }, \"提交试卷\")]), _createElementVNode(\"div\", _hoisted_4, [_createElementVNode(\"aside\", _hoisted_5, [_createElementVNode(\"div\", _hoisted_6, [_hoisted_7, _createElementVNode(\"div\", _hoisted_8, [_createElementVNode(\"p\", _hoisted_9, _toDisplayString(this.user.username), 1 /* TEXT */), _createElementVNode(\"p\", _hoisted_10, _toDisplayString($data._user.university), 1 /* TEXT */), _createElementVNode(\"p\", _hoisted_11, _toDisplayString(this.user.id), 1 /* TEXT */)])]), _createElementVNode(\"div\", _hoisted_12, [_createElementVNode(\"p\", _hoisted_13, [_createTextVNode(\" 已答: \"), _createElementVNode(\"span\", _hoisted_14, _toDisplayString($options.answeredCount), 1 /* TEXT */), _createTextVNode(\" 题数: \"), _createElementVNode(\"span\", _hoisted_15, _toDisplayString($options.totalCount), 1 /* TEXT */)])]), _createElementVNode(\"div\", _hoisted_16, [_createCommentVNode(\" <p class=\\\"text-center text-xl font-bold\\\">{{ timeRemaining }}</p> \"), $data.showCountdown ? (_openBlock(), _createElementBlock(\"div\", _hoisted_17, [_createVNode(_component_el_countdown, {\n    title: \"剩余时间\",\n    value: this.value10,\n    onFinish: $options.submit\n  }, null, 8 /* PROPS */, [\"value\", \"onFinish\"])])) : _createCommentVNode(\"v-if\", true), _createElementVNode(\"p\", _hoisted_18, \"开始时间: \" + _toDisplayString(this.examInfo.startTime), 1 /* TEXT */), _createElementVNode(\"p\", _hoisted_19, \"结束时间: \" + _toDisplayString(this.examInfo.endTime), 1 /* TEXT */)])]), _createElementVNode(\"main\", _hoisted_20, [_createElementVNode(\"div\", _hoisted_21, [_createVNode(_component_el_button, {\n    size: \"large\",\n    onClick: $options.previousQuestion,\n    disabled: $data.currentQuestionIndex === 0,\n    class: \"bg-zinc-200 dark:bg-zinc-700 text-zinc-700 dark:text-zinc-300 px-4 py-2 rounded\"\n  }, {\n    default: _withCtx(() => [_createTextVNode(\" 上一题 \")]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"onClick\", \"disabled\"]), _createVNode(_component_el_button, {\n    size: \"large\",\n    onClick: $options.nextQuestion,\n    disabled: $data.currentQuestionIndex === _ctx.examQuestions.length - 1,\n    class: \"bg-teal-500 text-white px-4 py-2 rounded\"\n  }, {\n    default: _withCtx(() => [_createTextVNode(\" 下一题 \")]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"onClick\", \"disabled\"])]), _createElementVNode(\"div\", _hoisted_22, [_createElementVNode(\"p\", _hoisted_23, _toDisplayString($options.questionTypeAndScore($options.currentQuestion.type)), 1 /* TEXT */), _createElementVNode(\"p\", _hoisted_24, _toDisplayString($options.cleanedDescription($options.currentQuestion.description)), 1 /* TEXT */), $options.currentQuestion.type === '选择题' ? (_openBlock(), _createElementBlock(\"div\", _hoisted_25, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($options.extractedOptions($options.currentQuestion.description), (option, index) => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: index\n    }, [_createElementVNode(\"label\", _hoisted_26, [_createElementVNode(\"input\", {\n      type: \"radio\",\n      name: `question-${$options.currentQuestion.id}`,\n      class: \"mr-2\",\n      value: option,\n      onChange: $event => $options.selectOption($options.currentQuestion.id, option),\n      checked: $options.isOptionSelected($options.currentQuestion.id, option)\n    }, null, 40 /* PROPS, NEED_HYDRATION */, _hoisted_27), _createTextVNode(\" \" + _toDisplayString(option), 1 /* TEXT */)])]);\n  }), 128 /* KEYED_FRAGMENT */))])) : $options.currentQuestion.type === '填空题' ? (_openBlock(), _createElementBlock(\"div\", _hoisted_28, [_createElementVNode(\"label\", _hoisted_29, [_createElementVNode(\"input\", {\n    type: \"text\",\n    class: \"w-full p-2 border border-zinc-300 rounded\",\n    onInput: _cache[1] || (_cache[1] = $event => $options.updateAnswer($options.currentQuestion.id, $event.target.value)),\n    value: _ctx.getExamAnswer($options.currentQuestion.id)\n  }, null, 40 /* PROPS, NEED_HYDRATION */, _hoisted_30)])])) : $options.currentQuestion.type === '判断题' ? (_openBlock(), _createElementBlock(\"div\", _hoisted_31, [_createElementVNode(\"label\", _hoisted_32, [_createElementVNode(\"input\", {\n    type: \"radio\",\n    name: `question-${$options.currentQuestion.id}`,\n    class: \"mr-2\",\n    value: \"正确\",\n    onChange: _cache[2] || (_cache[2] = $event => $options.selectOption($options.currentQuestion.id, '正确')),\n    checked: $options.isOptionSelected($options.currentQuestion.id, '正确')\n  }, null, 40 /* PROPS, NEED_HYDRATION */, _hoisted_33), _createTextVNode(\" 正确 \")]), _createElementVNode(\"label\", _hoisted_34, [_createElementVNode(\"input\", {\n    type: \"radio\",\n    name: `question-${$options.currentQuestion.id}`,\n    class: \"mr-2\",\n    value: \"错误\",\n    onChange: _cache[3] || (_cache[3] = $event => $options.selectOption($options.currentQuestion.id, '错误')),\n    checked: $options.isOptionSelected($options.currentQuestion.id, '错误')\n  }, null, 40 /* PROPS, NEED_HYDRATION */, _hoisted_35), _createTextVNode(\" 错误 \")])])) : $options.currentQuestion.type === '问答题' ? (_openBlock(), _createElementBlock(\"div\", _hoisted_36, [_createElementVNode(\"label\", _hoisted_37, [_createElementVNode(\"textarea\", {\n    class: \"w-full p-2 border border-zinc-300 rounded\",\n    style: {\n      \"width\": \"400px\"\n    },\n    rows: \"4\",\n    onInput: _cache[4] || (_cache[4] = $event => $options.updateAnswer($options.currentQuestion.id, $event.target.value))\n  }, _toDisplayString(_ctx.getExamAnswer($options.currentQuestion.id)), 33 /* TEXT, NEED_HYDRATION */)])])) : _createCommentVNode(\"v-if\", true)])]), _createElementVNode(\"aside\", _hoisted_38, [_hoisted_39, _createElementVNode(\"div\", _hoisted_40, [_hoisted_41, _createElementVNode(\"div\", _hoisted_42, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($options.singleChoiceIndexes, index => {\n    return _openBlock(), _createBlock(_component_el_button, {\n      key: index,\n      onClick: $event => $options.goToQuestion(index),\n      class: _normalizeClass({\n        'bg-green-300': $data.questionStatus[_ctx.examQuestions[index].id],\n        // 已作答\n        'bg-zinc-300': !$data.questionStatus[_ctx.examQuestions[index].id] // 未作答\n      })\n    }, {\n      default: _withCtx(() => [_createTextVNode(_toDisplayString(index + 1), 1 /* TEXT */)]),\n      _: 2 /* DYNAMIC */\n    }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"onClick\", \"class\"]);\n  }), 128 /* KEYED_FRAGMENT */))])]), _createElementVNode(\"div\", _hoisted_43, [_hoisted_44, _createElementVNode(\"div\", _hoisted_45, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($options.trueFalseIndexes, index => {\n    return _openBlock(), _createBlock(_component_el_button, {\n      key: index,\n      onClick: $event => $options.goToQuestion(index),\n      class: _normalizeClass({\n        'bg-green-300': $data.questionStatus[_ctx.examQuestions[index].id],\n        // 已作答\n        'bg-zinc-300': !$data.questionStatus[_ctx.examQuestions[index].id] // 未作答\n      })\n    }, {\n      default: _withCtx(() => [_createTextVNode(_toDisplayString(index + 1), 1 /* TEXT */)]),\n      _: 2 /* DYNAMIC */\n    }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"onClick\", \"class\"]);\n  }), 128 /* KEYED_FRAGMENT */))])]), _createElementVNode(\"div\", _hoisted_46, [_hoisted_47, _createElementVNode(\"div\", _hoisted_48, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($options.fillInBlankIndexes, index => {\n    return _openBlock(), _createBlock(_component_el_button, {\n      key: index,\n      onClick: $event => $options.goToQuestion(index),\n      class: _normalizeClass({\n        'bg-green-300': $data.questionStatus[_ctx.examQuestions[index].id],\n        // 已作答\n        'bg-zinc-300': !$data.questionStatus[_ctx.examQuestions[index].id] // 未作答\n      })\n    }, {\n      default: _withCtx(() => [_createTextVNode(_toDisplayString(index + 1), 1 /* TEXT */)]),\n      _: 2 /* DYNAMIC */\n    }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"onClick\", \"class\"]);\n  }), 128 /* KEYED_FRAGMENT */))])]), _createElementVNode(\"div\", null, [_hoisted_49, _createElementVNode(\"div\", _hoisted_50, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($options.essayIndexes, index => {\n    return _openBlock(), _createBlock(_component_el_button, {\n      key: index,\n      onClick: $event => $options.goToQuestion(index),\n      class: _normalizeClass({\n        'bg-green-300': $data.questionStatus[_ctx.examQuestions[index].id],\n        // 已作答\n        'bg-zinc-300': !$data.questionStatus[_ctx.examQuestions[index].id] // 未作答\n      })\n    }, {\n      default: _withCtx(() => [_createTextVNode(_toDisplayString(index + 1), 1 /* TEXT */)]),\n      _: 2 /* DYNAMIC */\n    }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"onClick\", \"class\"]);\n  }), 128 /* KEYED_FRAGMENT */))])])])])])) : _createCommentVNode(\"v-if\", true);\n}","map":{"version":3,"names":["key","class","_createElementVNode","t","viewBox","version","xmlns","width","height","d","fill","_createStaticVNode","_ctx","user","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","onClick","_cache","args","$options","submit","_hoisted_4","_hoisted_5","_hoisted_6","_hoisted_7","_hoisted_8","_hoisted_9","_toDisplayString","username","_hoisted_10","$data","_user","university","_hoisted_11","id","_hoisted_12","_hoisted_13","_createTextVNode","_hoisted_14","answeredCount","_hoisted_15","totalCount","_hoisted_16","_createCommentVNode","showCountdown","_hoisted_17","_createVNode","_component_el_countdown","title","value","value10","onFinish","_hoisted_18","examInfo","startTime","_hoisted_19","endTime","_hoisted_20","_hoisted_21","_component_el_button","size","previousQuestion","disabled","currentQuestionIndex","default","_withCtx","_","nextQuestion","examQuestions","length","_hoisted_22","_hoisted_23","questionTypeAndScore","currentQuestion","type","_hoisted_24","cleanedDescription","description","_hoisted_25","_Fragment","_renderList","extractedOptions","option","index","_hoisted_26","name","onChange","$event","selectOption","checked","isOptionSelected","_hoisted_27","_hoisted_28","_hoisted_29","onInput","updateAnswer","target","getExamAnswer","_hoisted_30","_hoisted_31","_hoisted_32","_hoisted_33","_hoisted_34","_hoisted_35","_hoisted_36","_hoisted_37","style","rows","_hoisted_38","_hoisted_39","_hoisted_40","_hoisted_41","_hoisted_42","singleChoiceIndexes","_createBlock","goToQuestion","_normalizeClass","questionStatus","_hoisted_43","_hoisted_44","_hoisted_45","trueFalseIndexes","_hoisted_46","_hoisted_47","_hoisted_48","fillInBlankIndexes","_hoisted_49","_hoisted_50","essayIndexes"],"sources":["C:\\Users\\86139\\Desktop\\demo_vue\\src\\views\\OnlineExamView.vue"],"sourcesContent":["<template>\n  <div  v-if=\"user\" class=\"min-h-screen flex flex-col bg-zinc-100 dark:bg-zinc-900\">\n    <header class=\"bg-zinc-800 text-white p-4 flex justify-between items-center custom-header\">\n      <h1 class=\"text-lg\">考试</h1>\n      <button @click=\"submit\" class=\"bg-teal-500 text-white px-4 py-2 rounded\">提交试卷</button>\n    </header>\n    <div class=\"flex flex-1\">\n      <aside class=\"w-1 bg-white dark:bg-zinc-800 p-4\">\n        <div class=\"flex flex-col items-center mb-4\">\n          <svg t=\"1719502748187\" class=\"icon\" viewBox=\"0 0 1024 1024\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" p-id=\"17936\" width=\"40\" height=\"40\"><path d=\"M742.7072 958.0032H188.9024a101.4528 101.4528 0 0 1-101.2992-101.4016V167.3984a101.4528 101.4528 0 0 1 101.2992-101.376h553.8048a101.5296 101.5296 0 0 1 101.376 101.376v277.9136h-64V167.3984c0-20.608-16.7936-37.376-37.376-37.376H188.9024c-20.608 0-37.4016 16.768-37.4016 37.376v689.3056c0 20.608 16.7936 37.376 37.376 37.376h553.8304c20.5824 0 37.376-16.768 37.376-37.376V599.5008h64v257.1008a101.5296 101.5296 0 0 1-101.376 101.376z\" fill=\"#595959\" p-id=\"17937\"></path><path d=\"M552.2944 543.8976H247.6032c-17.7152 0-32-14.2848-32-32 0-17.6896 14.2848-32 32-32h304.6912c17.7152 0 32 14.3104 32 32 0 17.7152-14.2848 32-32 32z m-80.9984 127.7952H247.6032c-17.7152 0-32-14.2848-32-32 0-17.6896 14.2848-32 32-32h223.6928c17.7152 0 32 14.3104 32 32 0 17.7152-14.2848 32-32 32z m-67.9936 128.2048H247.6032c-17.7152 0-32-14.2848-32-32 0-17.6896 14.2848-32 32-32h155.6992c17.6896 0 32 14.3104 32 32 0 17.7152-14.3104 32-32 32z m132.1984 17.408c-8.4992 0-16.6912-3.4048-22.7072-9.4976a31.8464 31.8464 0 0 1-8.7808-28.0064c0.0768-0.7936 14.592-84.8896 18.2784-106.7008a31.744 31.744 0 0 1 8.9088-17.3056l257.1008-257.1008c11.1872-11.1872 27.1104-16.2048 43.6992-13.7984a65.2544 65.2544 0 0 1 36.7104 18.8928l48.1792 48.2048c10.2144 10.2144 16.896 23.296 18.9184 36.7104 2.3808 16.5888-2.6112 32.5888-13.824 43.6992L664.9344 789.6064a31.7952 31.7952 0 0 1-16.2048 8.704c-22.2976 4.608-104.6016 17.9968-108.0064 18.4832a23.4752 23.4752 0 0 1-5.1968 0.512z m48.2048-123.3152l-9.0112 52.5056a3676.16 3676.16 0 0 0 51.9168-8.9856l242.5856-242.6112-43.1872-43.2896-242.304 242.3808zM275.8912 234.9056v149.504H251.392v-114.0224c-6.784 4.8128-24.0896 12.2112-24.0896 12.2112v-24.32c16.1024-5.6832 24.32-12.0832 30.208-23.4752h18.3808v0.1024z\" fill=\"#595959\" p-id=\"17938\"></path><path d=\"M285.3888 393.9072H241.92v-107.52c-5.2992 2.6112-9.984 4.608-10.9056 5.0176l-13.184 5.6832V251.6992l6.4-2.2016c15.488-5.376 20.8896-11.008 24.8832-18.8928l2.7136-5.12h33.6896v168.4224h-0.1024z m-24.4992-18.9952h5.504V244.4032h-3.4816c-5.888 9.088-13.9008 15.3856-26.2144 20.48v2.9184c3.712-1.792 7.0912-3.712 9.216-5.12l14.976-10.496v122.7264z m165.7088-121.216c9.216 13.824 13.824 32.512 13.824 55.9104 0 23.3984-4.608 42.0864-13.824 55.8848-9.9072 14.5152-23.5008 21.8112-40.8064 21.8112-17.5872 0-31.1808-7.296-40.7808-21.8112-9.216-13.7984-13.824-32.512-13.824-55.8848 0-23.3984 4.608-42.112 13.824-55.9104 9.472-14.4896 23.0912-21.7856 40.7808-21.7856 17.408 0.1024 31.0016 7.296 40.8064 21.7856z m-65.9968 18.8928c-3.4048 8.9088-4.992 21.2992-4.992 37.12 0 15.488 1.6896 27.904 4.992 37.0944 4.8896 13.312 13.312 19.8912 25.088 19.8912 11.6992 0 20.1216-6.6048 25.088-19.8912 3.4304-9.216 5.0176-21.6064 5.0176-37.12 0-15.7952-1.6896-28.0832-4.992-37.0944-4.992-13.312-13.4144-19.8912-25.088-19.8912-12.032 0-20.4032 6.6048-25.1136 19.8912z\" fill=\"#595959\" p-id=\"17939\"></path><path d=\"M385.6896 396.8c-20.8896 0-37.2992-8.8064-48.7936-26.0096-10.1888-15.2832-15.3856-35.8912-15.3856-61.184 0-25.3184 5.1968-45.824 15.3856-61.184 11.3152-17.2288 27.6992-26.0352 48.6912-26.0352 20.736 0 37.12 8.704 48.7168 26.0096 10.1888 15.3088 15.3856 35.8912 15.3856 61.184 0 25.3184-5.1968 45.824-15.3856 61.2096l-0.1024 0.1024c-11.52 17.2032-27.904 25.9072-48.512 25.9072z m0-155.2896c-14.3872 0-25.1904 5.6832-32.896 17.4848-8.192 12.2112-12.288 29.312-12.288 50.688 0 21.4272 4.096 38.528 12.1856 50.6112 7.808 11.8016 18.6112 17.5104 32.9216 17.5104 14.08 0 24.8832-5.8112 32.9984-17.6128 8.0896-12.1856 12.1856-29.184 12.1856-50.5856 0-21.4016-4.096-38.5024-12.1856-50.6112-7.9104-11.776-18.688-17.4848-32.9216-17.4848z m0 134.5792c-11.0848 0-26.112-4.48-33.9968-26.112-3.7888-10.368-5.5808-23.5776-5.5808-40.2688 0-16.9984 1.792-30.208 5.5808-40.32 7.808-21.5808 22.784-26.112 33.9968-26.112 11.008 0 25.9072 4.5312 34.0224 26.0352 3.7888 10.0864 5.5808 23.296 5.5808 40.3968 0 16.7936-1.792 30.0032-5.5808 40.2944v0.1024c-8.1152 21.504-23.0144 25.984-34.0224 25.984z m0-113.8944c-5.5808 0-11.8784 1.6128-16.1792 13.5936v0.1024c-2.9184 7.808-4.4032 19.2-4.4032 33.7152 0 14.2848 1.4848 25.7024 4.48 33.792 4.5056 12.1088 11.008 13.5936 16.2048 13.5936 5.12 0 11.5968-1.5872 16.2048-13.696 2.8928-8.0896 4.4032-19.5072 4.4032-33.792 0-14.592-1.5104-25.9072-4.4032-33.7152-4.6848-11.9808-11.0848-13.568-16.3072-13.568zM566.7072 253.696c9.216 13.824 13.7984 32.512 13.7984 55.9104 0 23.3984-4.608 42.0864-13.824 55.8848-9.8816 14.5152-23.4752 21.8112-40.7808 21.8112-17.6128 0-31.2064-7.296-40.8064-21.8112-9.216-13.7984-13.7984-32.512-13.7984-55.8848 0-23.3984 4.608-42.112 13.824-55.9104 9.472-14.4896 23.0912-21.7856 40.7808-21.7856 17.408 0.1024 30.976 7.296 40.8064 21.7856z m-65.92 18.8928c-3.3792 8.9088-4.992 21.2992-4.992 37.12 0 15.488 1.7152 27.904 4.992 37.0944 4.9152 13.312 13.312 19.8912 25.1136 19.8912 11.6992 0 20.096-6.6048 25.088-19.8912 3.4048-9.216 5.0176-21.6064 5.0176-37.12 0-15.7952-1.7152-28.0832-5.0176-37.0944-4.992-13.312-13.3888-19.8912-25.088-19.8912-12.0064 0-20.4032 6.6048-25.088 19.8912z\" fill=\"#595959\" p-id=\"17940\"></path><path d=\"M525.9008 396.8c-20.8896 0-37.2992-8.8064-48.7936-26.0096-10.2144-15.2832-15.4112-35.8912-15.4112-61.184 0-25.3184 5.1968-45.824 15.4112-61.184 11.2896-17.2288 27.6992-26.0352 48.6912-26.0352 20.7104 0 37.12 8.704 48.6912 26.0096 10.2144 15.3088 15.4112 35.8912 15.4112 61.184 0 25.3184-5.1968 45.824-15.4112 61.2096l-0.0768 0.1024c-11.6224 17.2032-28.0064 25.9072-48.512 25.9072z m0-155.2896c-14.4128 0-25.1904 5.6832-32.896 17.4848-8.192 12.2112-12.288 29.312-12.288 50.688 0 21.4272 4.096 38.528 12.1856 50.6112 7.808 11.8016 18.5856 17.5104 32.896 17.5104 14.08 0 24.9088-5.8112 33.024-17.6128 8.0896-12.1856 12.1856-29.184 12.1856-50.5856 0-21.4016-4.096-38.5024-12.2112-50.6112-7.8848-11.776-18.688-17.4848-32.896-17.4848z m0 134.5792c-11.1104 0-26.112-4.48-33.9968-26.112-3.8144-10.368-5.6064-23.5776-5.6064-40.2688 0-16.9984 1.792-30.208 5.6064-40.32 7.808-21.5808 22.784-26.112 34.0992-26.112 11.008 0 25.9072 4.5312 33.9968 26.0352 3.7888 10.0864 5.6064 23.296 5.6064 40.3968 0 16.7936-1.792 30.0032-5.6064 40.2944v0.1024c-8.192 21.504-23.0912 25.984-34.0992 25.984z m0-113.8944c-5.6064 0-11.904 1.6128-16.2048 13.5936v0.1024c-2.8928 7.808-4.4032 19.2-4.4032 33.7152 0 14.2848 1.5104 25.7024 4.5056 33.792 4.5056 12.1088 11.008 13.5936 16.2048 13.5936 5.12 0 11.5968-1.5872 16.2048-13.696 2.8928-8.0896 4.4032-19.5072 4.4032-33.792 0-14.592-1.5104-25.9072-4.4032-33.7152-4.7104-11.9808-11.2128-13.568-16.3072-13.568z\" fill=\"#595959\" p-id=\"17941\"></path></svg>\n          <div class=\"text-center\">\n            <p class=\"text-lg font-bold\">{{ this.user.username }}</p>\n            <p class=\"text-sm text-zinc-500\">{{ _user.university }}</p>\n            <p class=\"text-sm text-blue-500\">{{ this.user.id }}</p>\n          </div>\n        </div>\n        <div class=\"bg-zinc-100 dark:bg-zinc-700 p-4 rounded mb-4\">\n          <p class=\"text-center text-zinc-500\">\n            已答: <span class=\"text-black dark:text-white\">{{ answeredCount }}</span> 题数:\n            <span class=\"text-black dark:text-white\">{{ totalCount }}</span>\n          </p>\n        </div>\n        <div class=\"bg-zinc-100 dark:bg-zinc-700 p-4 rounded mb-4\">\n          <!-- <p class=\"text-center text-xl font-bold\">{{ timeRemaining }}</p> -->\n          <div v-if=\"showCountdown\">\n  <el-countdown title=\"剩余时间\" :value=this.value10 @finish=\"submit\" />\n</div>\n\n          <p class=\"text-sm text-zinc-500\">开始时间: {{ this.examInfo.startTime }}</p>\n          <p class=\"text-sm text-zinc-500\">结束时间: {{ this.examInfo.endTime }}</p>\n        </div>\n      </aside>\n\n      <main class=\"flex-1 bg-white dark:bg-zinc-800 p-4\">\n        <div class=\"flex justify-between items-center mb-4\">\n          <el-button size=\"large\" @click=\"previousQuestion\" :disabled=\"currentQuestionIndex === 0\" class=\"bg-zinc-200 dark:bg-zinc-700 text-zinc-700 dark:text-zinc-300 px-4 py-2 rounded\">\n            上一题\n          </el-button>\n          <el-button size=\"large\" @click=\"nextQuestion\" :disabled=\"currentQuestionIndex === examQuestions.length - 1\" class=\"bg-teal-500 text-white px-4 py-2 rounded\">\n            下一题\n          </el-button>\n        </div>\n        <div class=\"mb-4\">\n          <p class=\"text-lg2 text-gray-500\">{{ questionTypeAndScore(currentQuestion.type) }}</p>\n          <p class=\"text-lg\">{{ cleanedDescription(currentQuestion.description) }}</p>\n          <div v-if=\"currentQuestion.type === '选择题'\" class=\"mt-4\">\n            <div v-for=\"(option, index) in extractedOptions(currentQuestion.description)\" :key=\"index\">\n              <label class=\"block mb-2\">\n                <input type=\"radio\" :name=\"`question-${currentQuestion.id}`\" class=\"mr-2\" :value=\"option\" @change=\"selectOption(currentQuestion.id, option)\" :checked=\"isOptionSelected(currentQuestion.id, option)\" /> {{ option }}\n              </label>\n            </div>\n          </div>\n          <div v-else-if=\"currentQuestion.type === '填空题'\" class=\"mt-4\">\n            <label class=\"block mb-2\">\n              <input type=\"text\" class=\"w-full p-2 border border-zinc-300 rounded\" @input=\"updateAnswer(currentQuestion.id, $event.target.value)\" :value=\"getExamAnswer(currentQuestion.id)\" />\n            </label>\n          </div>\n          <div v-else-if=\"currentQuestion.type === '判断题'\" class=\"mt-4\">\n            <label class=\"block mb-2\">\n              <input type=\"radio\" :name=\"`question-${currentQuestion.id}`\" class=\"mr-2\" value=\"正确\" @change=\"selectOption(currentQuestion.id, '正确')\" :checked=\"isOptionSelected(currentQuestion.id, '正确')\" /> 正确\n            </label>\n            <label class=\"block mb-2\">\n              <input type=\"radio\" :name=\"`question-${currentQuestion.id}`\" class=\"mr-2\" value=\"错误\" @change=\"selectOption(currentQuestion.id, '错误')\" :checked=\"isOptionSelected(currentQuestion.id, '错误')\" /> 错误\n            </label>\n          </div>\n          <div v-else-if=\"currentQuestion.type === '问答题'\" class=\"mt-4\">\n            <label class=\"block mb-2\">\n              <textarea class=\"w-full p-2 border border-zinc-300 rounded\" style=\"width: 400px;\" rows=\"4\" @input=\"updateAnswer(currentQuestion.id, $event.target.value)\">{{ getExamAnswer(currentQuestion.id) }}</textarea>\n            </label>\n          </div>\n        </div>\n      </main>\n\n      <aside class=\"w-1 bg-white dark:bg-zinc-800 p-4\">\n        <div class=\"mb-4\">\n          <p class=\"text-center text-zinc-500\">作答状态</p>\n          <div class=\"flex justify-around mt-2\">\n            <span class=\"bg-zinc-300 dark:bg-zinc-600 w-4 h-4 rounded-full inline-block\" style=\"margin-left:70px\"></span>\n            未作答\n\n            <span class=\"bg-green-300 dark:bg-green-600 w-4 h-4 rounded-full inline-block \" style=\"margin-left:20px\"></span>\n            已作答\n          </div>\n        </div>\n  <div class=\"mb-4\">\n    <p class=\"text-center text-zinc-500\">单选题</p>\n    <div class=\"grid grid-cols-5 gap-2\">\n            <el-button\n        v-for=\"index in singleChoiceIndexes\"\n        :key=\"index\"\n        @click=\"goToQuestion(index)\"\n        :class=\"{\n          'bg-green-300': questionStatus[examQuestions[index].id],  // 已作答\n          'bg-zinc-300': !questionStatus[examQuestions[index].id]   // 未作答\n        }\"\n      >\n        {{ index + 1 }}\n      </el-button>\n    </div>\n  </div>\n\n  <div class=\"mb-4\">\n    <p class=\"text-center text-zinc-500\">判断题</p>\n    <div class=\"grid grid-cols-5 gap-2\">\n            <el-button\n        v-for=\"index in trueFalseIndexes\"\n        :key=\"index\"\n        @click=\"goToQuestion(index)\"\n        :class=\"{\n          'bg-green-300': questionStatus[examQuestions[index].id],  // 已作答\n          'bg-zinc-300': !questionStatus[examQuestions[index].id]   // 未作答\n        }\"\n      >\n\n        {{ index + 1 }}\n      </el-button>\n    </div>\n  </div>\n  <div class=\"mb-4\">\n    <p class=\"text-center text-zinc-500\">填空题</p>\n    <div class=\"grid grid-cols-5 gap-2\">\n            <el-button\n        v-for=\"index in fillInBlankIndexes\"\n        :key=\"index\"\n        @click=\"goToQuestion(index)\"\n        :class=\"{\n          'bg-green-300': questionStatus[examQuestions[index].id],  // 已作答\n          'bg-zinc-300': !questionStatus[examQuestions[index].id]   // 未作答\n        }\"\n      >\n\n        {{ index + 1 }}\n      </el-button>\n    </div>\n  </div>\n  <div>\n    <p class=\"text-center text-zinc-500\">问答题</p>\n    <div class=\"grid grid-cols-5 gap-2\">\n            <el-button\n        v-for=\"index in essayIndexes\"\n        :key=\"index\"\n        @click=\"goToQuestion(index)\"\n        :class=\"{\n          'bg-green-300': questionStatus[examQuestions[index].id],  // 已作答\n          'bg-zinc-300': !questionStatus[examQuestions[index].id]   // 未作答\n        }\"\n      >\n        {{ index + 1 }}\n      </el-button>\n    </div>\n  </div>\n      </aside>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { mapState, mapMutations, mapGetters, mapActions } from 'vuex';\nimport { ElMessage } from 'element-plus';\nimport { ref } from 'vue';\n\n// const value = ref(Date.now() + 100 * 60 * 60 * 7)\n// const value10 = ref(Date.now() + 1000 * 60 * 60 * 7); // 这里设置倒计时为7小时\n// const value10 = 100000;\n\nconst loading = ref(false);\nconst svg = `\n<path class=\"path\" d=\"\n  M 30 15\n  L 28 17\n  M 25.61 25.61\n  A 15 15, 0, 0, 1, 15 30\n  A 15 15, 0, 1, 1, 27.99 7.5\n  L 15 15\n\" style=\"stroke-width: 4px; fill: rgba(0, 0, 0, 0)\"/>\n`;\n\nexport default {\n  data() {\n    return {\n      currentQuestionIndex: 0,\n      _user: {\n        avatar: 'https://placehold.co/100x100',\n        name: 'baymax',\n        university: '哈尔滨工业大学',\n        id: '270123456'\n      },\n      questionStatus: {},\n      totalCount: 0,\n      // timeRemaining: '12641:36:25',\n      startTime: '2022-12-06 09:59:00',\n      endTime: '2022-12-09 09:59:00',\n      // value10: null,\n      showCountdown: false // 新添加的布尔值\n      // value10: ref(Date.now() + 1000 * 60 * 1),\n    };\n  },\n  computed: {\n    ...mapState(['examQuestions', 'examAnswers', 'examInfo', 'user', 'totalCount2']),\n    ...mapGetters(['getExamAnswer', 'getAnsweredCount']),\n    // value10(){\n    //   // this.value10.value = Date.now() + 1000 * 60 * this.examInfo.durationTime\n    //   console.log(\"eeeeeee2:\", ref(Date.now() + 1000 * 60 * this.examInfo.durationTime))\n    //   return ref(Date.now() + 1000 * 60 * this.examInfo.durationTime);\n      \n    // },\n    totalCount(){\n      return this.totalCount2;\n    },\n      value10() {\n    return Date.now() + 1000 * 60 * this.examInfo.durationTime;\n  },\n    currentQuestion() {\n      return this.examQuestions[this.currentQuestionIndex];\n    },\n    answeredCount() {\n      return this.getAnsweredCount;\n    },\n      singleChoiceIndexes() {\n    return this.examQuestions\n      .map((question, index) => ({ question, index }))\n      .filter(item => item.question.type === '选择题')\n      .map(item => item.index);\n  },\n  fillInBlankIndexes() {\n    return this.examQuestions\n      .map((question, index) => ({ question, index }))\n      .filter(item => item.question.type === '填空题')\n      .map(item => item.index);\n  },\n  trueFalseIndexes() {\n    return this.examQuestions\n      .map((question, index) => ({ question, index }))\n      .filter(item => item.question.type === '判断题')\n      .map(item => item.index);\n  },\n  essayIndexes() {\n    return this.examQuestions\n      .map((question, index) => ({ question, index }))\n      .filter(item => item.question.type === '问答题')\n      .map(item => item.index);\n  },\n    singleChoiceQuestions() {\n      return this.examQuestions.filter(q => q.type === '选择题');\n    },\n    fillInBlankQuestions() {\n      return this.examQuestions.filter(q => q.type === '填空题');\n    },\n    trueFalseQuestions() {\n      return this.examQuestions.filter(q => q.type === '判断题');\n    },\n    essayQuestions() {\n      return this.examQuestions.filter(q => q.type === '问答题');\n    }\n  },\n  methods: {\n    ...mapMutations(['setExamAnswer', 'submitExamAnswer']),\n    ...mapActions(['submitExamAnswer', 'addPaper', 'addQuestionToPaper', 'removeFromPaper', 'fetchPaperQuestion', 'updatePaperQuestions', 'deletePaper', 'fetchPapersPages']),\n\n    previousQuestion() {\n      if (this.currentQuestionIndex > 0) {\n        this.currentQuestionIndex--;\n      }\n    },\n    async submit() {\n      const loadingInstance = this.$loading({\n        lock: true,\n        text: 'Loading...',\n        spinner: svg, // 使用自定义 SVG 图案\n        background: 'rgba(0, 0, 0, 0.7)',\n        customClass: 'custom-loading-svg', // 自定义样式类名\n      });\n\n      await this.submitExamAnswer(this.examAnswers);\n\n      setTimeout(() => {\n        loadingInstance.close();\n        this.$router.push('/test3');\n      }, 700);\n    },\n    nextQuestion() {\n      if (this.currentQuestionIndex < this.examQuestions.length - 1) {\n        this.currentQuestionIndex++;\n      }\n    },\n    selectOption(questionId, option) {\n      this.setExamAnswer({ questionId, answer: option });\n      this.updateQuestionStatus(questionId);  // 调用更新状态的方法\n    },\n    updateAnswer(questionId, answer) {\n      this.setExamAnswer({ questionId, answer });\n      this.updateQuestionStatus(questionId);  // 调用更新状态的方法\n    },\n    updateQuestionStatus(questionId) {\n      this.questionStatus[questionId] = !!this.getExamAnswer(questionId);\n    },\n    isOptionSelected(questionId, option) {\n      return this.getExamAnswer(questionId) === option;\n    },\n    cleanedDescription(description) {\n      const regex = /A\\..*?\\nB\\..*?\\nC\\..*?\\nD\\..*/s;\n      return description.replace(regex, '');\n    },\n    questionTypeAndScore(type) {\n      var score;\n      if (type==='选择题'){\n        score = 3\n      }else if(type==='判断题'){\n        score = 3\n      }else if(type==='填空题'){\n        score = 5\n      }else if(type==='问答题'){\n        score = 10\n      }\n      return `${type}:${score}分`;\n    },\n    extractedOptions(description) {\n      const options = description.match(/A\\..*?\\nB\\..*?\\nC\\..*?\\nD\\..*/s);\n      if (options) {\n        return options[0].split(/(?=[A-D]\\.)/).map(opt => opt.trim());\n      }\n      return [];\n    },\n    previewExam() {\n      ElMessage({\n        message: '即将打开整卷预览功能',\n        type: 'info'\n      });\n    },\n    goToQuestion(index) {\n      this.currentQuestionIndex = index;\n    }\n  },\n  mounted() {\n      console.log(\"eeeeeee:\", this.user)\n      \n      this.value10 = Date.now() + 1000 * 60 * this.examInfo.durationTime;\n      this.showCountdown = true;\n  },\n  created() {\n    console.log(this.user);\n    if (!this.user) {\n      this.alertMessage = '未登录';\n      ElMessage(\"未登录\")\n      setTimeout(() => {\n        this.$router.push('/');\n      }, 2000); // 等待2秒后跳转\n    }\n  }\n};\n</script>\n\n\n\n\n<style scoped>\n.min-h-screen {\n  min-height: 100vh;\n}\n\n.bg-zinc-100 {\n  background-color: #f5f5f5;\n}\n\n.dark .bg-zinc-900 {\n  background-color: #1a1a1a;\n}\n\n.bg-zinc-800 {\n  background-color: #2d2d2d;\n}\n\n.text-white {\n  color: #fff;\n}\n\n.p-4 {\n  padding: 1rem;\n}\n\n.flex {\n  display: flex;\n}\n\n.justify-between {\n  justify-content: space-between;\n}\n\n.items-center {\n  align-items: center;\n}\n\n.text-lg {\n  font-size: 1.125rem;\n}\n.text-lg2 {\n  font-size: 0.925rem;\n}\n.text-gray-500 {\n  color: #737373;\n}\n.bg-teal-500 {\n  background-color: #38b2ac;\n}\n\n.px-4 {\n  padding-left: 1rem;\n  padding-right: 1rem;\n}\n\n.py-2 {\n  padding-top: 0.5rem;\n  padding-bottom: 0.5rem;\n}\n\n.rounded {\n  border-radius: 0.25rem;\n}\n\n.w-1 {\n  width: 20%;\n}\n\n.bg-white {\n  background-color: #fff;\n}\n\n.dark .bg-zinc-800 {\n  background-color: #2d2d2d;\n}\n\n.flex-col {\n  flex-direction: column;\n}\n\n.mb-4 {\n  margin-bottom: 1rem;\n}\n\n.rounded-full {\n  border-radius: 9999px;\n}\n\n.text-center {\n  text-align: center;\n}\n\n.font-bold {\n  font-weight: 700;\n}\n\n.text-sm {\n  font-size: 0.875rem;\n}\n\n.text-zinc-500 {\n  color: #737373;\n}\n\n.text-blue-500 {\n  color: #4299e1;\n}\n\n.bg-zinc-100 {\n  background-color: #f5f5f5;\n}\n\n.dark .bg-zinc-700 {\n  background-color: #3d3d3d;\n}\n\n.text-black {\n  color: #000;\n}\n\n.dark .text-white {\n  color: #fff;\n}\n\n.text-xl {\n  font-size: 1.25rem;\n}\n\n.grid {\n  display: grid;\n}\n\n.grid-cols-4 {\n  grid-template-columns: repeat(4, 1fr);\n}\n\n.gap-2 {\n  gap: 0.5rem;\n}\n\n.bg-teal-500 {\n  background-color: #38b2ac;\n}\n\n.dark .text-zinc-300 {\n  color: #d1d1d1;\n}\n\n.text-zinc-700 {\n  color: #525252;\n}\n\n.text-zinc-300 {\n  color: #d1d1d1;\n}\n\n.dark .bg-zinc-700 {\n  background-color: #3d3d3d;\n}\n\n.block {\n  display: block;\n}\n\n.mt-4 {\n  margin-top: 1rem;\n}\n\n.mr-2 {\n  margin-right: 0.5rem;\n}\n\n.flex-1 {\n  flex: 1;\n}\n\n.w-4 {\n  width: 1rem;\n}\n\n.h-4 {\n  height: 1rem;\n}\n\n.rounded-full {\n  border-radius: 9999px;\n}\n\n.inline-block {\n  display: inline-block;\n}\n\n.bg-zinc-300 {\n  background-color: #d1d1d1;\n}\n\n.dark .bg-zinc-600 {\n  background-color: #525252;\n}\n\n.bg-orange-300 {\n  background-color: #f6ad55;\n}\n\n.dark .bg-orange-600 {\n  background-color: #dd6b20;\n}\n\n.bg-green-300 {\n  background-color: #9ae6b4;\n}\n\n.dark .bg-green-600 {\n  background-color: #48bb78;\n}\n\n.grid-cols-5 {\n  grid-template-columns: repeat(5, 1fr);\n}\n\n.border {\n  border-width: 1px;\n}\n\n.border-zinc-300 {\n  border-color: #d1d1d1;\n}\n\n.custom-header {\n  height: 25px;\n  background-color: #606266;\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}