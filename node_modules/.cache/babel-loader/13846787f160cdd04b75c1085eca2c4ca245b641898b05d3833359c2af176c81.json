{"ast":null,"code":"import { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, createCommentVNode as _createCommentVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, withCtx as _withCtx, renderList as _renderList, Fragment as _Fragment, normalizeClass as _normalizeClass, createBlock as _createBlock, createStaticVNode as _createStaticVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-521837de\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  key: 0,\n  class: \"min-h-screen flex flex-col bg-zinc-100 dark:bg-zinc-900\"\n};\nconst _hoisted_2 = {\n  class: \"bg-zinc-800 text-white p-4 flex justify-between items-center custom-header\"\n};\nconst _hoisted_3 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h1\", {\n  class: \"text-lg\"\n}, \"考试\", -1 /* HOISTED */));\nconst _hoisted_4 = {\n  class: \"flex flex-1\"\n};\nconst _hoisted_5 = {\n  class: \"w-1 bg-white dark:bg-zinc-800 p-4\"\n};\nconst _hoisted_6 = {\n  class: \"flex flex-col items-center mb-4\"\n};\nconst _hoisted_7 = [\"src\"];\nconst _hoisted_8 = {\n  class: \"text-center\"\n};\nconst _hoisted_9 = {\n  class: \"text-lg font-bold\"\n};\nconst _hoisted_10 = {\n  class: \"text-sm text-zinc-500\"\n};\nconst _hoisted_11 = {\n  class: \"text-sm text-blue-500\"\n};\nconst _hoisted_12 = {\n  class: \"bg-zinc-100 dark:bg-zinc-700 p-4 rounded mb-4\"\n};\nconst _hoisted_13 = {\n  class: \"text-center text-zinc-500\"\n};\nconst _hoisted_14 = {\n  class: \"text-black dark:text-white\"\n};\nconst _hoisted_15 = {\n  class: \"text-black dark:text-white\"\n};\nconst _hoisted_16 = {\n  class: \"bg-zinc-100 dark:bg-zinc-700 p-4 rounded mb-4\"\n};\nconst _hoisted_17 = {\n  key: 0\n};\nconst _hoisted_18 = {\n  class: \"text-sm text-zinc-500\"\n};\nconst _hoisted_19 = {\n  class: \"text-sm text-zinc-500\"\n};\nconst _hoisted_20 = {\n  class: \"flex-1 bg-white dark:bg-zinc-800 p-4\"\n};\nconst _hoisted_21 = {\n  class: \"flex justify-between items-center mb-4\"\n};\nconst _hoisted_22 = {\n  class: \"mb-4\"\n};\nconst _hoisted_23 = {\n  class: \"text-lg2 text-gray-500\"\n};\nconst _hoisted_24 = {\n  class: \"text-lg\"\n};\nconst _hoisted_25 = {\n  key: 0,\n  class: \"mt-4\"\n};\nconst _hoisted_26 = {\n  class: \"block mb-2\"\n};\nconst _hoisted_27 = [\"name\", \"value\", \"onChange\", \"checked\"];\nconst _hoisted_28 = {\n  key: 1,\n  class: \"mt-4\"\n};\nconst _hoisted_29 = {\n  class: \"block mb-2\"\n};\nconst _hoisted_30 = [\"value\"];\nconst _hoisted_31 = {\n  key: 2,\n  class: \"mt-4\"\n};\nconst _hoisted_32 = {\n  class: \"block mb-2\"\n};\nconst _hoisted_33 = [\"name\", \"checked\"];\nconst _hoisted_34 = {\n  class: \"block mb-2\"\n};\nconst _hoisted_35 = [\"name\", \"checked\"];\nconst _hoisted_36 = {\n  key: 3,\n  class: \"mt-4\"\n};\nconst _hoisted_37 = {\n  class: \"block mb-2\"\n};\nconst _hoisted_38 = [\"value\"];\nconst _hoisted_39 = {\n  class: \"w-1 bg-white dark:bg-zinc-800 p-4\"\n};\nconst _hoisted_40 = /*#__PURE__*/_createStaticVNode(\"<div class=\\\"mb-4\\\" data-v-521837de><p class=\\\"text-center text-zinc-500\\\" data-v-521837de>作答状态</p><div class=\\\"flex justify-around mt-2\\\" data-v-521837de><span class=\\\"bg-zinc-300 dark:bg-zinc-600 w-4 h-4 rounded-full inline-block\\\" style=\\\"margin-left:70px;\\\" data-v-521837de></span> 未作答 <span class=\\\"bg-green-300 dark:bg-green-600 w-4 h-4 rounded-full inline-block\\\" style=\\\"margin-left:20px;\\\" data-v-521837de></span> 已作答 </div></div>\", 1);\nconst _hoisted_41 = {\n  class: \"mb-4\"\n};\nconst _hoisted_42 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"p\", {\n  class: \"text-center text-zinc-500\"\n}, \"单选题\", -1 /* HOISTED */));\nconst _hoisted_43 = {\n  class: \"grid grid-cols-5 gap-2\"\n};\nconst _hoisted_44 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"p\", {\n  class: \"text-center text-zinc-500\"\n}, \"判断题\", -1 /* HOISTED */));\nconst _hoisted_45 = {\n  class: \"grid grid-cols-5 gap-2\"\n};\nconst _hoisted_46 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"p\", {\n  class: \"text-center text-zinc-500\"\n}, \"填空题\", -1 /* HOISTED */));\nconst _hoisted_47 = {\n  class: \"grid grid-cols-5 gap-2\"\n};\nconst _hoisted_48 = {\n  class: \"mb-4\"\n};\nconst _hoisted_49 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"p\", {\n  class: \"text-center text-zinc-500\"\n}, \"问答题\", -1 /* HOISTED */));\nconst _hoisted_50 = {\n  class: \"grid grid-cols-5 gap-2\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_countdown = _resolveComponent(\"el-countdown\");\n  const _component_el_button = _resolveComponent(\"el-button\");\n  return _ctx.user ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"header\", _hoisted_2, [_hoisted_3, _createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.submit && $options.submit(...args)),\n    class: \"bg-teal-500 text-white px-4 py-2 rounded\"\n  }, \"提交试卷\")]), _createElementVNode(\"div\", _hoisted_4, [_createElementVNode(\"aside\", _hoisted_5, [_createElementVNode(\"div\", _hoisted_6, [_createElementVNode(\"img\", {\n    src: require('../assets/img/4.jpg'),\n    alt: \"Background Image\",\n    class: \"rounded-full mb-2 background-image\"\n  }, null, 8 /* PROPS */, _hoisted_7), _createElementVNode(\"div\", _hoisted_8, [_createElementVNode(\"p\", _hoisted_9, _toDisplayString(this.user.username), 1 /* TEXT */), _createElementVNode(\"p\", _hoisted_10, _toDisplayString($data._user.university), 1 /* TEXT */), _createElementVNode(\"p\", _hoisted_11, _toDisplayString(this.user.id), 1 /* TEXT */)])]), _createElementVNode(\"div\", _hoisted_12, [_createElementVNode(\"p\", _hoisted_13, [_createTextVNode(\" 已答: \"), _createElementVNode(\"span\", _hoisted_14, _toDisplayString($options.answeredCount), 1 /* TEXT */), _createTextVNode(\" 题数: \"), _createElementVNode(\"span\", _hoisted_15, _toDisplayString($options.totalCount), 1 /* TEXT */)])]), _createElementVNode(\"div\", _hoisted_16, [_createCommentVNode(\" <p class=\\\"text-center text-xl font-bold\\\">{{ timeRemaining }}</p> \"), $data.showCountdown ? (_openBlock(), _createElementBlock(\"div\", _hoisted_17, [_createVNode(_component_el_countdown, {\n    title: \"剩余时间\",\n    value: this.value10,\n    onFinish: $options.submit\n  }, null, 8 /* PROPS */, [\"value\", \"onFinish\"])])) : _createCommentVNode(\"v-if\", true), _createElementVNode(\"p\", _hoisted_18, \"开始时间: \" + _toDisplayString(this.examInfo.startTime), 1 /* TEXT */), _createElementVNode(\"p\", _hoisted_19, \"结束时间: \" + _toDisplayString(this.examInfo.endTime), 1 /* TEXT */)])]), _createElementVNode(\"main\", _hoisted_20, [_createElementVNode(\"div\", _hoisted_21, [_createVNode(_component_el_button, {\n    size: \"large\",\n    onClick: $options.previousQuestion,\n    disabled: $data.currentQuestionIndex === 0,\n    class: \"bg-zinc-200 dark:bg-zinc-700 text-zinc-700 dark:text-zinc-300 px-4 py-2 rounded\"\n  }, {\n    default: _withCtx(() => [_createTextVNode(\" 上一题 \")]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"onClick\", \"disabled\"]), _createVNode(_component_el_button, {\n    size: \"large\",\n    onClick: $options.nextQuestion,\n    disabled: $data.currentQuestionIndex === _ctx.examQuestions.length - 1,\n    class: \"bg-teal-500 text-white px-4 py-2 rounded\"\n  }, {\n    default: _withCtx(() => [_createTextVNode(\" 下一题 \")]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"onClick\", \"disabled\"])]), _createElementVNode(\"div\", _hoisted_22, [_createElementVNode(\"p\", _hoisted_23, _toDisplayString($options.questionTypeAndScore($options.currentQuestion.type)), 1 /* TEXT */), _createElementVNode(\"p\", _hoisted_24, _toDisplayString($options.cleanedDescription($options.currentQuestion.description)), 1 /* TEXT */), $options.currentQuestion.type === '选择题' ? (_openBlock(), _createElementBlock(\"div\", _hoisted_25, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($options.extractedOptions($options.currentQuestion.description), (option, index) => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: index\n    }, [_createElementVNode(\"label\", _hoisted_26, [_createElementVNode(\"input\", {\n      type: \"radio\",\n      name: `question-${$options.currentQuestion.id}`,\n      class: \"mr-2\",\n      value: option,\n      onChange: $event => $options.selectOption($options.currentQuestion.id, option),\n      checked: $options.isOptionSelected($options.currentQuestion.id, option)\n    }, null, 40 /* PROPS, NEED_HYDRATION */, _hoisted_27), _createTextVNode(\" \" + _toDisplayString(option), 1 /* TEXT */)])]);\n  }), 128 /* KEYED_FRAGMENT */))])) : $options.currentQuestion.type === '填空题' ? (_openBlock(), _createElementBlock(\"div\", _hoisted_28, [_createElementVNode(\"label\", _hoisted_29, [_createElementVNode(\"input\", {\n    type: \"text\",\n    class: \"w-full p-2 border border-zinc-300 rounded\",\n    onInput: _cache[1] || (_cache[1] = $event => $options.updateAnswer($options.currentQuestion.id, $event.target.value)),\n    value: _ctx.getExamAnswer($options.currentQuestion.id)\n  }, null, 40 /* PROPS, NEED_HYDRATION */, _hoisted_30)])])) : $options.currentQuestion.type === '判断题' ? (_openBlock(), _createElementBlock(\"div\", _hoisted_31, [_createElementVNode(\"label\", _hoisted_32, [_createElementVNode(\"input\", {\n    type: \"radio\",\n    name: `question-${$options.currentQuestion.id}`,\n    class: \"mr-2\",\n    value: \"正确\",\n    onChange: _cache[2] || (_cache[2] = $event => $options.selectOption($options.currentQuestion.id, '正确')),\n    checked: $options.isOptionSelected($options.currentQuestion.id, '正确')\n  }, null, 40 /* PROPS, NEED_HYDRATION */, _hoisted_33), _createTextVNode(\" 正确 \")]), _createElementVNode(\"label\", _hoisted_34, [_createElementVNode(\"input\", {\n    type: \"radio\",\n    name: `question-${$options.currentQuestion.id}`,\n    class: \"mr-2\",\n    value: \"错误\",\n    onChange: _cache[3] || (_cache[3] = $event => $options.selectOption($options.currentQuestion.id, '错误')),\n    checked: $options.isOptionSelected($options.currentQuestion.id, '错误')\n  }, null, 40 /* PROPS, NEED_HYDRATION */, _hoisted_35), _createTextVNode(\" 错误 \")])])) : $options.currentQuestion.type === '问答题' ? (_openBlock(), _createElementBlock(\"div\", _hoisted_36, [_createElementVNode(\"label\", _hoisted_37, [_createElementVNode(\"textarea\", {\n    class: \"w-full p-2 border border-zinc-300 rounded\",\n    style: {\n      \"width\": \"400px\"\n    },\n    rows: \"4\",\n    onInput: _cache[4] || (_cache[4] = $event => $options.updateAnswer($options.currentQuestion.id, $event.target.value)),\n    value: _ctx.getExamAnswer($options.currentQuestion.id)\n  }, null, 40 /* PROPS, NEED_HYDRATION */, _hoisted_38)])])) : _createCommentVNode(\"v-if\", true)])]), _createElementVNode(\"aside\", _hoisted_39, [_hoisted_40, _createElementVNode(\"div\", _hoisted_41, [_hoisted_42, _createElementVNode(\"div\", _hoisted_43, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($options.singleChoiceIndexes, index => {\n    return _openBlock(), _createBlock(_component_el_button, {\n      style: {\n        \"width\": \"50px\"\n      },\n      key: index,\n      onClick: $event => $options.goToQuestion(index),\n      class: _normalizeClass({\n        'bg-green-300': $data.questionStatus[_ctx.examQuestions[index].id],\n        // 已作答\n        'bg-zinc-300': !$data.questionStatus[_ctx.examQuestions[index].id] // 未作答\n      })\n    }, {\n      default: _withCtx(() => [_createTextVNode(_toDisplayString(index + 1), 1 /* TEXT */)]),\n      _: 2 /* DYNAMIC */\n    }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"onClick\", \"class\"]);\n  }), 128 /* KEYED_FRAGMENT */))])]), _createElementVNode(\"div\", null, [_hoisted_44, _createElementVNode(\"div\", _hoisted_45, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($options.trueFalseIndexes, index => {\n    return _openBlock(), _createBlock(_component_el_button, {\n      style: {\n        \"width\": \"50px\"\n      },\n      key: index,\n      onClick: $event => $options.goToQuestion(index),\n      class: _normalizeClass({\n        'bg-green-300': $data.questionStatus[_ctx.examQuestions[index].id],\n        // 已作答\n        'bg-zinc-300': !$data.questionStatus[_ctx.examQuestions[index].id] // 未作答\n      })\n    }, {\n      default: _withCtx(() => [_createTextVNode(_toDisplayString(index + 1), 1 /* TEXT */)]),\n      _: 2 /* DYNAMIC */\n    }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"onClick\", \"class\"]);\n  }), 128 /* KEYED_FRAGMENT */))])]), _createElementVNode(\"div\", null, [_hoisted_46, _createElementVNode(\"div\", _hoisted_47, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($options.fillInBlankIndexes, index => {\n    return _openBlock(), _createBlock(_component_el_button, {\n      style: {\n        \"width\": \"50px\"\n      },\n      key: index,\n      onClick: $event => $options.goToQuestion(index),\n      class: _normalizeClass({\n        'bg-green-300': $data.questionStatus[_ctx.examQuestions[index].id],\n        // 已作答\n        'bg-zinc-300': !$data.questionStatus[_ctx.examQuestions[index].id] // 未作答\n      })\n    }, {\n      default: _withCtx(() => [_createTextVNode(_toDisplayString(index + 1), 1 /* TEXT */)]),\n      _: 2 /* DYNAMIC */\n    }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"onClick\", \"class\"]);\n  }), 128 /* KEYED_FRAGMENT */))])]), _createElementVNode(\"div\", _hoisted_48, [_hoisted_49, _createElementVNode(\"div\", _hoisted_50, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($options.essayIndexes, index => {\n    return _openBlock(), _createBlock(_component_el_button, {\n      style: {\n        \"width\": \"50px\"\n      },\n      key: index,\n      onClick: $event => $options.goToQuestion(index),\n      class: _normalizeClass({\n        'bg-green-300': $data.questionStatus[_ctx.examQuestions[index].id],\n        // 已作答\n        'bg-zinc-300': !$data.questionStatus[_ctx.examQuestions[index].id] // 未作答\n      })\n    }, {\n      default: _withCtx(() => [_createTextVNode(_toDisplayString(index + 1), 1 /* TEXT */)]),\n      _: 2 /* DYNAMIC */\n    }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"onClick\", \"class\"]);\n  }), 128 /* KEYED_FRAGMENT */))])])])])])) : _createCommentVNode(\"v-if\", true);\n}","map":{"version":3,"names":["key","class","_createElementVNode","_createStaticVNode","_ctx","user","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","onClick","_cache","args","$options","submit","_hoisted_4","_hoisted_5","_hoisted_6","src","require","alt","_hoisted_7","_hoisted_8","_hoisted_9","_toDisplayString","username","_hoisted_10","$data","_user","university","_hoisted_11","id","_hoisted_12","_hoisted_13","_createTextVNode","_hoisted_14","answeredCount","_hoisted_15","totalCount","_hoisted_16","_createCommentVNode","showCountdown","_hoisted_17","_createVNode","_component_el_countdown","title","value","value10","onFinish","_hoisted_18","examInfo","startTime","_hoisted_19","endTime","_hoisted_20","_hoisted_21","_component_el_button","size","previousQuestion","disabled","currentQuestionIndex","default","_withCtx","_","nextQuestion","examQuestions","length","_hoisted_22","_hoisted_23","questionTypeAndScore","currentQuestion","type","_hoisted_24","cleanedDescription","description","_hoisted_25","_Fragment","_renderList","extractedOptions","option","index","_hoisted_26","name","onChange","$event","selectOption","checked","isOptionSelected","_hoisted_27","_hoisted_28","_hoisted_29","onInput","updateAnswer","target","getExamAnswer","_hoisted_30","_hoisted_31","_hoisted_32","_hoisted_33","_hoisted_34","_hoisted_35","_hoisted_36","_hoisted_37","style","rows","_hoisted_38","_hoisted_39","_hoisted_40","_hoisted_41","_hoisted_42","_hoisted_43","singleChoiceIndexes","_createBlock","goToQuestion","_normalizeClass","questionStatus","_hoisted_44","_hoisted_45","trueFalseIndexes","_hoisted_46","_hoisted_47","fillInBlankIndexes","_hoisted_48","_hoisted_49","_hoisted_50","essayIndexes"],"sources":["C:\\Users\\86139\\Desktop\\SEProject-front\\src\\views\\OnlineExamView.vue"],"sourcesContent":["<template>\n  <div  v-if=\"user\" class=\"min-h-screen flex flex-col bg-zinc-100 dark:bg-zinc-900\">\n    <header class=\"bg-zinc-800 text-white p-4 flex justify-between items-center custom-header\">\n      <h1 class=\"text-lg\">考试</h1>\n      <button @click=\"submit\" class=\"bg-teal-500 text-white px-4 py-2 rounded\">提交试卷</button>\n    </header>\n    <div class=\"flex flex-1\">\n      <aside class=\"w-1 bg-white dark:bg-zinc-800 p-4\">\n        <div class=\"flex flex-col items-center mb-4\">\n          <img :src=\"require('../assets/img/4.jpg')\" alt=\"Background Image\" class=\"rounded-full mb-2 background-image\">  \n          <div class=\"text-center\">\n            <p class=\"text-lg font-bold\">{{ this.user.username }}</p>\n            <p class=\"text-sm text-zinc-500\">{{ _user.university }}</p>\n            <p class=\"text-sm text-blue-500\">{{ this.user.id }}</p>\n          </div>\n        </div>\n        <div class=\"bg-zinc-100 dark:bg-zinc-700 p-4 rounded mb-4\">\n          <p class=\"text-center text-zinc-500\">\n            已答: <span class=\"text-black dark:text-white\">{{ answeredCount }}</span> 题数:\n            <span class=\"text-black dark:text-white\">{{ totalCount }}</span>\n          </p>\n        </div>\n        <div class=\"bg-zinc-100 dark:bg-zinc-700 p-4 rounded mb-4\">\n          <!-- <p class=\"text-center text-xl font-bold\">{{ timeRemaining }}</p> -->\n          <div v-if=\"showCountdown\">\n  <el-countdown title=\"剩余时间\" :value=this.value10 @finish=\"submit\" />\n</div>\n\n          <p class=\"text-sm text-zinc-500\">开始时间: {{ this.examInfo.startTime }}</p>\n          <p class=\"text-sm text-zinc-500\">结束时间: {{ this.examInfo.endTime }}</p>\n        </div>\n      </aside>\n\n      <main class=\"flex-1 bg-white dark:bg-zinc-800 p-4\">\n        <div class=\"flex justify-between items-center mb-4\">\n          <el-button size=\"large\" @click=\"previousQuestion\" :disabled=\"currentQuestionIndex === 0\" class=\"bg-zinc-200 dark:bg-zinc-700 text-zinc-700 dark:text-zinc-300 px-4 py-2 rounded\">\n            上一题\n          </el-button>\n          <el-button size=\"large\" @click=\"nextQuestion\" :disabled=\"currentQuestionIndex === examQuestions.length - 1\" class=\"bg-teal-500 text-white px-4 py-2 rounded\">\n            下一题\n          </el-button>\n        </div>\n        <div class=\"mb-4\">\n          <p class=\"text-lg2 text-gray-500\">{{ questionTypeAndScore(currentQuestion.type) }}</p>\n          <p class=\"text-lg\">{{ cleanedDescription(currentQuestion.description) }}</p>\n          <div v-if=\"currentQuestion.type === '选择题'\" class=\"mt-4\">\n            <div v-for=\"(option, index) in extractedOptions(currentQuestion.description)\" :key=\"index\">\n              <label class=\"block mb-2\">\n                <input type=\"radio\" :name=\"`question-${currentQuestion.id}`\" class=\"mr-2\" :value=\"option\" @change=\"selectOption(currentQuestion.id, option)\" :checked=\"isOptionSelected(currentQuestion.id, option)\" /> {{ option }}\n              </label>\n            </div>\n          </div>\n          <div v-else-if=\"currentQuestion.type === '填空题'\" class=\"mt-4\">\n            <label class=\"block mb-2\">\n              <input type=\"text\" class=\"w-full p-2 border border-zinc-300 rounded\" @input=\"updateAnswer(currentQuestion.id, $event.target.value)\" :value=\"getExamAnswer(currentQuestion.id)\" />\n            </label>\n          </div>\n          <div v-else-if=\"currentQuestion.type === '判断题'\" class=\"mt-4\">\n            <label class=\"block mb-2\">\n              <input type=\"radio\" :name=\"`question-${currentQuestion.id}`\" class=\"mr-2\" value=\"正确\" @change=\"selectOption(currentQuestion.id, '正确')\" :checked=\"isOptionSelected(currentQuestion.id, '正确')\" /> 正确\n            </label>\n            <label class=\"block mb-2\">\n              <input type=\"radio\" :name=\"`question-${currentQuestion.id}`\" class=\"mr-2\" value=\"错误\" @change=\"selectOption(currentQuestion.id, '错误')\" :checked=\"isOptionSelected(currentQuestion.id, '错误')\" /> 错误\n            </label>\n          </div>\n          <div v-else-if=\"currentQuestion.type === '问答题'\" class=\"mt-4\">\n            <label class=\"block mb-2\">\n              <textarea class=\"w-full p-2 border border-zinc-300 rounded\" style=\"width: 400px;\" rows=\"4\" @input=\"updateAnswer(currentQuestion.id, $event.target.value) \" :value=\"getExamAnswer(currentQuestion.id)\"></textarea>\n            </label>\n          </div>\n        </div>\n      </main>\n\n      <aside class=\"w-1 bg-white dark:bg-zinc-800 p-4\">\n        <div class=\"mb-4\">\n          <p class=\"text-center text-zinc-500\">作答状态</p>\n          <div class=\"flex justify-around mt-2\">\n            <span class=\"bg-zinc-300 dark:bg-zinc-600 w-4 h-4 rounded-full inline-block\" style=\"margin-left:70px\"></span>\n            未作答\n\n            <span class=\"bg-green-300 dark:bg-green-600 w-4 h-4 rounded-full inline-block \" style=\"margin-left:20px\"></span>\n            已作答\n          </div>\n        </div>\n  <div class=\"mb-4\">\n    <p class=\"text-center text-zinc-500\">单选题</p>\n    <div class=\"grid grid-cols-5 gap-2\">\n            <el-button style=\"width:50px\"\n        v-for=\"index in singleChoiceIndexes\"\n        :key=\"index\"\n        @click=\"goToQuestion(index)\"\n        :class=\"{\n          'bg-green-300': questionStatus[examQuestions[index].id],  // 已作答\n          'bg-zinc-300': !questionStatus[examQuestions[index].id]   // 未作答\n        }\"\n      >\n        {{ index + 1 }}\n      </el-button>\n    </div>\n  </div>\n\n  <div >\n    <p class=\"text-center text-zinc-500\">判断题</p>\n    <div class=\"grid grid-cols-5 gap-2\">\n            <el-button style=\"width:50px\"\n        v-for=\"index in trueFalseIndexes\"\n        :key=\"index\"\n        @click=\"goToQuestion(index)\"\n        :class=\"{\n          'bg-green-300': questionStatus[examQuestions[index].id],  // 已作答\n          'bg-zinc-300': !questionStatus[examQuestions[index].id]   // 未作答\n        }\"\n      >\n\n        {{ index + 1 }}\n      </el-button>\n    </div>\n  </div>\n  <div >\n    <p class=\"text-center text-zinc-500\">填空题</p>\n    <div class=\"grid grid-cols-5 gap-2\" >\n            <el-button style=\"width:50px\"\n        v-for=\"index in fillInBlankIndexes\"\n        :key=\"index\"\n        @click=\"goToQuestion(index)\"\n        :class=\"{\n          'bg-green-300': questionStatus[examQuestions[index].id],  // 已作答\n          'bg-zinc-300': !questionStatus[examQuestions[index].id]   // 未作答\n        }\"\n      >\n\n        {{ index + 1 }}\n      </el-button>\n    </div>\n  </div>\n  <div class=\"mb-4\">\n    <p class=\"text-center text-zinc-500\">问答题</p>\n    <div class=\"grid grid-cols-5 gap-2\">\n            <el-button style=\"width:50px\"\n        v-for=\"index in essayIndexes\"\n        :key=\"index\"\n        @click=\"goToQuestion(index)\"\n        :class=\"{\n          'bg-green-300': questionStatus[examQuestions[index].id],  // 已作答\n          'bg-zinc-300': !questionStatus[examQuestions[index].id]   // 未作答\n        }\"\n      >\n        {{ index + 1 }}\n      </el-button>\n    </div>\n  </div>\n      </aside>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { mapState, mapMutations, mapGetters, mapActions } from 'vuex';\nimport { ElMessage } from 'element-plus';\nimport { ref } from 'vue';\n\n// const value = ref(Date.now() + 100 * 60 * 60 * 7)\n// const value10 = ref(Date.now() + 1000 * 60 * 60 * 7); // 这里设置倒计时为7小时\n// const value10 = 100000;\n\nconst loading = ref(false);\nconst svg = `\n<path class=\"path\" d=\"\n  M 30 15\n  L 28 17\n  M 25.61 25.61\n  A 15 15, 0, 0, 1, 15 30\n  A 15 15, 0, 1, 1, 27.99 7.5\n  L 15 15\n\" style=\"stroke-width: 4px; fill: rgba(0, 0, 0, 0)\"/>\n`;\n\nexport default {\n  data() {\n    return {\n      currentQuestionIndex: 0,\n      _user: {\n        avatar: 'https://placehold.co/100x100',\n        name: 'baymax',\n        university: '哈尔滨工业大学',\n        id: '270123456'\n      },\n      questionStatus: {},\n      totalCount: 0,\n      // timeRemaining: '12641:36:25',\n      startTime: '2022-12-06 09:59:00',\n      endTime: '2022-12-09 09:59:00',\n      // value10: null,\n      showCountdown: false // 新添加的布尔值\n      // value10: ref(Date.now() + 1000 * 60 * 1),\n    };\n  },\n  computed: {\n    ...mapState(['examQuestions', 'examAnswers', 'examInfo', 'user', 'totalCount2']),\n    ...mapGetters(['getExamAnswer', 'getAnsweredCount']),\n    // value10(){\n    //   // this.value10.value = Date.now() + 1000 * 60 * this.examInfo.durationTime\n    //   console.log(\"eeeeeee2:\", ref(Date.now() + 1000 * 60 * this.examInfo.durationTime))\n    //   return ref(Date.now() + 1000 * 60 * this.examInfo.durationTime);\n      \n    // },\n    totalCount(){\n      return this.totalCount2;\n    },\n      value10() {\n    return Date.now() + 1000 * 60 * this.examInfo.durationTime;\n  },\n    currentQuestion() {\n      return this.examQuestions[this.currentQuestionIndex];\n    },\n    answeredCount() {\n      return this.getAnsweredCount;\n    },\n      singleChoiceIndexes() {\n    return this.examQuestions\n      .map((question, index) => ({ question, index }))\n      .filter(item => item.question.type === '选择题')\n      .map(item => item.index);\n  },\n  fillInBlankIndexes() {\n    return this.examQuestions\n      .map((question, index) => ({ question, index }))\n      .filter(item => item.question.type === '填空题')\n      .map(item => item.index);\n  },\n  trueFalseIndexes() {\n    return this.examQuestions\n      .map((question, index) => ({ question, index }))\n      .filter(item => item.question.type === '判断题')\n      .map(item => item.index);\n  },\n  essayIndexes() {\n    return this.examQuestions\n      .map((question, index) => ({ question, index }))\n      .filter(item => item.question.type === '问答题')\n      .map(item => item.index);\n  },\n    singleChoiceQuestions() {\n      return this.examQuestions.filter(q => q.type === '选择题');\n    },\n    fillInBlankQuestions() {\n      return this.examQuestions.filter(q => q.type === '填空题');\n    },\n    trueFalseQuestions() {\n      return this.examQuestions.filter(q => q.type === '判断题');\n    },\n    essayQuestions() {\n      return this.examQuestions.filter(q => q.type === '问答题');\n    }\n  },\n  methods: {\n    ...mapMutations(['setExamAnswer', 'submitExamAnswer']),\n    ...mapActions(['submitExamAnswer', 'addPaper', 'addQuestionToPaper', 'removeFromPaper', 'fetchPaperQuestion', 'updatePaperQuestions', 'deletePaper', 'fetchPapersPages']),\n\n    previousQuestion() {\n      if (this.currentQuestionIndex > 0) {\n        this.currentQuestionIndex--;\n      }\n    },\n    async submit() {\n      const loadingInstance = this.$loading({\n        lock: true,\n        text: 'Loading...',\n        spinner: svg, // 使用自定义 SVG 图案\n        background: 'rgba(0, 0, 0, 0.7)',\n        customClass: 'custom-loading-svg', // 自定义样式类名\n      });\n\n      await this.submitExamAnswer(this.examAnswers);\n\n      setTimeout(() => {\n        loadingInstance.close();\n        this.$router.push('/test');\n      }, 700);\n    },\n    nextQuestion() {\n      if (this.currentQuestionIndex < this.examQuestions.length - 1) {\n        this.currentQuestionIndex++;\n      }\n    },\n    selectOption(questionId, option) {\n      this.setExamAnswer({ questionId, answer: option });\n      this.updateQuestionStatus(questionId);  // 调用更新状态的方法\n    },\n    updateAnswer(questionId, answer) {\n      this.setExamAnswer({ questionId, answer });\n      this.updateQuestionStatus(questionId);  // 调用更新状态的方法\n    },\n    updateQuestionStatus(questionId) {\n      this.questionStatus[questionId] = !!this.getExamAnswer(questionId);\n    },\n    isOptionSelected(questionId, option) {\n      return this.getExamAnswer(questionId) === option;\n    },\n    cleanedDescription(description) {\n      const regex = /A\\..*?\\nB\\..*?\\nC\\..*?\\nD\\..*/s;\n      return description.replace(regex, '');\n    },\n    questionTypeAndScore(type) {\n      var score;\n      if (type==='选择题'){\n        score = 3\n      }else if(type==='判断题'){\n        score = 3\n      }else if(type==='填空题'){\n        score = 5\n      }else if(type==='问答题'){\n        score = 10\n      }\n      return `${type}:${score}分`;\n    },\n    extractedOptions(description) {\n      const options = description.match(/A\\..*?\\nB\\..*?\\nC\\..*?\\nD\\..*/s);\n      if (options) {\n        return options[0].split(/(?=[A-D]\\.)/).map(opt => opt.trim());\n      }\n      return [];\n    },\n    previewExam() {\n      ElMessage({\n        message: '即将打开整卷预览功能',\n        type: 'info'\n      });\n    },\n    goToQuestion(index) {\n      this.currentQuestionIndex = index;\n    }\n  },\n  mounted() {\n      console.log(\"eeeeeee:\", this.user)\n      \n      this.value10 = Date.now() + 1000 * 60 * this.examInfo.durationTime;\n      this.showCountdown = true;\n  },\n  created() {\n    console.log(this.user);\n    if (!this.user) {\n      this.alertMessage = '未登录';\n      ElMessage(\"未登录\")\n      setTimeout(() => {\n        this.$router.push('/');\n      }, 2000); // 等待2秒后跳转\n    }\n  }\n};\n</script>\n\n\n\n\n<style scoped>\n.min-h-screen {\n  min-height: 100vh;\n}\n\n.bg-zinc-100 {\n  background-color: #f5f5f5;\n}\n\n.dark .bg-zinc-900 {\n  background-color: #1a1a1a;\n}\n\n.bg-zinc-800 {\n  background-color: #2d2d2d;\n}\n\n.text-white {\n  color: #fff;\n}\n\n.p-4 {\n  padding: 1rem;\n}\n\n.flex {\n  display: flex;\n}\n\n.justify-between {\n  justify-content: space-between;\n}\n\n.items-center {\n  align-items: center;\n}\n\n.text-lg {\n  font-size: 1.125rem;\n}\n.text-lg2 {\n  font-size: 0.925rem;\n}\n.text-gray-500 {\n  color: #737373;\n}\n.bg-teal-500 {\n  background-color: #38b2ac;\n}\n\n.px-4 {\n  padding-left: 1rem;\n  padding-right: 1rem;\n}\n\n.py-2 {\n  padding-top: 0.5rem;\n  padding-bottom: 0.5rem;\n}\n\n.rounded {\n  border-radius: 0.25rem;\n}\n\n.w-1 {\n  width: 20%;\n}\n\n.bg-white {\n  background-color: #fff;\n}\n\n.dark .bg-zinc-800 {\n  background-color: #2d2d2d;\n}\n\n.flex-col {\n  flex-direction: column;\n}\n\n.mb-4 {\n  margin-bottom: 1rem;\n}\n\n.rounded-full {\n  border-radius: 9999px;\n}\n\n.text-center {\n  text-align: center;\n}\n\n.font-bold {\n  font-weight: 700;\n}\n\n.text-sm {\n  font-size: 0.875rem;\n}\n\n.text-zinc-500 {\n  color: #737373;\n}\n\n.text-blue-500 {\n  color: #4299e1;\n}\n\n.bg-zinc-100 {\n  background-color: #f5f5f5;\n}\n\n.dark .bg-zinc-700 {\n  background-color: #3d3d3d;\n}\n\n.text-black {\n  color: #000;\n}\n\n.dark .text-white {\n  color: #fff;\n}\n\n.text-xl {\n  font-size: 1.25rem;\n}\n\n.grid {\n  display: grid;\n  \n}\n\n.grid-cols-4 {\n  grid-template-columns: repeat(4, 1fr);\n}\n\n.gap-2 {\n  gap: 0.5rem;\n}\n\n.bg-teal-500 {\n  background-color: #38b2ac;\n}\n\n.dark .text-zinc-300 {\n  color: #d1d1d1;\n}\n\n.text-zinc-700 {\n  color: #525252;\n}\n\n.text-zinc-300 {\n  color: #d1d1d1;\n}\n\n.dark .bg-zinc-700 {\n  background-color: #3d3d3d;\n}\n.background-image {\n  width: 100px; /* 图片的宽度 */\n  height: 100px; /* 图片的高度 */\n  object-fit: cover; /* 保持图片的长宽比，裁剪超出部分 */\n}\n.block {\n  display: block;\n}\n\n.mt-4 {\n  margin-top: 1rem;\n}\n\n.mr-2 {\n  margin-right: 0.5rem;\n}\n\n.flex-1 {\n  flex: 1;\n}\nbutton{\n  border: none;\n}\n.w-4 {\n  width: 1rem;\n}\n\n.h-4 {\n  height: 1rem;\n}\n\n.rounded-full {\n  border-radius: 9999px;\n}\n\n.inline-block {\n  display: inline-block;\n}\n\n.bg-zinc-300 {\n  background-color: #d1d1d1;\n}\n\n.dark .bg-zinc-600 {\n  background-color: #525252;\n}\n\n.bg-orange-300 {\n  background-color: #f6ad55;\n}\n\n.dark .bg-orange-600 {\n  background-color: #dd6b20;\n}\n\n.bg-green-300 {\n  background-color: #9ae6b4;\n}\n\n.dark .bg-green-600 {\n  background-color: #48bb78;\n}\n\n.grid-cols-5 {\n  grid-template-columns: repeat(4, 1fr);\n  /* grid-template-columns: minmax(0, 1fr) minmax(0, 1fr) minmax(0, 1fr); */\n}\n\n.border {\n  border-width: 1px;\n}\n\n.border-zinc-300 {\n  border-color: #d1d1d1;\n}\n\n.custom-header {\n  height: 25px;\n  background-color: #606266;\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}