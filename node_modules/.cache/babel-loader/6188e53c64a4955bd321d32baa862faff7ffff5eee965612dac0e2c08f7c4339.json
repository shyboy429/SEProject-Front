{"ast":null,"code":"import { mapActions, mapState } from 'vuex';\nexport default {\n  name: 'SearchQuestion',\n  data() {\n    return {\n      searchKeyword: '',\n      filterQuestionType: '',\n      filterDifficulty: '',\n      currentPage: 1,\n      pageSize: 5\n      // tableData: [\n      //   { \n      //     question: '这是一个假问题?',\n      //     questionType: '选择题',\n      //     tag: '物理',\n      //     difficulty: '中等',\n      //     analysis: '这是一个问题的解析',\n      //     createdBy: \"小张\"\n      //   }\n      // ]\n    };\n  },\n  computed: {\n    ...mapState(['questions']),\n    // tableData() {\n    //   return this.questions.map(question => ({\n    //     question: question.question,\n    //     questionType: question.questionType,\n    //     tag: question.tag,\n    //     difficulty: question.difficulty,\n    //     analysis: question.analysis,\n    //     createdBy: question.createdBy,\n    //   }));\n    // },\n    //filteredQuestions() {\n    //  return this.questions.filter(question => {\n    //    const matchesKeyword = question.question.includes(this.searchKeyword);\n    //    const matchesType = this.filterQuestionType ? question.questionType === this.filterQuestionType : true;\n    //    const matchesDifficulty = this.filterDifficulty ? question.difficulty === this.filterDifficulty : true;\n    //    return matchesKeyword && matchesType && matchesDifficulty;\n    //  });\n    //},\n    totalPages() {\n      return Math.ceil(this.filteredQuestions.length / this.pageSize);\n    },\n    paginatedQuestions() {\n      const start = (this.currentPage - 1) * this.pageSize;\n      return this.filteredQuestions.slice(start, start + this.pageSize);\n    }\n  },\n  methods: {\n    ...mapActions(['fetchQuestions']),\n    searchQuestions() {\n      this.currentPage = 1;\n    },\n    prevPage() {\n      if (this.currentPage > 1) {\n        this.currentPage--;\n      }\n    },\n    nextPage() {\n      if (this.currentPage < this.totalPages) {\n        this.currentPage++;\n      }\n    }\n  }\n  //   mounted() {\n  //     this.fetchQuestions();\n  //   }\n};","map":{"version":3,"names":["mapActions","mapState","name","data","searchKeyword","filterQuestionType","filterDifficulty","currentPage","pageSize","computed","totalPages","Math","ceil","filteredQuestions","length","paginatedQuestions","start","slice","methods","searchQuestions","prevPage","nextPage"],"sources":["C:\\Users\\86139\\Desktop\\demo_vue\\src\\components\\SearchQuestion.vue"],"sourcesContent":["<template>\r\n  <div class=\"search-question\">\r\n    <h3>查询试题</h3>\r\n    <div class=\"search-filters\">\r\n      <div class=\"form-row\">\r\n        <div class=\"form-group\" style=\"display: flex; align-items: center;\">\r\n          <label for=\"tag\" style=\"margin-left: 30px; align-self: flex-start;\">关键字:</label>\r\n          <input type=\"text\" id=\"tag\" v-model=\"tag\" placeholder=\"请输入关键字\" style=\"margin-left: 20px;width: 800px;\" />\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <label for=\"question-type\">题目类型:</label>\r\n          <select id=\"question-type\" v-model=\"questionType\">\r\n            <option value=\"选择题\">选择题</option>\r\n            <option value=\"判断题\">判断题</option>\r\n            <option value=\"填空题\">填空题</option>\r\n            <option value=\"问答题\">问答题</option>\r\n          </select>\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <label for=\"difficulty\">难度等级:</label>\r\n          <select id=\"difficulty\" v-model=\"difficulty\">\r\n            <option value=\"简单\">简单</option>\r\n            <option value=\"中等\">中等</option>\r\n            <option value=\"困难\">困难</option>\r\n          </select>\r\n        </div>\r\n        <button @click=\"searchQuestions\" class=\"form-group\" style=\"padding: 20px 0px 20px 35px; font-size: 18px;\">查询题目</button>\r\n\r\n      </div>\r\n      \r\n    </div>\r\n                    <!-- 表格数据绑定和默认宽度 -->\r\n              \r\n        <el-table :data=\"tableData\" style=\"width:100%; margin-left: 6%;\">\r\n        <!-- 每一个列，prop为主键，label为文案 -->\r\n        <!-- 索引 -->\r\n        <el-table-column type=\"index\" width=\"50\"></el-table-column>\r\n        <el-table-column prop=\"question\" label=\"问题\" width=\"300\"></el-table-column>\r\n        <el-table-column prop=\"questionType\" label=\"题型\" width=\"180\"></el-table-column>\r\n        <el-table-column prop=\"tag\" label=\"标签\" width=\"180\"></el-table-column>\r\n        <el-table-column prop=\"difficulty\" label=\"难度\" width=\"120\"></el-table-column>\r\n        <el-table-column prop=\"createdBy\" label=\"创建人\" width=\"120\" style=\"margin-left: 50%;\"></el-table-column>\r\n        <!-- <el-table-column prop=\"answer\" label=\"答案\" width=\"180\"></el-table-column>\r\n        <el-table-column prop=\"analysis\" label=\"解析\" width=\"300\"></el-table-column> -->\r\n        <el-table-column label=\"操作\" width=\"220\"  >\r\n            <template #default=\"scope\">\r\n              <el-button size=\"small\" @click=\"handleEdit(scope.$index,scope.row )\">编辑</el-button>\r\n              <el-button size=\"small\" type=\"danger\" @click=\"handleDelete(scope.$index,scope.row)\" :disabled=\"createdBy !== totalPages\">删除</el-button>\r\n            </template>\r\n          </el-table-column>\r\n        </el-table>\r\n    <div class=\"questions-list\">\r\n      \r\n      <!-- <ul>\r\n        <li v-for=\"question in paginatedQuestions\" :key=\"question.id\">\r\n          {{ question.question }}\r\n        </li>\r\n      </ul> -->\r\n      <div class=\"pagination\">\r\n        <button @click=\"prevPage\" :disabled=\"currentPage === 1\" style=\"padding: 5px 10px;\">上一页</button>\r\n        <button @click=\"nextPage\" :disabled=\"currentPage === totalPages\" style=\"padding: 5px 10px;\">下一页</button>\r\n      </div>\r\n    </div>\r\n\r\n\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { mapActions, mapState } from 'vuex';\r\n\r\nexport default {\r\n  name: 'SearchQuestion',\r\n  data() {\r\n    return {\r\n      searchKeyword: '',\r\n      filterQuestionType: '',\r\n      filterDifficulty: '',\r\n      currentPage: 1,\r\n      pageSize: 5,\r\n      // tableData: [\r\n      //   { \r\n      //     question: '这是一个假问题?',\r\n      //     questionType: '选择题',\r\n      //     tag: '物理',\r\n      //     difficulty: '中等',\r\n      //     analysis: '这是一个问题的解析',\r\n      //     createdBy: \"小张\"\r\n      //   }\r\n      // ]\r\n    };\r\n  },\r\n  computed: {\r\n    ...mapState(['questions']),\r\n    // tableData() {\r\n    //   return this.questions.map(question => ({\r\n    //     question: question.question,\r\n    //     questionType: question.questionType,\r\n    //     tag: question.tag,\r\n    //     difficulty: question.difficulty,\r\n    //     analysis: question.analysis,\r\n    //     createdBy: question.createdBy,\r\n    //   }));\r\n    // },\r\n    //filteredQuestions() {\r\n    //  return this.questions.filter(question => {\r\n    //    const matchesKeyword = question.question.includes(this.searchKeyword);\r\n    //    const matchesType = this.filterQuestionType ? question.questionType === this.filterQuestionType : true;\r\n    //    const matchesDifficulty = this.filterDifficulty ? question.difficulty === this.filterDifficulty : true;\r\n    //    return matchesKeyword && matchesType && matchesDifficulty;\r\n    //  });\r\n    //},\r\n    totalPages() {\r\n      return Math.ceil(this.filteredQuestions.length / this.pageSize);\r\n    },\r\n    paginatedQuestions() {\r\n      const start = (this.currentPage - 1) * this.pageSize;\r\n      return this.filteredQuestions.slice(start, start + this.pageSize);\r\n    }\r\n  },\r\n  methods: {\r\n    ...mapActions(['fetchQuestions']),\r\n    searchQuestions() {\r\n      this.currentPage = 1;\r\n\r\n    },\r\n    prevPage() {\r\n      if (this.currentPage > 1) {\r\n        this.currentPage--;\r\n      }\r\n    },\r\n    nextPage() {\r\n      if (this.currentPage < this.totalPages) {\r\n        this.currentPage++;\r\n      }\r\n    }\r\n  },\r\n//   mounted() {\r\n//     this.fetchQuestions();\r\n//   }\r\n};\r\n</script>\r\n\r\n<style>\r\n.search-question {\r\n  flex: 1;\r\n  background-color: #fff;\r\n  border-radius: 8px;\r\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\r\n  overflow: auto;\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n\r\nh2 {\r\n  text-align: center;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.tabs {\r\n  display: flex;\r\n  justify-content: center;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.tabs button {\r\n  background-color: #409eff;\r\n  color: #fff;\r\n  border: none;\r\n  padding: 10px 20px;\r\n  cursor: pointer;\r\n  margin: 0 5px;\r\n}\r\n\r\n.tabs button.active {\r\n  background-color: #66b1ff;\r\n}\r\n\r\n.form-container, .search-container {\r\n  background: #fff;\r\n  padding: 20px;\r\n  border-radius: 8px;\r\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\nh3 {\r\n  text-align: center;\r\n  margin-bottom: 20px;\r\n}\r\n\r\nform {\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n\r\n.form-row {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  margin-bottom: 15px;\r\n  margin-left: 1px;\r\n}\r\n\r\n.form-group {\r\n  flex: 1;\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin: 0 15px;\r\n}\r\n\r\n.form-group:first-child {\r\n  margin-left: 0;\r\n}\r\n\r\n.form-group:last-child {\r\n  margin-right: 0;\r\n}\r\n\r\nlabel {\r\n  margin-bottom: 5px;\r\n  font-weight: bold;\r\n}\r\n\r\ninput, select, textarea {\r\n  padding: 10px;\r\n  border: 1px solid #dcdfe6;\r\n  border-radius: 4px;\r\n  font-size: 14px;\r\n  width: 100%;\r\n}\r\n\r\ntextarea {\r\n  resize: vertical;\r\n}\r\n\r\ntextarea#question, textarea#answer, textarea#analysis {\r\n  height: 100px;\r\n}\r\n\r\n.submit-button {\r\n  background-color: #409eff;\r\n  color: #fff;\r\n  padding: 10px 20px;\r\n  border: none;\r\n  border-radius: 4px;\r\n  font-size: 16px;\r\n  cursor: pointer;\r\n  align-self: center;\r\n  margin-top: 20px;\r\n}\r\n\r\n.submit-button:hover {\r\n  background-color: #66b1ff;\r\n}\r\n\r\n\r\n.pagination {\r\n  position: absolute;\r\n  bottom: 40px; /* 距离底部的距离 */\r\n  left: 57%; /* 水平居中 */\r\n  transform: translateX(-50%); /* 水平居中 */\r\n  display: flex;\r\n  justify-content: space-between;\r\n  width: 200px; /* 指定pagination的宽度 */\r\n}\r\n\r\n.pagination button {\r\n  background-color: #409eff;\r\n  color: #fff;\r\n  padding: 5px 10px;\r\n  border: none;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n  width: 80px; /* 指定按钮的宽度 */\r\n}\r\n\r\n.pagination button:disabled {\r\n  background-color: #a0cfff;\r\n}\r\n\r\n</style>\r\n"],"mappings":"AAqEA,SAASA,UAAU,EAAEC,QAAO,QAAS,MAAM;AAE3C,eAAe;EACbC,IAAI,EAAE,gBAAgB;EACtBC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,aAAa,EAAE,EAAE;MACjBC,kBAAkB,EAAE,EAAE;MACtBC,gBAAgB,EAAE,EAAE;MACpBC,WAAW,EAAE,CAAC;MACdC,QAAQ,EAAE;MACV;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;IACF,CAAC;EACH,CAAC;EACDC,QAAQ,EAAE;IACR,GAAGR,QAAQ,CAAC,CAAC,WAAW,CAAC,CAAC;IAC1B;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACAS,UAAUA,CAAA,EAAG;MACX,OAAOC,IAAI,CAACC,IAAI,CAAC,IAAI,CAACC,iBAAiB,CAACC,MAAK,GAAI,IAAI,CAACN,QAAQ,CAAC;IACjE,CAAC;IACDO,kBAAkBA,CAAA,EAAG;MACnB,MAAMC,KAAI,GAAI,CAAC,IAAI,CAACT,WAAU,GAAI,CAAC,IAAI,IAAI,CAACC,QAAQ;MACpD,OAAO,IAAI,CAACK,iBAAiB,CAACI,KAAK,CAACD,KAAK,EAAEA,KAAI,GAAI,IAAI,CAACR,QAAQ,CAAC;IACnE;EACF,CAAC;EACDU,OAAO,EAAE;IACP,GAAGlB,UAAU,CAAC,CAAC,gBAAgB,CAAC,CAAC;IACjCmB,eAAeA,CAAA,EAAG;MAChB,IAAI,CAACZ,WAAU,GAAI,CAAC;IAEtB,CAAC;IACDa,QAAQA,CAAA,EAAG;MACT,IAAI,IAAI,CAACb,WAAU,GAAI,CAAC,EAAE;QACxB,IAAI,CAACA,WAAW,EAAE;MACpB;IACF,CAAC;IACDc,QAAQA,CAAA,EAAG;MACT,IAAI,IAAI,CAACd,WAAU,GAAI,IAAI,CAACG,UAAU,EAAE;QACtC,IAAI,CAACH,WAAW,EAAE;MACpB;IACF;EACF;EACF;EACA;EACA;AACA,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}