{"ast":null,"code":"import { mapActions, mapState } from 'vuex';\nexport default {\n  name: 'SearchQuestion',\n  data() {\n    return {\n      searchKeyword: '',\n      filterQuestionType: '',\n      filterDifficulty: '',\n      currentPage: 1,\n      pageSize: 5\n    };\n  },\n  computed: {\n    ...mapState(['questions']),\n    filteredQuestions() {\n      return this.questions.filter(question => {\n        const matchesKeyword = question.question.includes(this.searchKeyword);\n        const matchesType = this.filterQuestionType ? question.questionType === this.filterQuestionType : true;\n        const matchesDifficulty = this.filterDifficulty ? question.difficulty === this.filterDifficulty : true;\n        return matchesKeyword && matchesType && matchesDifficulty;\n      });\n    },\n    totalPages() {\n      return Math.ceil(this.filteredQuestions.length / this.pageSize);\n    },\n    paginatedQuestions() {\n      const start = (this.currentPage - 1) * this.pageSize;\n      return this.filteredQuestions.slice(start, start + this.pageSize);\n    }\n  },\n  methods: {\n    ...mapActions(['fetchQuestions']),\n    searchQuestions() {\n      this.currentPage = 1;\n    },\n    prevPage() {\n      if (this.currentPage > 1) {\n        this.currentPage--;\n      }\n    },\n    nextPage() {\n      if (this.currentPage < this.totalPages) {\n        this.currentPage++;\n      }\n    }\n  },\n  mounted() {\n    this.fetchQuestions();\n  }\n};","map":{"version":3,"names":["mapActions","mapState","name","data","searchKeyword","filterQuestionType","filterDifficulty","currentPage","pageSize","computed","filteredQuestions","questions","filter","question","matchesKeyword","includes","matchesType","questionType","matchesDifficulty","difficulty","totalPages","Math","ceil","length","paginatedQuestions","start","slice","methods","searchQuestions","prevPage","nextPage","mounted","fetchQuestions"],"sources":["C:\\Users\\wu\\Desktop\\软工\\springboot_vue\\demo_vue\\src\\components\\ExamPaper.vue"],"sourcesContent":["<template>\r\n  <div class=\"search-question\">\r\n    <h3>查询试题</h3>\r\n    <div class=\"search-filters\">\r\n      <div class=\"form-row\">\r\n        <div class=\"form-group\" style=\"display: flex; align-items: center;\">\r\n          <label for=\"tag\" style=\"margin-left: 10px; align-self: flex-start;\">关键字:</label>\r\n          <input type=\"text\" id=\"tag\" v-model=\"tag\" placeholder=\"请输入关键字\" style=\"width: 800px;\" />\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <label for=\"question-type\">题目类型:</label>\r\n          <select id=\"question-type\" v-model=\"questionType\">\r\n            <option value=\"选择题\">选择题</option>\r\n            <option value=\"判断题\">判断题</option>\r\n            <option value=\"填空题\">填空题</option>\r\n            <option value=\"问答题\">问答题</option>\r\n          </select>\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <label for=\"difficulty\">难度等级:</label>\r\n          <select id=\"difficulty\" v-model=\"difficulty\">\r\n            <option value=\"简单\">简单</option>\r\n            <option value=\"中等\">中等</option>\r\n            <option value=\"困难\">困难</option>\r\n          </select>\r\n        </div>\r\n      </div>\r\n      <button @click=\"searchQuestions\" class=\"submit-button\" style=\"padding: 20px 0px;\">搜索</button>\r\n    </div>\r\n\r\n    <div class=\"questions-list\">\r\n      <ul>\r\n        <li v-for=\"question in paginatedQuestions\" :key=\"question.id\">\r\n          {{ question.question }}\r\n        </li>\r\n      </ul>\r\n      <div class=\"pagination\">\r\n        <button @click=\"prevPage\" :disabled=\"currentPage === 1\" style=\"padding: 5px 10px;\">上一页</button>\r\n        <button @click=\"nextPage\" :disabled=\"currentPage === totalPages\" style=\"padding: 5px 10px;\">下一页</button>\r\n      </div>\r\n    </div>\r\n\r\n\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { mapActions, mapState } from 'vuex';\r\n\r\nexport default {\r\n  name: 'SearchQuestion',\r\n  data() {\r\n    return {\r\n      searchKeyword: '',\r\n      filterQuestionType: '',\r\n      filterDifficulty: '',\r\n      currentPage: 1,\r\n      pageSize: 5\r\n    };\r\n  },\r\n  computed: {\r\n    ...mapState(['questions']),\r\n    filteredQuestions() {\r\n      return this.questions.filter(question => {\r\n        const matchesKeyword = question.question.includes(this.searchKeyword);\r\n        const matchesType = this.filterQuestionType ? question.questionType === this.filterQuestionType : true;\r\n        const matchesDifficulty = this.filterDifficulty ? question.difficulty === this.filterDifficulty : true;\r\n        return matchesKeyword && matchesType && matchesDifficulty;\r\n      });\r\n    },\r\n    totalPages() {\r\n      return Math.ceil(this.filteredQuestions.length / this.pageSize);\r\n    },\r\n    paginatedQuestions() {\r\n      const start = (this.currentPage - 1) * this.pageSize;\r\n      return this.filteredQuestions.slice(start, start + this.pageSize);\r\n    }\r\n  },\r\n  methods: {\r\n    ...mapActions(['fetchQuestions']),\r\n    searchQuestions() {\r\n      this.currentPage = 1;\r\n    },\r\n    prevPage() {\r\n      if (this.currentPage > 1) {\r\n        this.currentPage--;\r\n      }\r\n    },\r\n    nextPage() {\r\n      if (this.currentPage < this.totalPages) {\r\n        this.currentPage++;\r\n      }\r\n    }\r\n  },\r\n  mounted() {\r\n    this.fetchQuestions();\r\n  }\r\n};\r\n</script>\r\n\r\n<style>\r\n.search-question {\r\n  flex: 1;\r\n  background-color: #fff;\r\n  border-radius: 8px;\r\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\r\n  overflow: auto;\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n\r\nh2 {\r\n  text-align: center;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.tabs {\r\n  display: flex;\r\n  justify-content: center;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.tabs button {\r\n  background-color: #409eff;\r\n  color: #fff;\r\n  border: none;\r\n  padding: 10px 20px;\r\n  cursor: pointer;\r\n  margin: 0 5px;\r\n}\r\n\r\n.tabs button.active {\r\n  background-color: #66b1ff;\r\n}\r\n\r\n.form-container, .search-container {\r\n  background: #fff;\r\n  padding: 20px;\r\n  border-radius: 8px;\r\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\nh3 {\r\n  text-align: center;\r\n  margin-bottom: 20px;\r\n}\r\n\r\nform {\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n\r\n.form-row {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  margin-bottom: 15px;\r\n  margin-left: 1px;\r\n}\r\n\r\n.form-group {\r\n  flex: 1;\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin: 0 15px;\r\n}\r\n\r\n.form-group:first-child {\r\n  margin-left: 0;\r\n}\r\n\r\n.form-group:last-child {\r\n  margin-right: 0;\r\n}\r\n\r\nlabel {\r\n  margin-bottom: 5px;\r\n  font-weight: bold;\r\n}\r\n\r\ninput, select, textarea {\r\n  padding: 10px;\r\n  border: 1px solid #dcdfe6;\r\n  border-radius: 4px;\r\n  font-size: 14px;\r\n  width: 100%;\r\n}\r\n\r\ntextarea {\r\n  resize: vertical;\r\n}\r\n\r\ntextarea#question, textarea#answer, textarea#analysis {\r\n  height: 100px;\r\n}\r\n\r\n.submit-button {\r\n  background-color: #409eff;\r\n  color: #fff;\r\n  padding: 10px 20px;\r\n  border: none;\r\n  border-radius: 4px;\r\n  font-size: 16px;\r\n  cursor: pointer;\r\n  align-self: center;\r\n  margin-top: 20px;\r\n}\r\n\r\n.submit-button:hover {\r\n  background-color: #66b1ff;\r\n}\r\n\r\n\r\n.pagination {\r\n  position: absolute;\r\n  bottom: 40px; /* 距离底部的距离 */\r\n  left: 57%; /* 水平居中 */\r\n  transform: translateX(-50%); /* 水平居中 */\r\n  display: flex;\r\n  justify-content: space-between;\r\n  width: 200px; /* 指定pagination的宽度 */\r\n}\r\n\r\n.pagination button {\r\n  background-color: #409eff;\r\n  color: #fff;\r\n  padding: 5px 10px;\r\n  border: none;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n  width: 80px; /* 指定按钮的宽度 */\r\n}\r\n\r\n.pagination button:disabled {\r\n  background-color: #a0cfff;\r\n}\r\n\r\n</style>\r\n"],"mappings":"AA+CA,SAASA,UAAU,EAAEC,QAAO,QAAS,MAAM;AAE3C,eAAe;EACbC,IAAI,EAAE,gBAAgB;EACtBC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,aAAa,EAAE,EAAE;MACjBC,kBAAkB,EAAE,EAAE;MACtBC,gBAAgB,EAAE,EAAE;MACpBC,WAAW,EAAE,CAAC;MACdC,QAAQ,EAAE;IACZ,CAAC;EACH,CAAC;EACDC,QAAQ,EAAE;IACR,GAAGR,QAAQ,CAAC,CAAC,WAAW,CAAC,CAAC;IAC1BS,iBAAiBA,CAAA,EAAG;MAClB,OAAO,IAAI,CAACC,SAAS,CAACC,MAAM,CAACC,QAAO,IAAK;QACvC,MAAMC,cAAa,GAAID,QAAQ,CAACA,QAAQ,CAACE,QAAQ,CAAC,IAAI,CAACX,aAAa,CAAC;QACrE,MAAMY,WAAU,GAAI,IAAI,CAACX,kBAAiB,GAAIQ,QAAQ,CAACI,YAAW,KAAM,IAAI,CAACZ,kBAAiB,GAAI,IAAI;QACtG,MAAMa,iBAAgB,GAAI,IAAI,CAACZ,gBAAe,GAAIO,QAAQ,CAACM,UAAS,KAAM,IAAI,CAACb,gBAAe,GAAI,IAAI;QACtG,OAAOQ,cAAa,IAAKE,WAAU,IAAKE,iBAAiB;MAC3D,CAAC,CAAC;IACJ,CAAC;IACDE,UAAUA,CAAA,EAAG;MACX,OAAOC,IAAI,CAACC,IAAI,CAAC,IAAI,CAACZ,iBAAiB,CAACa,MAAK,GAAI,IAAI,CAACf,QAAQ,CAAC;IACjE,CAAC;IACDgB,kBAAkBA,CAAA,EAAG;MACnB,MAAMC,KAAI,GAAI,CAAC,IAAI,CAAClB,WAAU,GAAI,CAAC,IAAI,IAAI,CAACC,QAAQ;MACpD,OAAO,IAAI,CAACE,iBAAiB,CAACgB,KAAK,CAACD,KAAK,EAAEA,KAAI,GAAI,IAAI,CAACjB,QAAQ,CAAC;IACnE;EACF,CAAC;EACDmB,OAAO,EAAE;IACP,GAAG3B,UAAU,CAAC,CAAC,gBAAgB,CAAC,CAAC;IACjC4B,eAAeA,CAAA,EAAG;MAChB,IAAI,CAACrB,WAAU,GAAI,CAAC;IACtB,CAAC;IACDsB,QAAQA,CAAA,EAAG;MACT,IAAI,IAAI,CAACtB,WAAU,GAAI,CAAC,EAAE;QACxB,IAAI,CAACA,WAAW,EAAE;MACpB;IACF,CAAC;IACDuB,QAAQA,CAAA,EAAG;MACT,IAAI,IAAI,CAACvB,WAAU,GAAI,IAAI,CAACa,UAAU,EAAE;QACtC,IAAI,CAACb,WAAW,EAAE;MACpB;IACF;EACF,CAAC;EACDwB,OAAOA,CAAA,EAAG;IACR,IAAI,CAACC,cAAc,CAAC,CAAC;EACvB;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}