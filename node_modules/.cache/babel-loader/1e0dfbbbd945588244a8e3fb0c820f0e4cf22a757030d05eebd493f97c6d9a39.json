{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { mapState, mapMutations, mapGetters, mapActions } from 'vuex';\nimport { ElMessage } from 'element-plus';\nimport { ref } from 'vue';\n\n// const value = ref(Date.now() + 100 * 60 * 60 * 7)\n// const value10 = ref(Date.now() + 1000 * 60 * 60 * 7); // 这里设置倒计时为7小时\n// const value10 = 100000;\n\nconst loading = ref(false);\nconst svg = `\n<path class=\"path\" d=\"\n  M 30 15\n  L 28 17\n  M 25.61 25.61\n  A 15 15, 0, 0, 1, 15 30\n  A 15 15, 0, 1, 1, 27.99 7.5\n  L 15 15\n\" style=\"stroke-width: 4px; fill: rgba(0, 0, 0, 0)\"/>\n`;\nexport default {\n  data() {\n    return {\n      currentQuestionIndex: 0,\n      _user: {\n        avatar: 'https://placehold.co/100x100',\n        name: 'baymax',\n        university: '哈尔滨工业大学',\n        id: '270123456'\n      },\n      questionStatus: {},\n      totalCount: 0,\n      // timeRemaining: '12641:36:25',\n      startTime: '2022-12-06 09:59:00',\n      endTime: '2022-12-09 09:59:00',\n      // value10: null,\n      showCountdown: false // 新添加的布尔值\n      // value10: ref(Date.now() + 1000 * 60 * 1),\n    };\n  },\n  computed: {\n    ...mapState(['examQuestions', 'examAnswers', 'examInfo', 'user', 'totalCount2']),\n    ...mapGetters(['getExamAnswer', 'getAnsweredCount']),\n    // value10(){\n    //   // this.value10.value = Date.now() + 1000 * 60 * this.examInfo.durationTime\n    //   console.log(\"eeeeeee2:\", ref(Date.now() + 1000 * 60 * this.examInfo.durationTime))\n    //   return ref(Date.now() + 1000 * 60 * this.examInfo.durationTime);\n\n    // },\n    totalCount() {\n      return this.totalCount2;\n    },\n    value10() {\n      return Date.now() + 1000 * 60 * this.examInfo.durationTime;\n    },\n    currentQuestion() {\n      return this.examQuestions[this.currentQuestionIndex];\n    },\n    answeredCount() {\n      return this.getAnsweredCount;\n    },\n    singleChoiceIndexes() {\n      return this.examQuestions.map((question, index) => ({\n        question,\n        index\n      })).filter(item => item.question.type === '选择题').map(item => item.index);\n    },\n    fillInBlankIndexes() {\n      return this.examQuestions.map((question, index) => ({\n        question,\n        index\n      })).filter(item => item.question.type === '填空题').map(item => item.index);\n    },\n    trueFalseIndexes() {\n      return this.examQuestions.map((question, index) => ({\n        question,\n        index\n      })).filter(item => item.question.type === '判断题').map(item => item.index);\n    },\n    essayIndexes() {\n      return this.examQuestions.map((question, index) => ({\n        question,\n        index\n      })).filter(item => item.question.type === '问答题').map(item => item.index);\n    },\n    singleChoiceQuestions() {\n      return this.examQuestions.filter(q => q.type === '选择题');\n    },\n    fillInBlankQuestions() {\n      return this.examQuestions.filter(q => q.type === '填空题');\n    },\n    trueFalseQuestions() {\n      return this.examQuestions.filter(q => q.type === '判断题');\n    },\n    essayQuestions() {\n      return this.examQuestions.filter(q => q.type === '问答题');\n    }\n  },\n  methods: {\n    ...mapMutations(['setExamAnswer', 'submitExamAnswer']),\n    ...mapActions(['submitExamAnswer', 'addPaper', 'addQuestionToPaper', 'removeFromPaper', 'fetchPaperQuestion', 'updatePaperQuestions', 'deletePaper', 'fetchPapersPages']),\n    previousQuestion() {\n      if (this.currentQuestionIndex > 0) {\n        this.currentQuestionIndex--;\n      }\n    },\n    async submit() {\n      const loadingInstance = this.$loading({\n        lock: true,\n        text: 'Loading...',\n        spinner: svg,\n        // 使用自定义 SVG 图案\n        background: 'rgba(0, 0, 0, 0.7)',\n        customClass: 'custom-loading-svg' // 自定义样式类名\n      });\n      await this.submitExamAnswer(this.examAnswers);\n      setTimeout(() => {\n        loadingInstance.close();\n        this.$router.push('/test3');\n      }, 700);\n    },\n    nextQuestion() {\n      if (this.currentQuestionIndex < this.examQuestions.length - 1) {\n        this.currentQuestionIndex++;\n      }\n    },\n    selectOption(questionId, option) {\n      this.setExamAnswer({\n        questionId,\n        answer: option\n      });\n      this.updateQuestionStatus(questionId); // 调用更新状态的方法\n    },\n    updateAnswer(questionId, answer) {\n      this.setExamAnswer({\n        questionId,\n        answer\n      });\n      this.updateQuestionStatus(questionId); // 调用更新状态的方法\n    },\n    updateQuestionStatus(questionId) {\n      this.questionStatus[questionId] = !!this.getExamAnswer(questionId);\n    },\n    isOptionSelected(questionId, option) {\n      return this.getExamAnswer(questionId) === option;\n    },\n    cleanedDescription(description) {\n      const regex = /^选择题\\d+、|填空题\\d+、|判断题\\d+、|问答题\\d+、/;\n      return description;\n    },\n    extractedOptions(description) {\n      const options = description.match(/A\\..*?B\\..*?C\\..*?D\\..*/);\n      if (options) {\n        return options[0].split(/(?=[A-D]\\.)/).map(opt => opt.trim());\n      }\n      return [];\n    },\n    previewExam() {\n      ElMessage({\n        message: '即将打开整卷预览功能',\n        type: 'info'\n      });\n    },\n    goToQuestion(index) {\n      this.currentQuestionIndex = index;\n    }\n  },\n  mounted() {\n    console.log(\"eeeeeee:\", this.user);\n    this.value10 = Date.now() + 1000 * 60 * this.examInfo.durationTime;\n    this.showCountdown = true;\n  }\n};","map":{"version":3,"names":["mapState","mapMutations","mapGetters","mapActions","ElMessage","ref","loading","svg","data","currentQuestionIndex","_user","avatar","name","university","id","questionStatus","totalCount","startTime","endTime","showCountdown","computed","totalCount2","value10","Date","now","examInfo","durationTime","currentQuestion","examQuestions","answeredCount","getAnsweredCount","singleChoiceIndexes","map","question","index","filter","item","type","fillInBlankIndexes","trueFalseIndexes","essayIndexes","singleChoiceQuestions","q","fillInBlankQuestions","trueFalseQuestions","essayQuestions","methods","previousQuestion","submit","loadingInstance","$loading","lock","text","spinner","background","customClass","submitExamAnswer","examAnswers","setTimeout","close","$router","push","nextQuestion","length","selectOption","questionId","option","setExamAnswer","answer","updateQuestionStatus","updateAnswer","getExamAnswer","isOptionSelected","cleanedDescription","description","regex","extractedOptions","options","match","split","opt","trim","previewExam","message","goToQuestion","mounted","console","log","user"],"sources":["C:\\Users\\86139\\Desktop\\demo_vue\\src\\views\\OnlineExamView.vue"],"sourcesContent":["<template>\r\n  <div class=\"min-h-screen flex flex-col bg-zinc-100 dark:bg-zinc-900\">\r\n    <header class=\"bg-zinc-800 text-white p-4 flex justify-between items-center custom-header\">\r\n      <h1 class=\"text-lg\">考试</h1>\r\n      <button @click=\"submit\" class=\"bg-teal-500 text-white px-4 py-2 rounded\">提交试卷</button>\r\n    </header>\r\n    <div class=\"flex flex-1\">\r\n      <aside class=\"w-1 bg-white dark:bg-zinc-800 p-4\">\r\n        <div class=\"flex flex-col items-center mb-4\">\r\n          <img :src=\"_user.avatar\" alt=\"User\" class=\"rounded-full mb-2\" />\r\n          <div class=\"text-center\">\r\n            <p class=\"text-lg font-bold\">{{ this.user.username }}</p>\r\n            <p class=\"text-sm text-zinc-500\">{{ _user.university }}</p>\r\n            <p class=\"text-sm text-blue-500\">{{ this.user.id }}</p>\r\n          </div>\r\n        </div>\r\n        <div class=\"bg-zinc-100 dark:bg-zinc-700 p-4 rounded mb-4\">\r\n          <p class=\"text-center text-zinc-500\">\r\n            已答: <span class=\"text-black dark:text-white\">{{ answeredCount }}</span> 题数:\r\n            <span class=\"text-black dark:text-white\">{{ totalCount }}</span>\r\n          </p>\r\n        </div>\r\n        <div class=\"bg-zinc-100 dark:bg-zinc-700 p-4 rounded mb-4\">\r\n          <!-- <p class=\"text-center text-xl font-bold\">{{ timeRemaining }}</p> -->\r\n          <div v-if=\"showCountdown\">\r\n  <el-countdown title=\"Start to grab\" :value=this.value10 @finish=\"submit\" />\r\n</div>\r\n\r\n          <p class=\"text-sm text-zinc-500\">开始时间: {{ this.examInfo.startTime }}</p>\r\n          <p class=\"text-sm text-zinc-500\">结束时间: {{ this.examInfo.endTime }}</p>\r\n        </div>\r\n      </aside>\r\n\r\n      <main class=\"flex-1 bg-white dark:bg-zinc-800 p-4\">\r\n        <div class=\"flex justify-between items-center mb-4\">\r\n          <el-button size=\"large\" @click=\"previousQuestion\" :disabled=\"currentQuestionIndex === 0\" class=\"bg-zinc-200 dark:bg-zinc-700 text-zinc-700 dark:text-zinc-300 px-4 py-2 rounded\">\r\n            上一题\r\n          </el-button>\r\n          <el-button size=\"large\" @click=\"nextQuestion\" :disabled=\"currentQuestionIndex === examQuestions.length - 1\" class=\"bg-teal-500 text-white px-4 py-2 rounded\">\r\n            下一题\r\n          </el-button>\r\n        </div>\r\n        <div class=\"mb-4\">\r\n          <p class=\"text-lg\">{{ cleanedDescription(currentQuestion.description) }}</p>\r\n          <div v-if=\"currentQuestion.type === '选择题'\" class=\"mt-4\">\r\n            <div v-for=\"(option, index) in extractedOptions(currentQuestion.description)\" :key=\"index\">\r\n              <label class=\"block mb-2\">\r\n                <input type=\"radio\" :name=\"`question-${currentQuestion.id}`\" class=\"mr-2\" :value=\"option\" @change=\"selectOption(currentQuestion.id, option)\" :checked=\"isOptionSelected(currentQuestion.id, option)\" /> {{ option }}\r\n              </label>\r\n            </div>\r\n          </div>\r\n          <div v-else-if=\"currentQuestion.type === '填空题'\" class=\"mt-4\">\r\n            <label class=\"block mb-2\">\r\n              <input type=\"text\" class=\"w-full p-2 border border-zinc-300 rounded\" @input=\"updateAnswer(currentQuestion.id, $event.target.value)\" :value=\"getExamAnswer(currentQuestion.id)\" />\r\n            </label>\r\n          </div>\r\n          <div v-else-if=\"currentQuestion.type === '判断题'\" class=\"mt-4\">\r\n            <label class=\"block mb-2\">\r\n              <input type=\"radio\" :name=\"`question-${currentQuestion.id}`\" class=\"mr-2\" value=\"正确\" @change=\"selectOption(currentQuestion.id, '正确')\" :checked=\"isOptionSelected(currentQuestion.id, '正确')\" /> 正确\r\n            </label>\r\n            <label class=\"block mb-2\">\r\n              <input type=\"radio\" :name=\"`question-${currentQuestion.id}`\" class=\"mr-2\" value=\"错误\" @change=\"selectOption(currentQuestion.id, '错误')\" :checked=\"isOptionSelected(currentQuestion.id, '错误')\" /> 错误\r\n            </label>\r\n          </div>\r\n          <div v-else-if=\"currentQuestion.type === '问答题'\" class=\"mt-4\">\r\n            <label class=\"block mb-2\">\r\n              <textarea class=\"w-full p-2 border border-zinc-300 rounded\" rows=\"4\" @input=\"updateAnswer(currentQuestion.id, $event.target.value)\">{{ getExamAnswer(currentQuestion.id) }}</textarea>\r\n            </label>\r\n          </div>\r\n        </div>\r\n      </main>\r\n\r\n      <aside class=\"w-1 bg-white dark:bg-zinc-800 p-4\">\r\n        <div class=\"mb-4\">\r\n          <p class=\"text-center text-zinc-500\">作答状态</p>\r\n          <div class=\"flex justify-around mt-2\">\r\n            <span class=\"bg-zinc-300 dark:bg-zinc-600 w-4 h-4 rounded-full inline-block\"></span>\r\n            未作答\r\n            <span class=\"bg-orange-300 dark:bg-orange-600 w-4 h-4 rounded-full inline-block\"></span>\r\n            未答完\r\n            <span class=\"bg-green-300 dark:bg-green-600 w-4 h-4 rounded-full inline-block\"></span>\r\n            已作答\r\n          </div>\r\n        </div>\r\n  <div class=\"mb-4\">\r\n    <p class=\"text-center text-zinc-500\">单选题</p>\r\n    <div class=\"grid grid-cols-5 gap-2\">\r\n            <el-button\r\n        v-for=\"index in singleChoiceIndexes\"\r\n        :key=\"index\"\r\n        @click=\"goToQuestion(index)\"\r\n        :class=\"{\r\n          'bg-green-300': questionStatus[examQuestions[index].id],  // 已作答\r\n          'bg-zinc-300': !questionStatus[examQuestions[index].id]   // 未作答\r\n        }\"\r\n      >\r\n        {{ index + 1 }}\r\n      </el-button>\r\n    </div>\r\n  </div>\r\n  <div class=\"mb-4\">\r\n    <p class=\"text-center text-zinc-500\">填空题</p>\r\n    <div class=\"grid grid-cols-5 gap-2\">\r\n            <el-button\r\n        v-for=\"index in fillInBlankIndexes\"\r\n        :key=\"index\"\r\n        @click=\"goToQuestion(index)\"\r\n        :class=\"{\r\n          'bg-green-300': questionStatus[examQuestions[index].id],  // 已作答\r\n          'bg-zinc-300': !questionStatus[examQuestions[index].id]   // 未作答\r\n        }\"\r\n      >\r\n\r\n        {{ index + 1 }}\r\n      </el-button>\r\n    </div>\r\n  </div>\r\n  <div class=\"mb-4\">\r\n    <p class=\"text-center text-zinc-500\">判断题</p>\r\n    <div class=\"grid grid-cols-5 gap-2\">\r\n            <el-button\r\n        v-for=\"index in trueFalseIndexes\"\r\n        :key=\"index\"\r\n        @click=\"goToQuestion(index)\"\r\n        :class=\"{\r\n          'bg-green-300': questionStatus[examQuestions[index].id],  // 已作答\r\n          'bg-zinc-300': !questionStatus[examQuestions[index].id]   // 未作答\r\n        }\"\r\n      >\r\n\r\n        {{ index + 1 }}\r\n      </el-button>\r\n    </div>\r\n  </div>\r\n  <div>\r\n    <p class=\"text-center text-zinc-500\">问答题</p>\r\n    <div class=\"grid grid-cols-5 gap-2\">\r\n            <el-button\r\n        v-for=\"index in essayIndexes\"\r\n        :key=\"index\"\r\n        @click=\"goToQuestion(index)\"\r\n        :class=\"{\r\n          'bg-green-300': questionStatus[examQuestions[index].id],  // 已作答\r\n          'bg-zinc-300': !questionStatus[examQuestions[index].id]   // 未作答\r\n        }\"\r\n      >\r\n        {{ index + 1 }}\r\n      </el-button>\r\n    </div>\r\n  </div>\r\n      </aside>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { mapState, mapMutations, mapGetters, mapActions } from 'vuex';\r\nimport { ElMessage } from 'element-plus';\r\nimport { ref } from 'vue';\r\n\r\n// const value = ref(Date.now() + 100 * 60 * 60 * 7)\r\n// const value10 = ref(Date.now() + 1000 * 60 * 60 * 7); // 这里设置倒计时为7小时\r\n// const value10 = 100000;\r\n\r\nconst loading = ref(false);\r\nconst svg = `\r\n<path class=\"path\" d=\"\r\n  M 30 15\r\n  L 28 17\r\n  M 25.61 25.61\r\n  A 15 15, 0, 0, 1, 15 30\r\n  A 15 15, 0, 1, 1, 27.99 7.5\r\n  L 15 15\r\n\" style=\"stroke-width: 4px; fill: rgba(0, 0, 0, 0)\"/>\r\n`;\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      currentQuestionIndex: 0,\r\n      _user: {\r\n        avatar: 'https://placehold.co/100x100',\r\n        name: 'baymax',\r\n        university: '哈尔滨工业大学',\r\n        id: '270123456'\r\n      },\r\n      questionStatus: {},\r\n      totalCount: 0,\r\n      // timeRemaining: '12641:36:25',\r\n      startTime: '2022-12-06 09:59:00',\r\n      endTime: '2022-12-09 09:59:00',\r\n      // value10: null,\r\n      showCountdown: false // 新添加的布尔值\r\n      // value10: ref(Date.now() + 1000 * 60 * 1),\r\n    };\r\n  },\r\n  computed: {\r\n    ...mapState(['examQuestions', 'examAnswers', 'examInfo', 'user', 'totalCount2']),\r\n    ...mapGetters(['getExamAnswer', 'getAnsweredCount']),\r\n    // value10(){\r\n    //   // this.value10.value = Date.now() + 1000 * 60 * this.examInfo.durationTime\r\n    //   console.log(\"eeeeeee2:\", ref(Date.now() + 1000 * 60 * this.examInfo.durationTime))\r\n    //   return ref(Date.now() + 1000 * 60 * this.examInfo.durationTime);\r\n      \r\n    // },\r\n    totalCount(){\r\n      return this.totalCount2;\r\n    },\r\n      value10() {\r\n    return Date.now() + 1000 * 60 * this.examInfo.durationTime;\r\n  },\r\n    currentQuestion() {\r\n      return this.examQuestions[this.currentQuestionIndex];\r\n    },\r\n    answeredCount() {\r\n      return this.getAnsweredCount;\r\n    },\r\n      singleChoiceIndexes() {\r\n    return this.examQuestions\r\n      .map((question, index) => ({ question, index }))\r\n      .filter(item => item.question.type === '选择题')\r\n      .map(item => item.index);\r\n  },\r\n  fillInBlankIndexes() {\r\n    return this.examQuestions\r\n      .map((question, index) => ({ question, index }))\r\n      .filter(item => item.question.type === '填空题')\r\n      .map(item => item.index);\r\n  },\r\n  trueFalseIndexes() {\r\n    return this.examQuestions\r\n      .map((question, index) => ({ question, index }))\r\n      .filter(item => item.question.type === '判断题')\r\n      .map(item => item.index);\r\n  },\r\n  essayIndexes() {\r\n    return this.examQuestions\r\n      .map((question, index) => ({ question, index }))\r\n      .filter(item => item.question.type === '问答题')\r\n      .map(item => item.index);\r\n  },\r\n    singleChoiceQuestions() {\r\n      return this.examQuestions.filter(q => q.type === '选择题');\r\n    },\r\n    fillInBlankQuestions() {\r\n      return this.examQuestions.filter(q => q.type === '填空题');\r\n    },\r\n    trueFalseQuestions() {\r\n      return this.examQuestions.filter(q => q.type === '判断题');\r\n    },\r\n    essayQuestions() {\r\n      return this.examQuestions.filter(q => q.type === '问答题');\r\n    }\r\n  },\r\n  methods: {\r\n    ...mapMutations(['setExamAnswer', 'submitExamAnswer']),\r\n    ...mapActions(['submitExamAnswer', 'addPaper', 'addQuestionToPaper', 'removeFromPaper', 'fetchPaperQuestion', 'updatePaperQuestions', 'deletePaper', 'fetchPapersPages']),\r\n\r\n    previousQuestion() {\r\n      if (this.currentQuestionIndex > 0) {\r\n        this.currentQuestionIndex--;\r\n      }\r\n    },\r\n    async submit() {\r\n      const loadingInstance = this.$loading({\r\n        lock: true,\r\n        text: 'Loading...',\r\n        spinner: svg, // 使用自定义 SVG 图案\r\n        background: 'rgba(0, 0, 0, 0.7)',\r\n        customClass: 'custom-loading-svg', // 自定义样式类名\r\n      });\r\n\r\n      await this.submitExamAnswer(this.examAnswers);\r\n\r\n      setTimeout(() => {\r\n        loadingInstance.close();\r\n        this.$router.push('/test3');\r\n      }, 700);\r\n    },\r\n    nextQuestion() {\r\n      if (this.currentQuestionIndex < this.examQuestions.length - 1) {\r\n        this.currentQuestionIndex++;\r\n      }\r\n    },\r\n    selectOption(questionId, option) {\r\n      this.setExamAnswer({ questionId, answer: option });\r\n      this.updateQuestionStatus(questionId);  // 调用更新状态的方法\r\n    },\r\n    updateAnswer(questionId, answer) {\r\n      this.setExamAnswer({ questionId, answer });\r\n      this.updateQuestionStatus(questionId);  // 调用更新状态的方法\r\n    },\r\n    updateQuestionStatus(questionId) {\r\n      this.questionStatus[questionId] = !!this.getExamAnswer(questionId);\r\n    },\r\n    isOptionSelected(questionId, option) {\r\n      return this.getExamAnswer(questionId) === option;\r\n    },\r\n    cleanedDescription(description) {\r\n      const regex = /^选择题\\d+、|填空题\\d+、|判断题\\d+、|问答题\\d+、/;\r\n      return description;\r\n    },\r\n    extractedOptions(description) {\r\n      const options = description.match(/A\\..*?B\\..*?C\\..*?D\\..*/);\r\n      if (options) {\r\n        return options[0].split(/(?=[A-D]\\.)/).map(opt => opt.trim());\r\n      }\r\n      return [];\r\n    },\r\n    previewExam() {\r\n      ElMessage({\r\n        message: '即将打开整卷预览功能',\r\n        type: 'info'\r\n      });\r\n    },\r\n    goToQuestion(index) {\r\n      this.currentQuestionIndex = index;\r\n    }\r\n  },\r\n  mounted() {\r\n      console.log(\"eeeeeee:\", this.user)\r\n      \r\n      this.value10 = Date.now() + 1000 * 60 * this.examInfo.durationTime;\r\n      this.showCountdown = true;\r\n  }\r\n};\r\n</script>\r\n\r\n\r\n\r\n\r\n<style scoped>\r\n.min-h-screen {\r\n  min-height: 100vh;\r\n}\r\n\r\n.bg-zinc-100 {\r\n  background-color: #f5f5f5;\r\n}\r\n\r\n.dark .bg-zinc-900 {\r\n  background-color: #1a1a1a;\r\n}\r\n\r\n.bg-zinc-800 {\r\n  background-color: #2d2d2d;\r\n}\r\n\r\n.text-white {\r\n  color: #fff;\r\n}\r\n\r\n.p-4 {\r\n  padding: 1rem;\r\n}\r\n\r\n.flex {\r\n  display: flex;\r\n}\r\n\r\n.justify-between {\r\n  justify-content: space-between;\r\n}\r\n\r\n.items-center {\r\n  align-items: center;\r\n}\r\n\r\n.text-lg {\r\n  font-size: 1.125rem;\r\n}\r\n\r\n.bg-teal-500 {\r\n  background-color: #38b2ac;\r\n}\r\n\r\n.px-4 {\r\n  padding-left: 1rem;\r\n  padding-right: 1rem;\r\n}\r\n\r\n.py-2 {\r\n  padding-top: 0.5rem;\r\n  padding-bottom: 0.5rem;\r\n}\r\n\r\n.rounded {\r\n  border-radius: 0.25rem;\r\n}\r\n\r\n.w-1 {\r\n  width: 20%;\r\n}\r\n\r\n.bg-white {\r\n  background-color: #fff;\r\n}\r\n\r\n.dark .bg-zinc-800 {\r\n  background-color: #2d2d2d;\r\n}\r\n\r\n.flex-col {\r\n  flex-direction: column;\r\n}\r\n\r\n.mb-4 {\r\n  margin-bottom: 1rem;\r\n}\r\n\r\n.rounded-full {\r\n  border-radius: 9999px;\r\n}\r\n\r\n.text-center {\r\n  text-align: center;\r\n}\r\n\r\n.font-bold {\r\n  font-weight: 700;\r\n}\r\n\r\n.text-sm {\r\n  font-size: 0.875rem;\r\n}\r\n\r\n.text-zinc-500 {\r\n  color: #737373;\r\n}\r\n\r\n.text-blue-500 {\r\n  color: #4299e1;\r\n}\r\n\r\n.bg-zinc-100 {\r\n  background-color: #f5f5f5;\r\n}\r\n\r\n.dark .bg-zinc-700 {\r\n  background-color: #3d3d3d;\r\n}\r\n\r\n.text-black {\r\n  color: #000;\r\n}\r\n\r\n.dark .text-white {\r\n  color: #fff;\r\n}\r\n\r\n.text-xl {\r\n  font-size: 1.25rem;\r\n}\r\n\r\n.grid {\r\n  display: grid;\r\n}\r\n\r\n.grid-cols-4 {\r\n  grid-template-columns: repeat(4, 1fr);\r\n}\r\n\r\n.gap-2 {\r\n  gap: 0.5rem;\r\n}\r\n\r\n.bg-teal-500 {\r\n  background-color: #38b2ac;\r\n}\r\n\r\n.dark .text-zinc-300 {\r\n  color: #d1d1d1;\r\n}\r\n\r\n.text-zinc-700 {\r\n  color: #525252;\r\n}\r\n\r\n.text-zinc-300 {\r\n  color: #d1d1d1;\r\n}\r\n\r\n.dark .bg-zinc-700 {\r\n  background-color: #3d3d3d;\r\n}\r\n\r\n.block {\r\n  display: block;\r\n}\r\n\r\n.mt-4 {\r\n  margin-top: 1rem;\r\n}\r\n\r\n.mr-2 {\r\n  margin-right: 0.5rem;\r\n}\r\n\r\n.flex-1 {\r\n  flex: 1;\r\n}\r\n\r\n.w-4 {\r\n  width: 1rem;\r\n}\r\n\r\n.h-4 {\r\n  height: 1rem;\r\n}\r\n\r\n.rounded-full {\r\n  border-radius: 9999px;\r\n}\r\n\r\n.inline-block {\r\n  display: inline-block;\r\n}\r\n\r\n.bg-zinc-300 {\r\n  background-color: #d1d1d1;\r\n}\r\n\r\n.dark .bg-zinc-600 {\r\n  background-color: #525252;\r\n}\r\n\r\n.bg-orange-300 {\r\n  background-color: #f6ad55;\r\n}\r\n\r\n.dark .bg-orange-600 {\r\n  background-color: #dd6b20;\r\n}\r\n\r\n.bg-green-300 {\r\n  background-color: #9ae6b4;\r\n}\r\n\r\n.dark .bg-green-600 {\r\n  background-color: #48bb78;\r\n}\r\n\r\n.grid-cols-5 {\r\n  grid-template-columns: repeat(5, 1fr);\r\n}\r\n\r\n.border {\r\n  border-width: 1px;\r\n}\r\n\r\n.border-zinc-300 {\r\n  border-color: #d1d1d1;\r\n}\r\n\r\n.custom-header {\r\n  height: 25px;\r\n  background-color: #606266;\r\n}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}