{"ast":null,"code":"import { createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-004d7672\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"public\"\n};\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"span\", {\n  class: \"title\"\n}, \"可见状态：\", -1 /* HOISTED */));\nconst _hoisted_3 = {\n  class: \"public\"\n};\nconst _hoisted_4 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"span\", {\n  class: \"title\"\n}, \"题目分值：\", -1 /* HOISTED */));\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_a_button = _resolveComponent(\"a-button\");\n  const _component_icon_delete = _resolveComponent(\"icon-delete\");\n  const _component_a_radio = _resolveComponent(\"a-radio\");\n  const _component_a_radio_group = _resolveComponent(\"a-radio-group\");\n  const _component_a_input_number = _resolveComponent(\"a-input-number\");\n  return _openBlock(), _createBlock($setup[\"BaseQuestionPreview\"], {\n    mode: \"editor\",\n    onEditorBlur: $setup.handleBlur,\n    question: $setup.question,\n    \"show-area\": true,\n    \"topic-type\": $props.topicType,\n    options: $setup.options\n  }, {\n    option_footer: _withCtx(() => [_createVNode(_component_a_button, {\n      long: \"\",\n      onClick: $setup.addOption\n    }, {\n      default: _withCtx(() => [_createTextVNode(\"添加选项\")]),\n      _: 1 /* STABLE */\n    })]),\n    option: _withCtx(({\n      index\n    }) => [_createVNode(_component_a_button, {\n      onClick: $event => $setup.delOption(index),\n      status: \"danger\",\n      style: {\n        \"margin-right\": \"5px\"\n      }\n    }, {\n      icon: _withCtx(() => [_createVNode(_component_icon_delete)]),\n      _: 2 /* DYNAMIC */\n    }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"onClick\"]), _createVNode(_component_a_button, {\n      class: \"letter\",\n      onClick: $event => $setup.saveCorrect(index)\n    }, {\n      default: _withCtx(() => [_createTextVNode(_toDisplayString($setup.options[index].answer != null ? \"取消选择\" : \"选择\"), 1 /* TEXT */)]),\n      _: 2 /* DYNAMIC */\n    }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"onClick\"])]),\n    footer: _withCtx(() => [_createElementVNode(\"div\", _hoisted_1, [_hoisted_2, _createVNode(_component_a_radio_group, {\n      type: \"button\",\n      onChange: _cache[0] || (_cache[0] = $event => $setup.saveQuestion('isPublic')),\n      \"default-value\": \"self\",\n      \"model-value\": $setup.question.isPublic,\n      \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $setup.question.isPublic = $event)\n    }, {\n      default: _withCtx(() => [_createVNode(_component_a_radio, {\n        value: \"self\"\n      }, {\n        default: _withCtx(() => [_createTextVNode(\"自己\")]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_a_radio, {\n        value: \"course\"\n      }, {\n        default: _withCtx(() => [_createTextVNode(\"课程\")]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_a_radio, {\n        value: \"overt\"\n      }, {\n        default: _withCtx(() => [_createTextVNode(\"公开\")]),\n        _: 1 /* STABLE */\n      })]),\n      _: 1 /* STABLE */\n    }, 8 /* PROPS */, [\"model-value\"])]), _createElementVNode(\"div\", _hoisted_3, [_hoisted_4, _createVNode(_component_a_input_number, {\n      style: {\n        width: '170px'\n      },\n      modelValue: $setup.question.score,\n      \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $setup.question.score = $event),\n      onBlur: _cache[3] || (_cache[3] = $event => $setup.saveQuestion('score')),\n      placeholder: \"输入分值\",\n      \"default-value\": 5,\n      mode: \"button\",\n      class: \"input-demo\"\n    }, null, 8 /* PROPS */, [\"modelValue\"])]), $setup.isCreate ? (_openBlock(), _createBlock(_component_a_button, {\n      key: 0,\n      long: \"\",\n      type: \"primary\",\n      size: \"large\",\n      onClick: $setup.createQuestion\n    }, {\n      default: _withCtx(() => [_createTextVNode(\"保存\")]),\n      _: 1 /* STABLE */\n    })) : _createCommentVNode(\"v-if\", true)]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"question\", \"topic-type\", \"options\"]);\n}","map":{"version":3,"names":["class","_createElementVNode","_createBlock","$setup","mode","onEditorBlur","handleBlur","question","$props","topicType","options","option_footer","_withCtx","_createVNode","_component_a_button","long","onClick","addOption","default","_createTextVNode","_","option","index","$event","delOption","status","style","icon","_component_icon_delete","saveCorrect","_toDisplayString","answer","footer","_hoisted_1","_hoisted_2","_component_a_radio_group","type","onChange","_cache","saveQuestion","isPublic","_component_a_radio","value","_hoisted_3","_hoisted_4","_component_a_input_number","width","modelValue","score","onBlur","placeholder","isCreate","key","size","createQuestion","_createCommentVNode"],"sources":["C:\\Users\\wu\\Desktop\\软工\\springboot_vue\\demo_vue\\src\\components\\QuestionBank.vue"],"sourcesContent":["<template>\r\n  <BaseQuestionPreview mode=\"editor\" @editorBlur=\"handleBlur\" :question=\"question\" :show-area=\"true\" :topic-type=\"topicType\" :options=\"options\">\r\n    <template #option_footer>\r\n      <a-button long @click=\"addOption\">添加选项</a-button>\r\n    </template>\r\n    <template #option=\"{ index }\">\r\n      <a-button @click=\"delOption(index)\" status=\"danger\" style=\"margin-right: 5px;\">\r\n        <template #icon>\r\n          <icon-delete />\r\n        </template>\r\n      </a-button>\r\n      <a-button class=\"letter\" @click=\"saveCorrect(index)\">\r\n        {{ options[index].answer != null ? \"取消选择\" : \"选择\" }}\r\n      </a-button>\r\n    </template>\r\n    <template #footer>\r\n      <div class=\"public\">\r\n        <span class=\"title\">可见状态：</span>\r\n        <a-radio-group type=\"button\" @change=\"saveQuestion('isPublic')\" default-value=\"self\" v-model:model-value=\"question.isPublic\">\r\n          <a-radio value=\"self\">自己</a-radio>\r\n          <a-radio value=\"course\">课程</a-radio>\r\n          <a-radio value=\"overt\">公开</a-radio>\r\n        </a-radio-group>\r\n      </div>\r\n      <div class=\"public\">\r\n        <span class=\"title\">题目分值：</span>\r\n        <a-input-number :style=\"{ width: '170px' }\" v-model=\"question.score\" @blur=\"saveQuestion('score')\" placeholder=\"输入分值\" :default-value=\"5\" mode=\"button\" class=\"input-demo\" />\r\n      </div>\r\n      <a-button v-if=\"isCreate\" long type=\"primary\" size=\"large\" @click=\"createQuestion\">保存</a-button>\r\n    </template>\r\n  </BaseQuestionPreview>\r\n</template>\r\n\r\n<script setup>\r\nimport { Message } from '@arco-design/web-vue';\r\nimport { reactive, ref, computed, watch } from 'vue';\r\nimport { addQuestionRequest, delQuestionItemRequest, delQuestionRequest, updateQuestionItemRequest, updateQuestionCorrectRequest, updateQuestionRequest } from '../apis/question-api';\r\nimport { getQuestionType, letterList } from '../utils/question-config';\r\nimport BaseQuestionPreview from './BaseQuestionPreview.vue';\r\n\r\nconst props = defineProps({\r\n  topicType: String,\r\n  question: {\r\n    type: Object,\r\n    default: () => ({\r\n      content: \"\",\r\n      courseId: \"\",\r\n      difficulty: \"\",\r\n      analysis: \"\",\r\n    })\r\n  },\r\n  options: {\r\n    type: Array,\r\n    default: () => []\r\n  },\r\n});\r\n\r\nconst type = ref(getQuestionType(props.topicType));\r\nconst question = reactive(props.question);\r\nconst isCreate = computed(() => !question.id);\r\nconst options = ref(props.options);\r\n\r\nwatch(() => props.options, (value) => {\r\n  options.value = value;\r\n  init();\r\n});\r\n\r\nconst init = () => {\r\n  if (type.value.enumName === \"SUBJECTIVE\" && options.value.length === 0) {\r\n    options.value.push({ content: \"\" });\r\n  }\r\n  if (type.value.enumName === \"JUDGMENTAL\" && options.value.length === 0) {\r\n    options.value.push({ content: \"对\" }, { content: \"错\" });\r\n  }\r\n};\r\n\r\nconst addOption = () => {\r\n  if (!question.id || options.value.length === 0 || options.value[options.value.length - 1].id !== undefined) {\r\n    options.value.push({ content: \"\" });\r\n  } else {\r\n    Message.info(\"请完成当前选项后再添加~\");\r\n  }\r\n};\r\n\r\nconst delOption = async (index) => {\r\n  if (!isCreate.value) {\r\n    await delQuestionItemRequest(options.value[index].id);\r\n  }\r\n  options.value.splice(index, 1);\r\n};\r\n\r\nconst createQuestion = async () => {\r\n  if (!question.content) {\r\n    Message.info('题目不能为空~');\r\n    return;\r\n  }\r\n  const params = {\r\n    ...question,\r\n    options: options.value,\r\n    type: props.topicType\r\n  };\r\n  await addQuestionRequest(params);\r\n  Message.success('题目创建成功');\r\n};\r\n\r\nconst handleBlur = (component, index) => {\r\n  let questField;\r\n  switch (component) {\r\n    case 'question':\r\n      questField = 'content';\r\n      break;\r\n    case 'analysis':\r\n      questField = 'analysis';\r\n      break;\r\n    case 'difficulty':\r\n      questField = 'difficulty';\r\n      break;\r\n    case 'option':\r\n      saveOption(options.value[index]);\r\n      return;\r\n  }\r\n  saveQuestion(questField);\r\n};\r\n\r\nconst saveQuestion = async (info) => {\r\n  if (isCreate.value) {\r\n    return;\r\n  }\r\n  if (!question[info]) {\r\n    return;\r\n  }\r\n  const params = {\r\n    id: question.id,\r\n    courseId: question.courseId,\r\n    [info]: question[info]\r\n  };\r\n  await updateQuestionRequest(params);\r\n};\r\n\r\nconst saveOption = async (item) => {\r\n  if (isCreate.value) {\r\n    return;\r\n  }\r\n  item.questionId = question.id;\r\n  const res = await updateQuestionItemRequest(item);\r\n  if (res.data) {\r\n    item.id = res.data.data;\r\n  }\r\n};\r\n\r\nconst saveCorrect = async (index) => {\r\n  if (isCreate.value) {\r\n    updateCorrect(index);\r\n    return;\r\n  }\r\n  await updateQuestionCorrectRequest(options.value[index].id);\r\n  updateCorrect(index);\r\n};\r\n\r\nconst updateCorrect = (index) => {\r\n  options.value.forEach((item, i) => {\r\n    if (i === index) {\r\n      item.answer = type.value.enumName === 'MULTIPLE_CHOICE' ? (item.answer ? null : 1) : 1;\r\n    } else if (type.value.enumName !== 'MULTIPLE_CHOICE') {\r\n      item.answer = null;\r\n    }\r\n  });\r\n};\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n:deep(.option-item) {\r\n  flex-wrap: wrap;\r\n}\r\n:deep(.arco-radio), :deep(.arco-checkbox) {\r\n  display: block;\r\n}\r\n:deep(.option-item:hover) {\r\n  background-color: #fff !important;\r\n}\r\n:deep(.question-info .info) {\r\n  float: none !important;\r\n}\r\n.public {\r\n  display: flex;\r\n  align-items: center;\r\n  margin: 10px;\r\n  .title {\r\n    color: var(--color-text-3);\r\n  }\r\n}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}