{"ast":null,"code":"import { computed, watch, watchEffect, ref } from 'vue';\nimport { useRoute, useRouter } from 'vue-router';\nimport HeaderNav from './components/HeaderNav.vue';\nimport useUserStore from './sotre/user-store';\nimport SocketService from './utils/web-stocket-service.js';\nexport default {\n  __name: 'App',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const userStore = useUserStore();\n    const route = useRoute();\n    const router = useRouter();\n    const headerVisible = ref(true);\n    if (userStore.isLogin) {\n      userStore.getUserInfo();\n      userStore.getBaseUserInfo();\n    }\n\n    //登录成功后连接\n    watchEffect(() => {\n      console.log(userStore.isLogin);\n      if (userStore.isLogin) {\n        const socketServe = SocketService.Instance;\n        socketServe.route = route;\n        socketServe.router = router;\n        socketServe.connect();\n        console.log(\"已登录：连接webstock\");\n      }\n    });\n    watch(() => route.name, () => {\n      const meta = route.meta;\n      let title = meta['title'];\n      let header = meta['header'];\n      if (header != undefined) {\n        headerVisible.value = header;\n      } else {\n        headerVisible.value = true;\n      }\n      if (title != undefined) {\n        title = \"-\" + title;\n      }\n      document.title = \"为考\" + (title ?? \"\");\n    });\n    const __returned__ = {\n      userStore,\n      route,\n      router,\n      headerVisible,\n      computed,\n      watch,\n      watchEffect,\n      ref,\n      get useRoute() {\n        return useRoute;\n      },\n      get useRouter() {\n        return useRouter;\n      },\n      HeaderNav,\n      get useUserStore() {\n        return useUserStore;\n      },\n      get SocketService() {\n        return SocketService;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["computed","watch","watchEffect","ref","useRoute","useRouter","HeaderNav","useUserStore","SocketService","userStore","route","router","headerVisible","isLogin","getUserInfo","getBaseUserInfo","console","log","socketServe","Instance","connect","name","meta","title","header","undefined","value","document"],"sources":["C:/Users/wu/Desktop/软工/springboot_vue/demo_vue/src/App.vue"],"sourcesContent":["\n\n<template>\n  <header-nav v-if=\"headerVisible\"></header-nav>\n  <router-view></router-view>\n</template>\n<script setup>\nimport { computed, watch, watchEffect, ref } from 'vue';\nimport { useRoute, useRouter } from 'vue-router';\nimport HeaderNav from './components/HeaderNav.vue';\nimport useUserStore from './sotre/user-store';\nimport SocketService from './utils/web-stocket-service.js'\nconst userStore = useUserStore()\nconst route = useRoute()\nconst router = useRouter()\nconst headerVisible = ref(true)\nif (userStore.isLogin) {\n  userStore.getUserInfo()\n  userStore.getBaseUserInfo()\n}\n\n//登录成功后连接\nwatchEffect(() => {\n  console.log(userStore.isLogin)\n  if (userStore.isLogin) {\n    const socketServe = SocketService.Instance;\n    socketServe.route = route\n    socketServe.router = router;\n    socketServe.connect()\n    console.log(\"已登录：连接webstock\")\n  }\n})\nwatch(() => route.name, () => {\n  const meta = route.meta\n  let title = meta['title']\n  let header = meta['header']\n  if (header != undefined) {\n    headerVisible.value = header\n  } else {\n    headerVisible.value = true;\n  }\n\n  if (title != undefined) {\n    title = \"-\" + title;\n  }\n  document.title = \"为考\" + (title ?? \"\")\n\n})\n</script>\n<style lang=\"less\">\nbody,\ntextarea {\n  font-family: Helvetica Neue, Helvetica, PingFang SC, Microsoft YaHei, Source Han Sans SC, Noto Sans CJK SC, WenQuanYi Micro Hei, sans-serif;\n}\n\n.ebutton-hover {\n  transition: all .3s;\n  border-radius: 5px;\n  cursor: pointer;\n  padding: 15px;\n\n  &:hover {\n    background-color: var(--color-fill-2);\n  }\n}\n\n.arco-page-header-wrapper {\n  padding-left: 0px !important;\n}\n\n.arco-modal-simple .arco-modal-body {\n  overflow: hidden;\n}\n\n.arco-avatar-image img {\n  object-fit: cover;\n}\n\ndiv::-webkit-scrollbar,\nbody::-webkit-scrollbar,\nul::-webkit-scrollbar {\n  /*滚动条整体样式*/\n  width: 5px;\n  /* 高宽分别对应横竖滚动条的尺寸 */\n  height: 1px;\n}\n\ndiv::-webkit-scrollbar-thumb,\nbody::-webkit-scrollbar-thumb,\nul::-webkit-scrollbar-thumb {\n  /*滚动条里面小方块*/\n  border-radius: 10px;\n  box-shadow: inset 0 0 5px rgba(219, 219, 219, 0.5);\n  background: #d6d6d6;\n}\n\ndiv::-webkit-scrollbar-track,\nbody::-webkit-scrollbar-track,\nul::-webkit-scrollbar-track {\n  /*滚动条里面轨道*/\n  box-shadow: inset 0 0 5px rgba(255, 255, 255, 0.8);\n  border-radius: 10px;\n  background: #ffffff;\n}\n\n@media only screen and (max-width: 600px) {\n  .arco-modal-simple {\n    width: 100% !important;\n    box-sizing: border-box;\n  }\n}</style>"],"mappings":"AAOA,SAASA,QAAQ,EAAEC,KAAK,EAAEC,WAAW,EAAEC,GAAG,QAAQ,KAAK;AACvD,SAASC,QAAQ,EAAEC,SAAS,QAAQ,YAAY;AAChD,OAAOC,SAAS,MAAM,4BAA4B;AAClD,OAAOC,YAAY,MAAM,oBAAoB;AAC7C,OAAOC,aAAa,MAAM,gCAAgC;;;;;;;IAC1D,MAAMC,SAAS,GAAGF,YAAY,CAAC,CAAC;IAChC,MAAMG,KAAK,GAAGN,QAAQ,CAAC,CAAC;IACxB,MAAMO,MAAM,GAAGN,SAAS,CAAC,CAAC;IAC1B,MAAMO,aAAa,GAAGT,GAAG,CAAC,IAAI,CAAC;IAC/B,IAAIM,SAAS,CAACI,OAAO,EAAE;MACrBJ,SAAS,CAACK,WAAW,CAAC,CAAC;MACvBL,SAAS,CAACM,eAAe,CAAC,CAAC;IAC7B;;IAEA;IACAb,WAAW,CAAC,MAAM;MAChBc,OAAO,CAACC,GAAG,CAACR,SAAS,CAACI,OAAO,CAAC;MAC9B,IAAIJ,SAAS,CAACI,OAAO,EAAE;QACrB,MAAMK,WAAW,GAAGV,aAAa,CAACW,QAAQ;QAC1CD,WAAW,CAACR,KAAK,GAAGA,KAAK;QACzBQ,WAAW,CAACP,MAAM,GAAGA,MAAM;QAC3BO,WAAW,CAACE,OAAO,CAAC,CAAC;QACrBJ,OAAO,CAACC,GAAG,CAAC,gBAAgB,CAAC;MAC/B;IACF,CAAC,CAAC;IACFhB,KAAK,CAAC,MAAMS,KAAK,CAACW,IAAI,EAAE,MAAM;MAC5B,MAAMC,IAAI,GAAGZ,KAAK,CAACY,IAAI;MACvB,IAAIC,KAAK,GAAGD,IAAI,CAAC,OAAO,CAAC;MACzB,IAAIE,MAAM,GAAGF,IAAI,CAAC,QAAQ,CAAC;MAC3B,IAAIE,MAAM,IAAIC,SAAS,EAAE;QACvBb,aAAa,CAACc,KAAK,GAAGF,MAAM;MAC9B,CAAC,MAAM;QACLZ,aAAa,CAACc,KAAK,GAAG,IAAI;MAC5B;MAEA,IAAIH,KAAK,IAAIE,SAAS,EAAE;QACtBF,KAAK,GAAG,GAAG,GAAGA,KAAK;MACrB;MACAI,QAAQ,CAACJ,KAAK,GAAG,IAAI,IAAIA,KAAK,IAAI,EAAE,CAAC;IAEvC,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}